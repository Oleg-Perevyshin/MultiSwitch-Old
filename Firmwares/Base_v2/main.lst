$0000: $940C:  C: goto $1B43
$0001: $1B43:  
$0002: $9518:  C: RETI
$0003: $0000:  C: NOP
$0004: $9518:  C: RETI
$0005: $0000:  C: NOP
$0006: $9518:  C: RETI
$0007: $0000:  C: NOP
$0008: $9518:  C: RETI
$0009: $0000:  C: NOP
$000A: $9518:  C: RETI
$000B: $0000:  C: NOP
$000C: $940C:  C: goto $306
$000D: $0306:  
$000E: $9518:  C: RETI
$000F: $0000:  C: NOP
$0010: $9518:  C: RETI
$0011: $0000:  C: NOP
$0012: $9518:  C: RETI
$0013: $0000:  C: NOP
$0014: $9518:  C: RETI
$0015: $0000:  C: NOP
$0016: $9518:  C: RETI
$0017: $0000:  C: NOP
$0018: $9518:  C: RETI
$0019: $0000:  C: NOP
$001A: $9518:  C: RETI
$001B: $0000:  C: NOP
$001C: $9518:  C: RETI
$001D: $0000:  C: NOP
$001E: $9518:  C: RETI
$001F: $0000:  C: NOP
$0020: $940C:  C: goto $70
$0021: $0070:  
$0022: $9518:  C: RETI
$0023: $0000:  C: NOP
$0024: $940C:  C: goto $158
$0025: $0158:  
$0026: $940C:  C: goto $1B3
$0027: $01B3:  
$0028: $9518:  C: RETI
$0029: $0000:  C: NOP
$002A: $940C:  C: goto $D5E
$002B: $0D5E:  
$002C: $9518:  C: RETI
$002D: $0000:  C: NOP
$002E: $9518:  C: RETI
$002F: $0000:  C: NOP
$0030: $940C:  C: goto $288
$0031: $0288:  
$0032: $9518:  C: RETI
$0033: $0000:  C: NOP
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Wait.alg    ***********
-----          V: _Wait_ms_
               F: r16:Word ->  ...
$0034: $930F:     r16 ->
$0035: $931F:     r17 ->
-----          L: 
               F: (1000*CPU_Clock_Frequency/1000000-(9+8)-2)/4 -> r16:Word  ...
$0036: $E90B:     $9B -> r16
$0037: $E01F:     $0F -> r17
-----          L: 
               C: if (r16:Word --) then goto $0038 ...
$0038: $5001:     r16 - $01
$0039: $4010:     r17 - $00 -
$003A: $F7E9:     if (Z=0) then goto $38
$003B: $0000:  F: NOP (NOP)
-----          L: 
-----          L: 
-----          L: 
$003C: $0000:  F: NOP (NOP)
-----          L: 
               F: -> r16:Word  ...
$003D: $911F:     -> r17
$003E: $910F:     -> r16
-----          L: 
               F: r16:Word ->  ...
$003F: $930F:     r16 ->
$0040: $931F:     r17 ->
-----          L: 
               F: (1000*CPU_Clock_Frequency/1000000-(4+8)-2)/4 -> r16:Word  ...
$0041: $E90C:     $9C -> r16
$0042: $E01F:     $0F -> r17
-----          L: 
               C: if (r16:Word --) then goto $0043 ...
$0043: $5001:     r16 - $01
$0044: $4010:     r17 - $00 -
$0045: $F7E9:     if (Z=0) then goto $43
$0046: $0000:  F: NOP (NOP)
-----          L: 
-----          L: 
-----          L: 
$0047: $0000:  F: NOP (NOP)
-----          L: 
$0048: $0000:  F: NOP (NOP)
-----          L: 
               F: -> r16:Word  ...
$0049: $911F:     -> r17
$004A: $910F:     -> r16
               C: if (r16:Word --) then goto $003F ...
$004B: $5001:     r16 - $01
$004C: $4010:     r17 - $00 -
$004D: $F789:     if (Z=0) then goto $3F
$004E: $0000:  F: NOP (NOP)
$004F: $9508:  F: RET (ret)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\PWM.alg    ***********
-----          V: _PWM_Event_Cyclic_action
$0050: $932F:  F: r18 -> (Temp ->)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$0051: $D056:  F: rcall $A8 (_EX_Key_Cyclic_Call)
-----          L: 
-----          L: 
-----          L: 
$0052: $D1C9:  F: rcall $21C (_STimer_Cyclic_Call)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\PWM.alg    ***********
-----          L: 
-----          L: 
$0053: $912F:  F: -> r18 (-> Temp)
$0054: $9508:  F: RET (ret)
-----          V: _PWM_Init
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$0055: $E003:  S: $03 -> r16 ($03->r16)
$0056: $BD04:  S: r16 -> p$24 (r16->TCCR0A)
$0057: $E00A:  S: $0A -> r16 ($0A->r16)
$0058: $BD05:  S: r16 -> p$25 (r16->TCCR0B)
               F: CPU_Clock_Frequency/PWM_FREQUENCY/8/256 -> OCR0A  ...
$0059: $E40E:     $4E -> r16
$005A: $BD07:     r16 -> p$27
-----          L: 
$005B: $E001:  S: $01 -> r16 ($01->r16)
$005C: $9300:  S: r16 -> [$006E] (r16->TIMSK0)
$005D: $006E:  
               F: 1 -> TOIE0  ...
$005E: $9100:     [$006E] -> r16
$005F: $006E:  
$0060: $6001:     r16 ! $01
$0061: $9300:     r16 -> [$006E]
$0062: $006E:  
-----          L: 
$0063: $9508:  F: RET (ret)
-----          V: _PWM_All_Levels_Off
               F: Z ->  ...
$0064: $93EF:     r30 ->
$0065: $93FF:     r31 ->
$0066: $E000:  F: $00 -> r16 (0 -> r16)
$0067: $E010:  F: $00 -> r17 (PWM_LINE_NUMB -> r17)
               F: @PWM_Level -> Z  ...
$0068: $E0E0:     $00 -> r30
$0069: $E0F1:     $01 -> r31
-----          L: 
$006A: $9301:  F: r16 -> [Z++] (r16 -> [Z++])
               C: if (r17 --) then goto $006A ...
$006B: $951A:     r17 --
$006C: $F7E9:     if (Z=0) then goto $6A
               F: -> Z  ...
$006D: $91FF:     -> r31
$006E: $91EF:     -> r30
$006F: $9508:  F: RET (ret)
-----          V: Timer_0_Overflow
$0070: $930F:  F: r16 -> (r16 ->)
$0071: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$0072: $B70F:     p$3F -> r16
$0073: $930F:     r16 ->
-----          L: 
-----          L: 
$0074: $9110:  F: [$0100] -> r17 (PWM_Pos -> r17)
$0075: $0100:  
$0076: $9513:  F: r17 ++ (r17 ++)
$0077: $9310:  F: r17 -> [$0100] (r17 -> PWM_Pos)
$0078: $0100:  
               C: if (r17 = 255) then goto $0084 ...
$0079: $3F1F:     r17 = $FF
$007A: $F049:     if (Z=1) then goto $84
-----          L: 
$007B: $7013:  F: r17 & $03 (r17 & #b00000011)
               C: if (r17 = 0) then goto $007F ...
$007C: $3010:     r17 = $00
$007D: $F409:     if (Z=0) then goto $7F
$007E: $D061:  F: rcall $E0 (_EX_Enc_Cyclic_Call)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
               F: -> SREG  ...
$007F: $910F:     -> r16
$0080: $BF0F:     r16 -> p$3F
$0081: $911F:  F: -> r17 (-> r17)
$0082: $910F:  F: -> r16 (-> r16)
$0083: $9518:  F: RETI (reti)
-----          V: 
$0084: $DFCB:  F: rcall $50 (_PWM_Event_Cyclic_action)
-----          L: 
$0085: $CFF9:  J: goto $7F (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\RND.alg    ***********
-----          V: _RND_Next
$0086: $9100:  F: [$0103] -> r16 (RND -> r16)
$0087: $0103:  
$0088: $0F00:  F: << r16 (<<r16)
$0089: $F02B:  C: if (V=1) then goto $8F (V=1)
$008A: $F00D:  C: if (H=1) then goto $8C (H=1)
-----          L: 
$008B: $9503:  F: r16 ++ (r16++)
-----          L: 
$008C: $9300:  F: r16 -> [$0103] (r16 -> RND)
$008D: $0103:  
$008E: $9508:  F: RET (ret)
-----          V: 
$008F: $F3DD:  C: if (H=1) then goto $8B (H=1)
$0090: $CFFB:  J: goto $8C (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\EX_Key.alg    ***********
-----          V: _EX_Key_Event_Hold_0
-----          L: 
               C: if (EX_Key_Hold_Cnt < 70) then goto $009A ...
$0091: $9100:     [$0106] -> r16
$0092: $0106:  
$0093: $3406:     r16 = $46
$0094: $F428:     if ( >= ) then goto $9A
               F: EX_Key_Hold_Cnt++  ...
$0095: $9100:     [$0106] -> r16
$0096: $0106:  
$0097: $9503:     r16 ++
$0098: $9300:     r16 -> [$0106]
$0099: $0106:  
               C: if (EX_Key_Hold_Cnt -= 70) then goto $00A5 ...
$009A: $9100:     [$0106] -> r16
$009B: $0106:  
$009C: $3406:     r16 = $46
$009D: $F439:     if (Z=0) then goto $A5
               F: EX_Key_Hold_Cnt++  ...
$009E: $9100:     [$0106] -> r16
$009F: $0106:  
$00A0: $9503:     r16 ++
$00A1: $9300:     r16 -> [$0106]
$00A2: $0106:  
$00A3: $940E:  F: CALL $99E (_ms_hold)
$00A4: $099E:  
-----          L: 
-----          V: _EX_Key_Event_Hold_1
-----          L: 
-----          V: _EX_Key_Init
$00A5: $9A5D:  F: 1 -> p$0B.5 (1 -> Port_EX_Key_0)
-----          L: 
$00A6: $9A5C:  F: 1 -> p$0B.4 (1 -> Port_EX_Key_1)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$00A7: $9508:  F: RET (ret)
-----          V: _EX_Key_Cyclic_Call
$00A8: $9100:  F: [$0104] -> r16 (EX_Key_Dreb_Cnt[0] -> r16)
$00A9: $0104:  
$00AA: $994D:  C: if (p$09.5=0 then SKIP (Pin_EX_Key_0 = 1)
$00AB: $C00B:  C: goto $B7 (RJMP) (Pin_EX_Key_0 = 1)
               C: if (r16 = EX_KEY_DREB_ITER) then goto $00C5 ...
$00AC: $3004:     r16 = $04
$00AD: $F0B9:     if (Z=1) then goto $C5
$00AE: $9503:  F: r16 ++ (r16 ++)
$00AF: $9300:  F: r16 -> [$0104] (r16 -> EX_Key_Dreb_Cnt[0])
$00B0: $0104:  
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $00C6 ...
$00B1: $3004:     r16 = $04
$00B2: $F499:     if (Z=0) then goto $C6
-----          L: 
               F: 0 -> EX_Key_Hold_Cnt  ...
$00B3: $E000:     $00 -> r16
$00B4: $9300:     r16 -> [$0106]
$00B5: $0106:  
-----          L: 
-----          L: 
$00B6: $C00F:  J: goto $C6 (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $00C6 ...
$00B7: $3000:     r16 = $00
$00B8: $F069:     if (Z=1) then goto $C6
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $00C1 ...
$00B9: $3004:     r16 = $04
$00BA: $F431:     if (Z=0) then goto $C1
-----          L: 
               C: if (EX_Key_Hold_Cnt < 70) then goto $00C1 ...
$00BB: $9100:     [$0106] -> r16
$00BC: $0106:  
$00BD: $3406:     r16 = $46
$00BE: $F410:     if ( >= ) then goto $C1
$00BF: $940E:  F: CALL $9AD (_ms_click)
$00C0: $09AD:  
-----          L: 
-----          L: 
               F: 0 -> EX_Key_Dreb_Cnt[0]  ...
$00C1: $E000:     $00 -> r16
$00C2: $9300:     r16 -> [$0104]
$00C3: $0104:  
$00C4: $C001:  J: goto $C6 (RJMP)
-----          L: 
$00C5: $DFCB:  F: rcall $91 (_EX_Key_Event_Hold_0)
-----          L: 
-----          L: End_EX_Test
-----          L: 
$00C6: $9100:  F: [$0105] -> r16 (EX_Key_Dreb_Cnt[1] -> r16)
$00C7: $0105:  
$00C8: $994C:  C: if (p$09.4=0 then SKIP (Pin_EX_Key_1 = 1)
$00C9: $C008:  C: goto $D2 (RJMP) (Pin_EX_Key_1 = 1)
               C: if (r16 = EX_KEY_DREB_ITER) then goto $00DB ...
$00CA: $3004:     r16 = $04
$00CB: $F079:     if (Z=1) then goto $DB
$00CC: $9503:  F: r16 ++ (r16 ++)
$00CD: $9300:  F: r16 -> [$0105] (r16 -> EX_Key_Dreb_Cnt[1])
$00CE: $0105:  
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $00DC ...
$00CF: $3004:     r16 = $04
$00D0: $F459:     if (Z=0) then goto $DC
-----          L: 
-----          L: 
-----          L: 
$00D1: $C00A:  J: goto $DC (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $00DC ...
$00D2: $3000:     r16 = $00
$00D3: $F041:     if (Z=1) then goto $DC
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $00D7 ...
$00D4: $3004:     r16 = $04
$00D5: $F409:     if (Z=0) then goto $D7
-----          L: 
$00D6: $CF29:  J: goto $0 (RJMP)
-----          L: 
-----          L: 
               F: 0 -> EX_Key_Dreb_Cnt[1]  ...
$00D7: $E000:     $00 -> r16
$00D8: $9300:     r16 -> [$0105]
$00D9: $0105:  
$00DA: $C001:  J: goto $DC (RJMP)
-----          L: 
$00DB: $DFC9:  F: rcall $A5 (_EX_Key_Event_Hold_1)
-----          L: 
-----          L: End_EX_Test
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$00DC: $9508:  F: RET (ret)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\EX_Enc.alg    ***********
-----          V: _EX_Enc_Init
$00DD: $9A5E:  F: 1 -> p$0B.6 (1 -> Port_EX_Enc_0)
-----          L: 
$00DE: $9A5F:  F: 1 -> p$0B.7 (1 -> Port_EX_Enc_1)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$00DF: $9508:  F: RET (ret)
-----          V: _EX_Enc_Cyclic_Call
$00E0: $9100:  F: [$0107] -> r16 (EX_Enc_Dreb_Cnt[0] -> r16)
$00E1: $0107:  
$00E2: $994E:  C: if (p$09.6=0 then SKIP (Pin_EX_Enc_0 = 1)
$00E3: $C015:  C: goto $F9 (RJMP) (Pin_EX_Enc_0 = 1)
               C: if (r16 = EX_ENC_DREB_ITER) then goto $0101 ...
$00E4: $3005:     r16 = $05
$00E5: $F0D9:     if (Z=1) then goto $101
$00E6: $9503:  F: r16 ++ (r16 ++)
$00E7: $9300:  F: r16 -> [$0107] (r16 -> EX_Enc_Dreb_Cnt[0])
$00E8: $0107:  
               C: if (r16 -= EX_ENC_DREB_ITER) then goto $0101 ...
$00E9: $3005:     r16 = $05
$00EA: $F4B1:     if (Z=0) then goto $101
-----          L: 
               C: if (EX_Enc_Flag=0) then goto $00F3 ...
$00EB: $9100:     [$0109] -> r16
$00EC: $0109:  
$00ED: $3000:     r16 = $00
$00EE: $F021:     if (Z=1) then goto $F3
               F: -1->EX_Enc_Pos  ...
$00EF: $EF0F:     $FF -> r16
$00F0: $9300:     r16 -> [$010A]
$00F1: $010A:  
$00F2: $C003:  J: goto $F6 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
               F: 1->EX_Enc_Pos  ...
$00F3: $E001:     $01 -> r16
$00F4: $9300:     r16 -> [$010A]
$00F5: $010A:  
-----          L: 
$00F6: $940E:  F: CALL $9E0 (_ms_navi)
$00F7: $09E0:  
*********   D:\work\MultiSwitch\Firmwares\Base_v2\EX_Enc.alg    ***********
-----          L: 
-----          L: 
$00F8: $C008:  J: goto $101 (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $0101 ...
$00F9: $3000:     r16 = $00
$00FA: $F031:     if (Z=1) then goto $101
               C: if (r16 -= EX_ENC_DREB_ITER) then goto $00FD ...
$00FB: $3005:     r16 = $05
$00FC: $F401:     if (Z=0) then goto $FD
-----          L: 
-----          L: 
-----          L: 
               F: 0 -> EX_Enc_Dreb_Cnt[0]  ...
$00FD: $E000:     $00 -> r16
$00FE: $9300:     r16 -> [$0107]
$00FF: $0107:  
$0100: $C000:  J: goto $101 (RJMP)
-----          L: 
-----          L: 
-----          L: End_EX_Enc_Test
-----          L: 
$0101: $9100:  F: [$0108] -> r16 (EX_Enc_Dreb_Cnt[1] -> r16)
$0102: $0108:  
$0103: $994F:  C: if (p$09.7=0 then SKIP (Pin_EX_Enc_1 = 1)
$0104: $C00B:  C: goto $110 (RJMP) (Pin_EX_Enc_1 = 1)
               C: if (r16 = EX_ENC_DREB_ITER) then goto $011B ...
$0105: $3005:     r16 = $05
$0106: $F0A1:     if (Z=1) then goto $11B
$0107: $9503:  F: r16 ++ (r16 ++)
$0108: $9300:  F: r16 -> [$0108] (r16 -> EX_Enc_Dreb_Cnt[1])
$0109: $0108:  
               C: if (r16 -= EX_ENC_DREB_ITER) then goto $011B ...
$010A: $3005:     r16 = $05
$010B: $F479:     if (Z=0) then goto $11B
-----          L: 
               F: 1 -> EX_Enc_Flag  ...
$010C: $E001:     $01 -> r16
$010D: $9300:     r16 -> [$0109]
$010E: $0109:  
-----          L: 
$010F: $C00B:  J: goto $11B (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $011B ...
$0110: $3000:     r16 = $00
$0111: $F049:     if (Z=1) then goto $11B
               C: if (r16 -= EX_ENC_DREB_ITER) then goto $0117 ...
$0112: $3005:     r16 = $05
$0113: $F419:     if (Z=0) then goto $117
-----          L: 
               F: 0 -> EX_Enc_Flag  ...
$0114: $E000:     $00 -> r16
$0115: $9300:     r16 -> [$0109]
$0116: $0109:  
-----          L: 
-----          L: 
               F: 0 -> EX_Enc_Dreb_Cnt[1]  ...
$0117: $E000:     $00 -> r16
$0118: $9300:     r16 -> [$0108]
$0119: $0108:  
$011A: $C000:  J: goto $11B (RJMP)
-----          L: 
-----          L: 
-----          L: End_EX_Enc_Test
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$011B: $9508:  F: RET (ret)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\UART.alg    ***********
-----          V: _UART_Event_Transmit_Buffer_Empty
-----          L: 
-----          L: 
$011C: $9508:  F: RET (ret)
-----          V: _UART_Event_Received_string
-----          L: 
$011D: $932F:  F: r18 -> (Temp ->)
               F: Y ->  ...
$011E: $93CF:     r28 ->
$011F: $93DF:     r29 ->
               F: -> Y  ...
$0120: $91DF:     -> r29
$0121: $91CF:     -> r28
$0122: $912F:  F: -> r18 (-> Temp)
-----          L: 
-----          L: 
$0123: $9508:  F: RET (ret)
-----          V: _UART_Event_Transmit_Buffer_Overflow
$0124: $9478:  F: 1 -> I (1 -> I)
-----          L: 
-----          L: 
               C: if (Z = UART_Transmit_OUT_Buffer_Pointer) then goto $0125 ...
$0125: $9110:     [$0512] -> r17
$0126: $0512:  
$0127: $17E1:     r30 = r17
$0128: $9110:     [$0513] -> r17
$0129: $0513:  
$012A: $07F1:     r31 = r17=
$012B: $F3C9:     if (Z=1) then goto $125
$012C: $94F8:  F: 0 -> I (0 -> I)
-----          L: 
-----          L: 
-----          L: 
$012D: $9508:  F: RET (ret)
-----          V: _UART_Event_Received_byte
-----          L: 
-----          L: 
$012E: $9508:  F: RET (ret)
-----          V: to_UART
-----          L: 
               C: if (UDRE0 = 0) then goto $012F ...
$012F: $9100:     [$00C0] -> r16
$0130: $00C0:  
$0131: $FF05:     if (r16.5=1 then SKIP
$0132: $CFFC:     goto $12F (RJMP)
-----          L: 
$0133: $9310:  F: r17 -> [$00C6] (r17 -> UDR0)
$0134: $00C6:  
$0135: $9508:  F: RET (ret)
-----          V: _UART_Init
-----          L: 
$0136: $E000:  S: $00 -> r16 ($00->r16)
$0137: $9300:  S: r16 -> [$00C5] (r16->UBRR0H)
$0138: $00C5:  
$0139: $E003:  S: $03 -> r16 ($03->r16)
$013A: $9300:  S: r16 -> [$00C4] (r16->UBRR0L)
$013B: $00C4:  
$013C: $E006:  S: $06 -> r16 ($06->r16)
$013D: $9300:  S: r16 -> [$00C2] (r16->UCSR0C)
$013E: $00C2:  
$013F: $E002:  S: $02 -> r16 ($02->r16)
$0140: $9300:  S: r16 -> [$00C0] (r16->UCSR0A)
$0141: $00C0:  
$0142: $E908:  S: $98 -> r16 ($98->r16)
$0143: $9300:  S: r16 -> [$00C1] (r16->UCSR0B)
$0144: $00C1:  
-----          L: 
               F: @UART_Receive_Buffer -> UART_Receive_Buffer_Pointer  ...
$0145: $E00D:     $0D -> r16
$0146: $9300:     r16 -> [$030E]
$0147: $030E:  
$0148: $E001:     $01 -> r16
$0149: $9300:     r16 -> [$030F]
$014A: $030F:  
               F: @UART_Transmit_Buffer -> UART_Transmit_IN_Buffer_Pointer  ...
$014B: $E100:     $10 -> r16
$014C: $9300:     r16 -> [$0510]
$014D: $0510:  
$014E: $E003:     $03 -> r16
$014F: $9300:     r16 -> [$0511]
$0150: $0511:  
               F: @UART_Transmit_Buffer -> UART_Transmit_OUT_Buffer_Pointer  ...
$0151: $E100:     $10 -> r16
$0152: $9300:     r16 -> [$0512]
$0153: $0512:  
$0154: $E003:     $03 -> r16
$0155: $9300:     r16 -> [$0513]
$0156: $0513:  
-----          L: 
$0157: $9508:  F: RET (ret)
-----          V: USART0_Receive_Complete
$0158: $930F:  F: r16 -> (r16 ->)
$0159: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$015A: $B70F:     p$3F -> r16
$015B: $930F:     r16 ->
-----          L: 
$015C: $9100:  F: [$00C6] -> r16 (UDR0 -> r16)
$015D: $00C6:  
-----          L: 
$015E: $DFCF:  F: rcall $12E (_UART_Event_Received_byte)
-----          L: 
$015F: $D005:  F: rcall $165 (_UART_Fill_Receive_Buffer)
-----          L: 
               F: -> SREG  ...
$0160: $910F:     -> r16
$0161: $BF0F:     r16 -> p$3F
$0162: $911F:  F: -> r17 (-> r17)
$0163: $910F:  F: -> r16 (-> r16)
$0164: $9518:  F: RETI (RETI)
-----          V: _UART_Fill_Receive_Buffer
               F: Z ->  ...
$0165: $93EF:     r30 ->
$0166: $93FF:     r31 ->
               F: UART_Receive_Buffer_Pointer -> Z  ...
$0167: $91E0:     [$030E] -> r30
$0168: $030E:  
$0169: $91F0:     [$030F] -> r31
$016A: $030F:  
$016B: $9301:  F: r16 -> [Z++] (r16 -> [Z++])
-----          L: 
               C: if (r16 -= SOH) then goto $0171 ...
$016C: $3001:     r16 = $01
$016D: $F419:     if (Z=0) then goto $171
               F: @UART_Receive_Buffer+1 -> Z  ...
$016E: $E0EE:     $0E -> r30
$016F: $E0F1:     $01 -> r31
-----          L: 
$0170: $C009:  J: goto $17A (RJMP)
-----          L: 
               C: if (r16 = EOT) then goto $0177 ...
$0171: $3004:     r16 = $04
$0172: $F021:     if (Z=1) then goto $177
-----          L: 
               C: if (Z < @UART_Receive_Buffer + UART_SIZE_IN_BUFFER) then goto $017A ...
$0173: $30ED:     r30 = $0D
$0174: $E013:     $03 -> r17
$0175: $07F1:     r31 = r17=
$0176: $F018:     if ( < ) then goto $17A
-----          L: 
-----          L: 
$0177: $DFA5:  F: rcall $11D (_UART_Event_Received_string)
-----          L: 
               F: @UART_Receive_Buffer -> Z  ...
$0178: $E0ED:     $0D -> r30
$0179: $E0F1:     $01 -> r31
-----          L: 
-----          L: 
               F: Z -> UART_Receive_Buffer_Pointer  ...
$017A: $93E0:     r30 -> [$030E]
$017B: $030E:  
$017C: $93F0:     r31 -> [$030F]
$017D: $030F:  
               F: -> Z  ...
$017E: $91FF:     -> r31
$017F: $91EF:     -> r30
-----          L: 
$0180: $9508:  F: RET (ret)
-----          V: _UART_PUSH_r16
-----          L: 
-----          L: 
$0181: $9300:  F: r16 -> [$0514] (r16 -> UART_r16_temp)
$0182: $0514:  
               F: SREG ->  ...
$0183: $B70F:     p$3F -> r16
$0184: $930F:     r16 ->
               F: Z ->  ...
$0185: $93EF:     r30 ->
$0186: $93FF:     r31 ->
-----          L: 
$0187: $94F8:  F: 0 -> I (0 -> I)
-----          L: 
               F: UART_Transmit_IN_Buffer_Pointer -> Z  ...
$0188: $91E0:     [$0510] -> r30
$0189: $0510:  
$018A: $91F0:     [$0511] -> r31
$018B: $0511:  
-----          L: 
$018C: $9631:  F: r30,r31 + $01 (Z + 1)
               C: if (Z >= @UART_Transmit_Buffer + UART_SIZE_OUT_BUFFER) then goto $0193 ...
$018D: $31E0:     r30 = $10
$018E: $E015:     $05 -> r17
$018F: $07F1:     r31 = r17=
$0190: $F010:     if ( < ) then goto $193
               F: @UART_Transmit_Buffer -> Z  ...
$0191: $E1E0:     $10 -> r30
$0192: $E0F3:     $03 -> r31
-----          L: 
               C: if (Z -= UART_Transmit_OUT_Buffer_Pointer) then goto $019B ...
$0193: $9110:     [$0512] -> r17
$0194: $0512:  
$0195: $17E1:     r30 = r17
$0196: $9110:     [$0513] -> r17
$0197: $0513:  
$0198: $07F1:     r31 = r17=
$0199: $F409:     if (Z=0) then goto $19B
$019A: $DF89:  F: rcall $124 (_UART_Event_Transmit_Buffer_Overflow)
-----          L: 
-----          L: 
               F: UART_r16_temp -> [Z]  ...
$019B: $9100:     [$0514] -> r16
$019C: $0514:  
$019D: $8300:     r16 -> [Z+$00]
               F: Z -> UART_Transmit_IN_Buffer_Pointer  ...
$019E: $93E0:     r30 -> [$0510]
$019F: $0510:  
$01A0: $93F0:     r31 -> [$0511]
$01A1: $0511:  
-----          L: 
               C: if (UDRIE0 = 1) then goto $01AC ...
$01A2: $9100:     [$00C1] -> r16
$01A3: $00C1:  
$01A4: $FD05:     if (r16.5=0 then SKIP
$01A5: $C006:     goto $1AC (RJMP)
               F: 1 -> UDRIE0  ...
$01A6: $9100:     [$00C1] -> r16
$01A7: $00C1:  
$01A8: $6200:     r16 ! $20
$01A9: $9300:     r16 -> [$00C1]
$01AA: $00C1:  
$01AB: $D011:  F: rcall $1BD (_UART_POP_and_Send_Byte)
-----          L: 
-----          L: 
               F: -> Z  ...
$01AC: $91FF:     -> r31
$01AD: $91EF:     -> r30
               F: -> SREG  ...
$01AE: $910F:     -> r16
$01AF: $BF0F:     r16 -> p$3F
$01B0: $9100:  F: [$0514] -> r16 (UART_r16_temp -> r16)
$01B1: $0514:  
-----          L: 
$01B2: $9508:  F: RET (RET)
-----          V: USART0_DR_Empty
$01B3: $930F:  F: r16 -> (r16 ->)
$01B4: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$01B5: $B70F:     p$3F -> r16
$01B6: $930F:     r16 ->
$01B7: $D005:  F: rcall $1BD (_UART_POP_and_Send_Byte)
               F: -> SREG  ...
$01B8: $910F:     -> r16
$01B9: $BF0F:     r16 -> p$3F
$01BA: $911F:  F: -> r17 (-> r17)
$01BB: $910F:  F: -> r16 (-> r16)
$01BC: $9518:  F: RETI (reti)
-----          V: _UART_POP_and_Send_Byte
               F: Z ->  ...
$01BD: $93EF:     r30 ->
$01BE: $93FF:     r31 ->
               F: UART_Transmit_OUT_Buffer_Pointer -> Z  ...
$01BF: $91E0:     [$0512] -> r30
$01C0: $0512:  
$01C1: $91F0:     [$0513] -> r31
$01C2: $0513:  
               C: if (Z = UART_Transmit_IN_Buffer_Pointer) then goto $01DB ...
$01C3: $9110:     [$0510] -> r17
$01C4: $0510:  
$01C5: $17E1:     r30 = r17
$01C6: $9110:     [$0511] -> r17
$01C7: $0511:  
$01C8: $07F1:     r31 = r17=
$01C9: $F089:     if (Z=1) then goto $1DB
$01CA: $9631:  F: r30,r31 + $01 (Z + 1)
               C: if (Z >= @UART_Transmit_Buffer + UART_SIZE_OUT_BUFFER) then goto $01D1 ...
$01CB: $31E0:     r30 = $10
$01CC: $E015:     $05 -> r17
$01CD: $07F1:     r31 = r17=
$01CE: $F010:     if ( < ) then goto $1D1
               F: @UART_Transmit_Buffer -> Z  ...
$01CF: $E1E0:     $10 -> r30
$01D0: $E0F3:     $03 -> r31
               F: [Z] -> UDR0  ...
$01D1: $8100:     [Z+$00] -> r16
$01D2: $9300:     r16 -> [$00C6]
$01D3: $00C6:  
               F: Z -> UART_Transmit_OUT_Buffer_Pointer  ...
$01D4: $93E0:     r30 -> [$0512]
$01D5: $0512:  
$01D6: $93F0:     r31 -> [$0513]
$01D7: $0513:  
               F: -> Z  ...
$01D8: $91FF:     -> r31
$01D9: $91EF:     -> r30
$01DA: $9508:  F: RET (RET)
-----          L: 
               F: 0 -> UDRIE0  ...
$01DB: $9100:     [$00C1] -> r16
$01DC: $00C1:  
$01DD: $7D0F:     r16 & $DF
$01DE: $9300:     r16 -> [$00C1]
$01DF: $00C1:  
$01E0: $DF3B:  F: rcall $11C (_UART_Event_Transmit_Buffer_Empty)
               F: -> Z  ...
$01E1: $91FF:     -> r31
$01E2: $91EF:     -> r30
-----          L: 
$01E3: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\STimer.alg    ***********
-----          V: _STimer_Event_End_1
-----          L: 
               F: EOS -> ms_message  ...
$01E4: $E000:     $00 -> r16
$01E5: $9300:     r16 -> [$0533]
$01E6: $0533:  
-----          L: 
$01E7: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$01E8: $9508:  F: RET (RET)
-----          V: _STimer_Event_End_0
-----          L: 
$01E9: $6034:  F: r19 ! $04 (1 -> f_doSec)
               F: [@STimer_Counter_Stop + DO_SEC] -> [@STimer_Counter + DO_SEC]  ...
$01EA: $9100:     [$0519] -> r16
$01EB: $0519:  
$01EC: $9300:     r16 -> [$0515]
$01ED: $0515:  
-----          L: 
$01EE: $9508:  F: RET (RET)
-----          V: _STimer_Event_End_2
               C: if (ms_mode = MS_MODE_CONDITIONS_EDIT_IF) then goto $01FB ...
$01EF: $9100:     [$0530] -> r16
$01F0: $0530:  
$01F1: $300B:     r16 = $0B
$01F2: $F041:     if (Z=1) then goto $1FB
               C: if (ms_mode = MS_MODE_SOURCES_VIEWER) then goto $01FB ...
$01F3: $9100:     [$0530] -> r16
$01F4: $0530:  
$01F5: $3007:     r16 = $07
$01F6: $F021:     if (Z=1) then goto $1FB
               C: if (ms_mode -= MS_MODE_STOP_BUILD_ACTION_EDIT) then goto $0202 ...
$01F7: $9100:     [$0530] -> r16
$01F8: $0530:  
$01F9: $3604:     r16 = $64
$01FA: $F439:     if (Z=0) then goto $202
-----          L: 
               F: ms_blink ^ 255  ...
$01FB: $9100:     [$0532] -> r16
$01FC: $0532:  
$01FD: $EF1F:     $FF -> r17
$01FE: $2701:     r16 ^ r17
$01FF: $9300:     r16 -> [$0532]
$0200: $0532:  
$0201: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
               F: [@STimer_Counter_Stop + DO_BLINK] -> [@STimer_Counter + DO_BLINK]  ...
$0202: $9100:     [$051B] -> r16
$0203: $051B:  
$0204: $9300:     r16 -> [$0517]
$0205: $0517:  
$0206: $9508:  F: RET (RET)
-----          V: _STimer_Event_End_3
-----          L: 
               F: 0 -> ms_posBuildActionEdit  ...
$0207: $E000:     $00 -> r16
$0208: $9300:     r16 -> [$0755]
$0209: $0755:  
               F: MS_MODE_STOP_BUILD_ACTION_EDIT -> ms_mode  ...
$020A: $E604:     $64 -> r16
$020B: $9300:     r16 -> [$0530]
$020C: $0530:  
$020D: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$020E: $9508:  F: RET (RET)
-----          V: _STimer_Clear_All
               F: Z ->  ...
$020F: $93EF:     r30 ->
$0210: $93FF:     r31 ->
               F: @STimer_Counter -> Z  ...
$0211: $E1E5:     $15 -> r30
$0212: $E0F5:     $05 -> r31
$0213: $E024:  F: $04 -> r18 (STIMER_NUMB -> Temp)
$0214: $E000:  F: $00 -> r16 (0 -> r16)
-----          L: 
$0215: $9301:  F: r16 -> [Z++] (r16 -> [Z++])
               C: if (Temp --) then goto $0215 ...
$0216: $952A:     r18 --
$0217: $F7E9:     if (Z=0) then goto $215
               F: -> Z  ...
$0218: $91FF:     -> r31
$0219: $91EF:     -> r30
$021A: $9508:  F: RET (ret)
-----          V: _STimer_Init
-----          L: 
$021B: $9508:  F: RET (ret)
-----          V: _STimer_Cyclic_Call
$021C: $9100:  F: [$0515] -> r16 (STimer_Counter[0]  -> r16)
$021D: $0515:  
$021E: $5001:  F: r16 - $01 (r16 - 1)
$021F: $F020:  C: if (C=1) then goto $224 (C = 1)
$0220: $9300:  F: r16 -> [$0515] (r16 -> STimer_Counter[0])
$0221: $0515:  
$0222: $F409:  C: if (Z=0) then goto $224 (-=)
$0223: $DFC5:  F: rcall $1E9 (_STimer_Event_End_0)
-----          L: 
$0224: $9100:  F: [$0516] -> r16 (STimer_Counter[1]  -> r16)
$0225: $0516:  
$0226: $5001:  F: r16 - $01 (r16 - 1)
$0227: $F020:  C: if (C=1) then goto $22C (C = 1)
$0228: $9300:  F: r16 -> [$0516] (r16 -> STimer_Counter[1])
$0229: $0516:  
$022A: $F409:  C: if (Z=0) then goto $22C (-=)
$022B: $DFB8:  F: rcall $1E4 (_STimer_Event_End_1)
-----          L: 
$022C: $9100:  F: [$0517] -> r16 (STimer_Counter[2]  -> r16)
$022D: $0517:  
$022E: $5001:  F: r16 - $01 (r16 - 1)
$022F: $F020:  C: if (C=1) then goto $234 (C = 1)
$0230: $9300:  F: r16 -> [$0517] (r16 -> STimer_Counter[2])
$0231: $0517:  
$0232: $F409:  C: if (Z=0) then goto $234 (-=)
$0233: $DFBB:  F: rcall $1EF (_STimer_Event_End_2)
-----          L: 
$0234: $9100:  F: [$0518] -> r16 (STimer_Counter[3]  -> r16)
$0235: $0518:  
$0236: $5001:  F: r16 - $01 (r16 - 1)
$0237: $F020:  C: if (C=1) then goto $23C (C = 1)
$0238: $9300:  F: r16 -> [$0518] (r16 -> STimer_Counter[3])
$0239: $0518:  
$023A: $F409:  C: if (Z=0) then goto $23C (-=)
$023B: $DFCB:  F: rcall $207 (_STimer_Event_End_3)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$023C: $9508:  F: RET (ret)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\iic.alg    ***********
-----          V: _iic_init
-----          L: 
$023D: $9A45:  F: 1 -> p$08.5 (1 -> PortC.5)
$023E: $9A44:  F: 1 -> p$08.4 (1 -> PortC.4)
-----          L: 
$023F: $E000:  S: $00 -> r16 ($00->r16)
$0240: $9300:  S: r16 -> [$00B9] (r16->TWSR)
$0241: $00B9:  
$0242: $E200:  S: $20 -> r16 ($20->r16)
$0243: $9300:  S: r16 -> [$00B8] (r16->TWBR)
$0244: $00B8:  
$0245: $E800:  S: $80 -> r16 ($80->r16)
$0246: $9300:  S: r16 -> [$00BA] (r16->TWAR)
$0247: $00BA:  
$0248: $E405:  S: $45 -> r16 ($45->r16)
$0249: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$024A: $00BC:  
-----          L: 
$024B: $D0CA:  F: rcall $316 (_iics_init)
$024C: $9508:  F: RET (RET)
-----          V: _iic_start
$024D: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$024E: $9508:  F: RET (RET)
$024F: $94F8:  F: 0 -> I (0 -> I)
$0250: $EF48:  F: $F8 -> r20 (NO_INFO -> iic_status)
$0251: $EE05:  S: $E5 -> r16 ($E5->r16)
$0252: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$0253: $00BC:  
$0254: $9478:  F: 1 -> I (1 -> I)
-----          L: 
-----          L: 
$0255: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$0256: $C005:  C: goto $25C (RJMP) (f_arbitrationLost = 1)
-----          L: 
               C: if (iic_status = START) then goto $025C ...
$0257: $3048:     r20 = $08
$0258: $F019:     if (Z=1) then goto $25C
               C: if (iic_status = RSTART) then goto $025C ...
$0259: $3140:     r20 = $10
$025A: $F009:     if (Z=1) then goto $25C
$025B: $CFF9:  J: goto $255 (RJMP)
-----          L: 
-----          L: 
$025C: $9508:  F: RET (RET)
-----          V: _iic_send_
$025D: $94F8:  F: 0 -> I (0 -> I)
$025E: $EF48:  F: $F8 -> r20 (NO_INFO -> iic_status)
$025F: $E805:  S: $85 -> r16 ($85->r16)
$0260: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$0261: $00BC:  
$0262: $9478:  F: 1 -> I (1 -> I)
-----          L: 
-----          L: 
$0263: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$0264: $C009:  C: goto $26E (RJMP) (f_arbitrationLost = 1)
-----          L: 
               C: if (iic_status = MT_SLA_ACK) then goto $026E ...
$0265: $3148:     r20 = $18
$0266: $F039:     if (Z=1) then goto $26E
               C: if (iic_status = MT_SLA_NACK) then goto $026E ...
$0267: $3240:     r20 = $20
$0268: $F029:     if (Z=1) then goto $26E
               C: if (iic_status = MT_DATA_ACK) then goto $026E ...
$0269: $3248:     r20 = $28
$026A: $F019:     if (Z=1) then goto $26E
               C: if (iic_status = MT_DATA_NACK) then goto $026E ...
$026B: $3340:     r20 = $30
$026C: $F009:     if (Z=1) then goto $26E
$026D: $CFF5:  J: goto $263 (RJMP)
-----          L: 
-----          L: 
$026E: $9508:  F: RET (RET)
-----          V: _iic_stop
$026F: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$0270: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Wait.alg    ***********
-----          L: 
               F: (10*CPU_Clock_Frequency/1000000-2)/4 -> r16:Word  ...
$0271: $E207:     $27 -> r16
$0272: $E010:     $00 -> r17
-----          L: 
               C: if (r16:Word --) then goto $0273 ...
$0273: $5001:     r16 - $01
$0274: $4010:     r17 - $00 -
$0275: $F7E9:     if (Z=0) then goto $273
$0276: $0000:  F: NOP (NOP)
-----          L: 
-----          L: 
-----          L: 
$0277: $0000:  F: NOP (NOP)
-----          L: 
$0278: $0000:  F: NOP (NOP)
-----          L: 
$0279: $94F8:  F: 0 -> I (0 -> I)
$027A: $EF48:  F: $F8 -> r20 (NO_INFO -> iic_status)
$027B: $ED05:  S: $D5 -> r16 ($D5->r16)
$027C: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$027D: $00BC:  
$027E: $9478:  F: 1 -> I (1 -> I)
-----          L: 
               F: (10*CPU_Clock_Frequency/1000000-2)/4 -> r16:Word  ...
$027F: $E207:     $27 -> r16
$0280: $E010:     $00 -> r17
-----          L: 
               C: if (r16:Word --) then goto $0281 ...
$0281: $5001:     r16 - $01
$0282: $4010:     r17 - $00 -
$0283: $F7E9:     if (Z=0) then goto $281
$0284: $0000:  F: NOP (NOP)
-----          L: 
-----          L: 
-----          L: 
$0285: $0000:  F: NOP (NOP)
-----          L: 
$0286: $0000:  F: NOP (NOP)
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\iic.alg    ***********
-----          L: 
$0287: $9508:  F: RET (RET)
-----          V: TWI_Finished
$0288: $930F:  F: r16 -> (r16 ->)
$0289: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$028A: $B70F:     p$3F -> r16
$028B: $930F:     r16 ->
-----          L: 
$028C: $9140:  F: [$00B9] -> r20 (TWSR -> iic_status)
$028D: $00B9:  
$028E: $7F48:  F: r20 & $F8 (iic_status & $F8)
-----          L: 
-----          L: 
-----          L: 
               C: if (iic_status -= SR_SLA_ACK) then goto $02A3 ...
$028F: $3640:     r20 = $60
$0290: $F491:     if (Z=0) then goto $2A3
-----          L: 
$0291: $EC05:  S: $C5 -> r16 ($C5->r16)
$0292: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$0293: $00BC:  
               F: X ->  ...
$0294: $93AF:     r26 ->
$0295: $93BF:     r27 ->
               F: @iic_pac -> X  ...
$0296: $E1AE:     $1E -> r26
$0297: $E0B5:     $05 -> r27
$0298: $E000:  F: $00 -> r16 (0 -> r16)
$0299: $E013:  F: $03 -> r17 (IIC_PAC_SIZE -> r17)
-----          L: 
$029A: $930D:  F: r16 -> [X++] (r16 -> [X++])
               C: if (r17--) then goto $029A ...
$029B: $951A:     r17 --
$029C: $F7E9:     if (Z=0) then goto $29A
               F: -> X  ...
$029D: $91BF:     -> r27
$029E: $91AF:     -> r26
               F: 0 -> iic_pacCounter  ...
$029F: $E000:     $00 -> r16
$02A0: $9300:     r16 -> [$051D]
$02A1: $051D:  
$02A2: $C05E:  J: goto $301 (RJMP)
-----          L: 
-----          L: 
               C: if (iic_status -= SR_DATA_ACK) then goto $02C2 ...
$02A3: $3840:     r20 = $80
$02A4: $F4E9:     if (Z=0) then goto $2C2
-----          L: 
               F: X ->  ...
$02A5: $93AF:     r26 ->
$02A6: $93BF:     r27 ->
               F: @iic_pac -> X  ...
$02A7: $E1AE:     $1E -> r26
$02A8: $E0B5:     $05 -> r27
               F: X + iic_pacCounter  ...
$02A9: $9110:     [$051D] -> r17
$02AA: $051D:  
$02AB: $0FA1:     r26 + r17
$02AC: $E010:     $00 -> r17
$02AD: $1FB1:     r27 + r17 +
               F: TWDR -> [X]  ...
$02AE: $9100:     [$00BB] -> r16
$02AF: $00BB:  
$02B0: $930C:     r16 -> [X]
               F: -> X  ...
$02B1: $91BF:     -> r27
$02B2: $91AF:     -> r26
-----          L: 
               F: iic_pacCounter++  ...
$02B3: $9100:     [$051D] -> r16
$02B4: $051D:  
$02B5: $9503:     r16 ++
$02B6: $9300:     r16 -> [$051D]
$02B7: $051D:  
               C: if (r16 < IIC_PAC_SIZE-1) then goto $02BE ...
$02B8: $3002:     r16 = $02
$02B9: $F020:     if ( < ) then goto $2BE
$02BA: $E805:  S: $85 -> r16 ($85->r16)
$02BB: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$02BC: $00BC:  
$02BD: $C043:  J: goto $301 (RJMP)
-----          L: 
$02BE: $EC05:  S: $C5 -> r16 ($C5->r16)
$02BF: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$02C0: $00BC:  
$02C1: $C03F:  J: goto $301 (RJMP)
-----          L: 
-----          L: 
               C: if (iic_status -= SR_DATA_NACK) then goto $02E4 ...
$02C2: $3848:     r20 = $88
$02C3: $F501:     if (Z=0) then goto $2E4
-----          L: 
               F: X ->  ...
$02C4: $93AF:     r26 ->
$02C5: $93BF:     r27 ->
               F: @iic_pac -> X  ...
$02C6: $E1AE:     $1E -> r26
$02C7: $E0B5:     $05 -> r27
               F: X + iic_pacCounter  ...
$02C8: $9110:     [$051D] -> r17
$02C9: $051D:  
$02CA: $0FA1:     r26 + r17
$02CB: $E010:     $00 -> r17
$02CC: $1FB1:     r27 + r17 +
               F: TWDR -> [X]  ...
$02CD: $9100:     [$00BB] -> r16
$02CE: $00BB:  
$02CF: $930C:     r16 -> [X]
               F: -> X  ...
$02D0: $91BF:     -> r27
$02D1: $91AF:     -> r26
-----          L: 
$02D2: $D6AA:  F: rcall $97D (_ms_parsePac)
$02D3: $D615:  F: rcall $8E9 (_ms_message_)
$02D4: $3E $3E $20 $72 $65 $6D $6F $74 $65 $20 $61 $63 $74 $69 $6F $6E
$02DC: $00 $00
-----          L: 
$02DD: $EC05:  S: $C5 -> r16 ($C5->r16)
$02DE: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$02DF: $00BC:  
$02E0: $6032:  F: r19 ! $02 (1 -> f_arbitrationLost)
$02E1: $E348:  F: $38 -> r20 (MT_ATRIB_LOST -> iic_status)
$02E2: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$02E3: $C01D:  J: goto $301 (RJMP)
-----          L: 
-----          L: 
               C: if (iic_status -= SR_START) then goto $02ED ...
$02E4: $3A40:     r20 = $A0
$02E5: $F439:     if (Z=0) then goto $2ED
$02E6: $EC05:  S: $C5 -> r16 ($C5->r16)
$02E7: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$02E8: $00BC:  
$02E9: $6032:  F: r19 ! $02 (1 -> f_arbitrationLost)
$02EA: $E348:  F: $38 -> r20 (MT_ATRIB_LOST -> iic_status)
$02EB: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$02EC: $C014:  J: goto $301 (RJMP)
-----          L: 
-----          L: 
               C: if (iic_status -= ERROR) then goto $02F6 ...
$02ED: $3040:     r20 = $00
$02EE: $F439:     if (Z=0) then goto $2F6
$02EF: $ED05:  S: $D5 -> r16 ($D5->r16)
$02F0: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$02F1: $00BC:  
$02F2: $6032:  F: r19 ! $02 (1 -> f_arbitrationLost)
$02F3: $E348:  F: $38 -> r20 (MT_ATRIB_LOST -> iic_status)
$02F4: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$02F5: $C00B:  J: goto $301 (RJMP)
-----          L: 
-----          L: 
               C: if (iic_status -= MT_ATRIB_LOST) then goto $02FE ...
$02F6: $3348:     r20 = $38
$02F7: $F431:     if (Z=0) then goto $2FE
$02F8: $EC05:  S: $C5 -> r16 ($C5->r16)
$02F9: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$02FA: $00BC:  
$02FB: $6032:  F: r19 ! $02 (1 -> f_arbitrationLost)
$02FC: $E348:  F: $38 -> r20 (MT_ATRIB_LOST -> iic_status)
$02FD: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
-----          L: 
$02FE: $E004:  S: $04 -> r16 ($04->r16)
$02FF: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$0300: $00BC:  
-----          L: 
-----          L: _END_TWI_Finished
               F: -> SREG  ...
$0301: $910F:     -> r16
$0302: $BF0F:     r16 -> p$3F
$0303: $911F:  F: -> r17 (-> r17)
$0304: $910F:  F: -> r16 (-> r16)
$0305: $9518:  F: RETI (RETI)
-----          V: Watchdog_Time_Out
$0306: $930F:  F: r16 -> (r16 ->)
$0307: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$0308: $B70F:     p$3F -> r16
$0309: $930F:     r16 ->
$030A: $9140:  F: [$00B9] -> r20 (TWSR -> iic_status)
$030B: $00B9:  
$030C: $7F48:  F: r20 & $F8 (iic_status & $F8)
$030D: $9340:  F: r20 -> [$00C6] (iic_status -> UDR0)
$030E: $00C6:  
-----          L: 
$030F: $95A8:  F: WDR (WDR)
$0310: $CFFE:  J: goto $30F (RJMP)
               F: -> SREG  ...
$0311: $910F:     -> r16
$0312: $BF0F:     r16 -> p$3F
$0313: $911F:  F: -> r17 (-> r17)
$0314: $910F:  F: -> r16 (-> r16)
$0315: $9518:  F: RETI (RETI)
-----          V: _iics_init
-----          L: 
$0316: $983B:  F: 0 -> p$07.3 (0 -> iics_DDR_SCL)
$0317: $9A43:  F: 1 -> p$08.3 (1 -> iics_SCL)
$0318: $983A:  F: 0 -> p$07.2 (0 -> iics_DDR_SDA)
$0319: $9A42:  F: 1 -> p$08.2 (1 -> iics_SDA)
-----          L: 
$031A: $9508:  F: RET (RET)
-----          V: _iics_start
$031B: $9842:  F: 0 -> p$08.2 (0 -> iics_SDA)
$031C: $9A3A:  F: 1 -> p$07.2 (1 -> iics_DDR_SDA)
$031D: $9508:  F: RET (RET)
-----          V: _iics_send_
$031E: $94F8:  F: 0 -> I (0 -> I)
$031F: $931F:  F: r17 -> (r17 ->)
$0320: $E018:  F: $08 -> r17 (8 -> r17)
-----          L: 
-----          L: 
$0321: $9843:  F: 0 -> p$08.3 (0 -> iics_SCL)
$0322: $9A3B:  F: 1 -> p$07.3 (1 -> iics_DDR_SCL)
$0323: $0F00:  F: << r16 (<< r16)
$0324: $F018:  C: if (C=1) then goto $328 (C=1)
$0325: $9842:  F: 0 -> p$08.2 (0 -> iics_SDA)
$0326: $9A3A:  F: 1 -> p$07.2 (1 -> iics_DDR_SDA)
$0327: $C002:  J: goto $32A (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$0328: $983A:  F: 0 -> p$07.2 (0 -> iics_DDR_SDA)
$0329: $9A42:  F: 1 -> p$08.2 (1 -> iics_SDA)
-----          L: 
$032A: $983B:  F: 0 -> p$07.3 (0 -> iics_DDR_SCL)
$032B: $9A43:  F: 1 -> p$08.3 (1 -> iics_SCL)
               C: if (r17--) then goto $0321 ...
$032C: $951A:     r17 --
$032D: $F799:     if (Z=0) then goto $321
*********   D:\work\MultiSwitch\Firmwares\Base_v2\iic.alg    ***********
-----          L: 
$032E: $9843:  F: 0 -> p$08.3 (0 -> iics_SCL)
$032F: $9A3B:  F: 1 -> p$07.3 (1 -> iics_DDR_SCL)
$0330: $0000:  F: NOP (NOP)
$0331: $0000:  F: NOP (NOP)
$0332: $983A:  F: 0 -> p$07.2 (0 -> iics_DDR_SDA)
$0333: $9A42:  F: 1 -> p$08.2 (1 -> iics_SDA)
$0334: $0000:  F: NOP (NOP)
$0335: $983B:  F: 0 -> p$07.3 (0 -> iics_DDR_SCL)
$0336: $9A43:  F: 1 -> p$08.3 (1 -> iics_SCL)
$0337: $9B32:  C: if (p$06.2=1 then SKIP (iics_Pin_SDA = 0)
$0338: $C000:  C: goto $339 (RJMP) (iics_Pin_SDA = 0)
-----          L: 
$0339: $9842:  F: 0 -> p$08.2 (0 -> iics_SDA)
$033A: $9A3A:  F: 1 -> p$07.2 (1 -> iics_DDR_SDA)
$033B: $911F:  F: -> r17 (-> r17)
$033C: $9478:  F: 1 -> I (1 -> I)
$033D: $9508:  F: RET (RET)
-----          V: _iics_stop
$033E: $9843:  F: 0 -> p$08.3 (0 -> iics_SCL)
$033F: $9A3B:  F: 1 -> p$07.3 (1 -> iics_DDR_SCL)
$0340: $0000:  F: NOP (NOP)
$0341: $0000:  F: NOP (NOP)
$0342: $9842:  F: 0 -> p$08.2 (0 -> iics_SDA)
$0343: $9A3A:  F: 1 -> p$07.2 (1 -> iics_DDR_SDA)
$0344: $0000:  F: NOP (NOP)
$0345: $0000:  F: NOP (NOP)
$0346: $983B:  F: 0 -> p$07.3 (0 -> iics_DDR_SCL)
$0347: $9A43:  F: 1 -> p$08.3 (1 -> iics_SCL)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Wait.alg    ***********
-----          L: 
               F: (1*CPU_Clock_Frequency/1000000-2)/4 -> r16:Word  ...
$0348: $E003:     $03 -> r16
$0349: $E010:     $00 -> r17
-----          L: 
               C: if (r16:Word --) then goto $034A ...
$034A: $5001:     r16 - $01
$034B: $4010:     r17 - $00 -
$034C: $F7E9:     if (Z=0) then goto $34A
$034D: $0000:  F: NOP (NOP)
-----          L: 
-----          L: 
-----          L: 
$034E: $0000:  F: NOP (NOP)
-----          L: 
$034F: $0000:  F: NOP (NOP)
-----          L: 
$0350: $983A:  F: 0 -> p$07.2 (0 -> iics_DDR_SDA)
$0351: $9A42:  F: 1 -> p$08.2 (1 -> iics_SDA)
$0352: $0000:  F: NOP (NOP)
$0353: $0000:  F: NOP (NOP)
$0354: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ssd1306.alg    ***********
-----          V: _ssd_clrRestLine
$0355: $931F:  F: r17 -> (r17 ->)
$0356: $9110:  F: [$0522] -> r17 (ssd_Last_X -> r17)
$0357: $0522:  
$0358: $9511:  F: - r17 (-r17)
$0359: $5810:  F: r17 - $80 (r17 + 128)
$035A: $D3EC:  F: rcall $747 (_ssd_startData)
-----          L: 
$035B: $E000:  F: $00 -> r16 (0 -> r16)
$035C: $D3DB:  F: rcall $738 (_ssd_data_)
               C: if (r17 --) then goto $035B ...
$035D: $951A:     r17 --
$035E: $F7E1:     if (Z=0) then goto $35B
-----          L: 
$035F: $DFDE:  F: rcall $33E (_iics_stop)
$0360: $911F:  F: -> r17 (-> r17)
$0361: $9508:  F: RET (ret)
-----          V: _ssd_Pos_
-----          L: 
-----          L: 
$0362: $9300:  F: r16 -> [$0522] (r16 -> ssd_Last_X)
$0363: $0522:  
$0364: $9310:  F: r17 -> [$0523] (r17 -> ssd_Last_Y)
$0365: $0523:  
-----          L: 
$0366: $E200:  F: $20 -> r16 ($20 -> r16)
$0367: $D3C6:  F: rcall $72E (_ssd_command_)
$0368: $E000:  F: $00 -> r16 ($00 -> r16)
$0369: $D3C4:  F: rcall $72E (_ssd_command_)
-----          L: 
$036A: $E201:  F: $21 -> r16 ($21 -> r16)
$036B: $D3C2:  F: rcall $72E (_ssd_command_)
$036C: $9100:  F: [$0522] -> r16 (ssd_Last_X -> r16)
$036D: $0522:  
$036E: $D3BF:  F: rcall $72E (_ssd_command_)
$036F: $E70F:  F: $7F -> r16 (127 -> r16)
$0370: $D3BD:  F: rcall $72E (_ssd_command_)
-----          L: 
$0371: $E202:  F: $22 -> r16 ($22 -> r16)
$0372: $D3BB:  F: rcall $72E (_ssd_command_)
$0373: $9100:  F: [$0523] -> r16 (ssd_Last_Y -> r16)
$0374: $0523:  
$0375: $D3B8:  F: rcall $72E (_ssd_command_)
$0376: $E007:  F: $07 -> r16 (7 -> r16)
$0377: $D3B6:  F: rcall $72E (_ssd_command_)
$0378: $9508:  F: RET (ret)
-----          V: _ssd_clr
               F: Z ->  ...
$0379: $93EF:     r30 ->
$037A: $93FF:     r31 ->
$037B: $E000:  F: $00 -> r16 (0 -> r16)
$037C: $E010:  F: $00 -> r17 (0 -> r17)
$037D: $DFE4:  F: rcall $362 (_ssd_Pos_)
               F: 1024 -> Z  ...
$037E: $E0E0:     $00 -> r30
$037F: $E0F4:     $04 -> r31
$0380: $D3C6:  F: rcall $747 (_ssd_startData)
-----          L: 
$0381: $E000:  F: $00 -> r16 (0 -> r16)
$0382: $D3B5:  F: rcall $738 (_ssd_data_)
               C: if (Z --) then goto $0381 ...
$0383: $50E1:     r30 - $01
$0384: $40F0:     r31 - $00 -
$0385: $F7D9:     if (Z=0) then goto $381
-----          L: 
$0386: $DFB7:  F: rcall $33E (_iics_stop)
               F: -> Z  ...
$0387: $91FF:     -> r31
$0388: $91EF:     -> r30
$0389: $9508:  F: RET (ret)
-----          V: _ssd_Parse_r16
$038A: $932F:  F: r18 -> (Temp ->)
               C: if (r16 < 16) then goto $0394 ...
$038B: $3100:     r16 = $10
$038C: $F038:     if ( < ) then goto $394
-----          L: 
               C: if (r16 >= 128) then goto $0390 ...
$038D: $3800:     r16 = $80
$038E: $F008:     if ( < ) then goto $390
$038F: $E200:  F: $20 -> r16 (32 -> r16)
-----          L: 
-----          L: 
$0390: $5100:  F: r16 - $10 (r16 - 16)
$0391: $D02E:  F: rcall $3C0 (_ssd_Mod_Char_r16)
$0392: $912F:  F: -> r18 (-> Temp)
$0393: $9508:  F: RET (ret)
-----          L: 
$0394: $E010:  F: $00 -> r17 (0 -> r17)
               C: if (r16 = 1) then goto $03A5 ...
$0395: $3001:     r16 = $01
$0396: $F071:     if (Z=1) then goto $3A5
               C: if (r16 = 10) then goto $03B7 ...
$0397: $300A:     r16 = $0A
$0398: $F0F1:     if (Z=1) then goto $3B7
               C: if (r16 = 13) then goto $03A9 ...
$0399: $300D:     r16 = $0D
$039A: $F071:     if (Z=1) then goto $3A9
$039B: $5002:  F: r16 - $02 (r16 - 2)
$039C: $9408:  F: 1 -> .C (1 -> C)
-----          L: 
$039D: $1F11:  F: << r17 < (<< r17 <)
               C: if (r16 = 0) then goto $03A2 ...
$039E: $3000:     r16 = $00
$039F: $F011:     if (Z=1) then goto $3A2
$03A0: $950A:  F: r16 -- (r16 --)
$03A1: $CFFB:  J: goto $39D (RJMP)
-----          L: 
$03A2: $9100:  F: [$0521] -> r16 (ssd_Mods -> r16)
$03A3: $0521:  
$03A4: $2710:  F: r17 ^ r16 (r17 ^ r16)
-----          L: 
$03A5: $9310:  F: r17 -> [$0521] (r17 -> ssd_Mods)
$03A6: $0521:  
-----          L: 
$03A7: $912F:  F: -> r18 (-> Temp)
$03A8: $9508:  F: RET (ret)
-----          V: 
$03A9: $9100:  F: [$0523] -> r16 (ssd_Last_Y -> r16)
$03AA: $0523:  
$03AB: $9503:  F: r16 ++ (r16 ++)
               C: if (r16 >= 8) then goto $03AF ...
$03AC: $3008:     r16 = $08
$03AD: $F008:     if ( < ) then goto $3AF
$03AE: $E000:  F: $00 -> r16 (0 -> r16)
$03AF: $9300:  F: r16 -> [$0523] (r16 -> ssd_Last_Y)
$03B0: $0523:  
$03B1: $9100:  F: [$0522] -> r16 (ssd_Last_X -> r16)
$03B2: $0522:  
$03B3: $9110:  F: [$0523] -> r17 (ssd_Last_Y -> r17)
$03B4: $0523:  
$03B5: $DFAC:  F: rcall $362 (_ssd_Pos_)
$03B6: $CFF0:  J: goto $3A7 (RJMP)
-----          V: 
               F: 0 -> ssd_Last_X  ...
$03B7: $E000:     $00 -> r16
$03B8: $9300:     r16 -> [$0522]
$03B9: $0522:  
$03BA: $9100:  F: [$0522] -> r16 (ssd_Last_X -> r16)
$03BB: $0522:  
$03BC: $9110:  F: [$0523] -> r17 (ssd_Last_Y -> r17)
$03BD: $0523:  
$03BE: $DFA3:  F: rcall $362 (_ssd_Pos_)
$03BF: $CFE7:  J: goto $3A7 (RJMP)
-----          V: _ssd_Mod_Char_r16
-----          L: 
-----          L: 
-----          L: 
               F: Z ->  ...
$03C0: $93EF:     r30 ->
$03C1: $93FF:     r31 ->
$03C2: $E010:  F: $00 -> r17 (0 -> r17)
$03C3: $0F00:  F: << r16 (<< r16)
               F: r16 -> Z  ...
$03C4: $2FE0:     r16 -> r30
$03C5: $E0F0:     $00 -> r31
               F: << r16:Word  ...
$03C6: $0F00:     << r16
$03C7: $1F11:     << r17 <
               F: Z + r16:Word  ...
$03C8: $0FE0:     r30 + r16
$03C9: $1FF1:     r31 + r17 +
               F: Z + 2*D_ssd_font  ...
$03CA: $54E4:     r30 - $44
$03CB: $4FF4:     r31 - $F4 -
-----          L: 
$03CC: $D37A:  F: rcall $747 (_ssd_startData)
-----          L: 
$03CD: $9110:  F: [$0521] -> r17 (ssd_Mods -> r17)
$03CE: $0521:  
-----          L: 
$03CF: $FF16:  C: if (r17.6=1 then SKIP (r17.6 = 0)
$03D0: $C006:  C: goto $3D7 (RJMP) (r17.6 = 0)
               F: ssd_Last_Y ->  ...
$03D1: $9100:     [$0523] -> r16
$03D2: $0523:  
$03D3: $930F:     r16 ->
               F: ssd_Last_X ->  ...
$03D4: $9100:     [$0522] -> r16
$03D5: $0522:  
$03D6: $930F:     r16 ->
-----          L: 
$03D7: $E026:  F: $06 -> r18 (6 -> Temp)
-----          L: 
$03D8: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
$03D9: $FF14:  C: if (r17.4=1 then SKIP (r17.4 = 0)
$03DA: $C004:  C: goto $3DF (RJMP) (r17.4 = 0)
               C: if (Temp = 5) then goto $03EA ...
$03DB: $3025:     r18 = $05
$03DC: $F069:     if (Z=1) then goto $3EA
               C: if (Temp = 3) then goto $03EA ...
$03DD: $3023:     r18 = $03
$03DE: $F059:     if (Z=1) then goto $3EA
-----          L: 
$03DF: $D044:  F: rcall $424 (_ssd_do_Mods)
-----          L: 
$03E0: $FF16:  C: if (r17.6=1 then SKIP (r17.6 = 0)
$03E1: $C002:  C: goto $3E4 (RJMP) (r17.6 = 0)
$03E2: $700F:  F: r16 & $0F (r16 & #b00001111)
$03E3: $D057:  F: rcall $43B (ssd_do_Zoom)
-----          L: 
-----          L: 
$03E4: $FF17:  C: if (r17.7=1 then SKIP (r17.7 = 0)
$03E5: $C003:  C: goto $3E9 (RJMP) (r17.7 = 0)
$03E6: $930F:  F: r16 -> (r16 ->)
$03E7: $D350:  F: rcall $738 (_ssd_data_)
$03E8: $910F:  F: -> r16 (-> r16)
-----          L: 
$03E9: $D34E:  F: rcall $738 (_ssd_data_)
-----          L: 
               C: if (Temp --) then goto $03D8 ...
$03EA: $952A:     r18 --
$03EB: $F761:     if (Z=0) then goto $3D8
-----          L: 
$03EC: $D061:  F: rcall $44E (_ssd_do_Space)
-----          L: 
-----          L: 
$03ED: $DF50:  F: rcall $33E (_iics_stop)
-----          L: 
$03EE: $9110:  F: [$0521] -> r17 (ssd_Mods -> r17)
$03EF: $0521:  
-----          L: 
$03F0: $FF16:  C: if (r17.6=1 then SKIP (r17.6 = 0)
$03F1: $C02F:  C: goto $421 (RJMP) (r17.6 = 0)
$03F2: $9736:  F: r30,r31 - $06 (Z - 6)
$03F3: $910F:  F: -> r16 (-> r16)
$03F4: $9300:  F: r16 -> [$0522] (r16 -> ssd_Last_X)
$03F5: $0522:  
-----          L: 
$03F6: $910F:  F: -> r16 (-> r16)
$03F7: $930F:  F: r16 -> (r16 ->)
$03F8: $9503:  F: r16 ++ (r16 ++)
$03F9: $9300:  F: r16 -> [$0523] (r16 -> ssd_Last_Y)
$03FA: $0523:  
$03FB: $931F:  F: r17 -> (r17 ->)
-----          L: 
$03FC: $9100:  F: [$0522] -> r16 (ssd_Last_X -> r16)
$03FD: $0522:  
$03FE: $9110:  F: [$0523] -> r17 (ssd_Last_Y -> r17)
$03FF: $0523:  
$0400: $DF61:  F: rcall $362 (_ssd_Pos_)
-----          L: 
$0401: $911F:  F: -> r17 (-> r17)
-----          L: 
$0402: $D344:  F: rcall $747 (_ssd_startData)
-----          L: 
$0403: $E026:  F: $06 -> r18 (6 -> Temp)
-----          L: 
$0404: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
$0405: $FF14:  C: if (r17.4=1 then SKIP (r17.4 = 0)
$0406: $C004:  C: goto $40B (RJMP) (r17.4 = 0)
               C: if (Temp = 5) then goto $0415 ...
$0407: $3025:     r18 = $05
$0408: $F061:     if (Z=1) then goto $415
               C: if (Temp = 3) then goto $0415 ...
$0409: $3023:     r18 = $03
$040A: $F051:     if (Z=1) then goto $415
-----          L: 
$040B: $D018:  F: rcall $424 (_ssd_do_Mods)
-----          L: 
$040C: $9502:  F: >> r16 << (>> r16 <<)
$040D: $700F:  F: r16 & $0F (r16 & #b00001111)
$040E: $D02C:  F: rcall $43B (ssd_do_Zoom)
-----          L: 
$040F: $FF17:  C: if (r17.7=1 then SKIP (r17.7 = 0)
$0410: $C003:  C: goto $414 (RJMP) (r17.7 = 0)
$0411: $930F:  F: r16 -> (r16 ->)
$0412: $D325:  F: rcall $738 (_ssd_data_)
$0413: $910F:  F: -> r16 (-> r16)
-----          L: 
$0414: $D323:  F: rcall $738 (_ssd_data_)
-----          L: 
               C: if (Temp --) then goto $0404 ...
$0415: $952A:     r18 --
$0416: $F769:     if (Z=0) then goto $404
-----          L: 
$0417: $D036:  F: rcall $44E (_ssd_do_Space)
-----          L: 
-----          L: 
$0418: $DF25:  F: rcall $33E (_iics_stop)
-----          L: 
$0419: $910F:  F: -> r16 (-> r16)
$041A: $9300:  F: r16 -> [$0523] (r16 -> ssd_Last_Y)
$041B: $0523:  
$041C: $9100:  F: [$0522] -> r16 (ssd_Last_X -> r16)
$041D: $0522:  
$041E: $9110:  F: [$0523] -> r17 (ssd_Last_Y -> r17)
$041F: $0523:  
$0420: $DF41:  F: rcall $362 (_ssd_Pos_)
-----          L: 
               F: -> Z  ...
$0421: $91FF:     -> r31
$0422: $91EF:     -> r30
-----          L: 
$0423: $9508:  F: RET (ret)
-----          V: _ssd_do_Mods
-----          L: 
$0424: $FF15:  C: if (r17.5=1 then SKIP (r17.5 = 0)
$0425: $C007:  C: goto $42D (RJMP) (r17.5 = 0)
               C: if (Temp -= 5) then goto $042D ...
$0426: $3025:     r18 = $05
$0427: $F429:     if (Z=0) then goto $42D
$0428: $9732:  F: r30,r31 - $02 (Z - 2)
$0429: $9124:  F: LPM[Z] -> r18 (LPM[Z] -> Temp)
$042A: $9632:  F: r30,r31 + $02 (Z + 2)
$042B: $2B02:  F: r16 ! r18 (r16 ! Temp)
$042C: $E025:  F: $05 -> r18 (5 -> Temp)
-----          L: 
$042D: $FF13:  C: if (r17.3=1 then SKIP (r17.3 = 0)
$042E: $C007:  C: goto $436 (RJMP) (r17.3 = 0)
$042F: $FB06:  F: r16.6 -> T (r16.6 -> T)
$0430: $0F00:  F: << r16 (<< r16)
$0431: $F408:  C: if (C=0) then goto $433 (C = 1)
$0432: $6800:  F: r16 ! $80 (1 -> r16.7)
$0433: $F008:  C: if (C=1) then goto $435 (C = 0)
$0434: $770F:  F: r16 & $7F (0 -> r16.7)
$0435: $F906:  F: T -> r16.6 (T -> r16.6)
-----          L: 
$0436: $FD10:  C: if (r17.0=0 then SKIP (r17.0 = 1)
$0437: $6800:  F: r16 ! $80 (r16 ! #b10000000)
$0438: $FD11:  C: if (r17.1=0 then SKIP (r17.1 = 1)
$0439: $9500:  F: | r16 (|r16)
-----          L: 
$043A: $9508:  F: RET (ret)
-----          L: 
-----          V: ssd_do_Zoom
               F: Z ->  ...
$043B: $93EF:     r30 ->
$043C: $93FF:     r31 ->
               F: 2*D_ssd_Zoom -> Z  ...
$043D: $E8EC:     $8C -> r30
$043E: $E0F8:     $08 -> r31
$043F: $0FE0:  F: r30 + r16 (ZL + r16)
$0440: $E000:  F: $00 -> r16 (0 -> r16)
$0441: $1FF0:  F: r31 + r16 + (ZH + r16 +)
$0442: $9104:  F: LPM[Z] -> r16 (LPM[Z] -> r16)
               F: -> Z  ...
$0443: $91FF:     -> r31
$0444: $91EF:     -> r30
$0445: $9508:  F: RET (ret)
-----          L: 
-----          V: D_ssd_Zoom
$0446: $00 $03 $0C $0F
$0448: $30 $33 $3C $3F
$044A: $C0 $C3 $CC $CF
$044C: $F0 $F3 $FC $FF
-----          L: 
-----          V: _ssd_do_Space
$044E: $FF12:  C: if (r17.2=1 then SKIP (r17.2 = 0)
$044F: $C007:  C: goto $457 (RJMP) (r17.2 = 0)
$0450: $E000:  F: $00 -> r16 (0 -> r16)
$0451: $FF17:  C: if (r17.7=1 then SKIP (r17.7 = 0)
$0452: $C003:  C: goto $456 (RJMP) (r17.7 = 0)
$0453: $930F:  F: r16 -> (r16 ->)
$0454: $D2E3:  F: rcall $738 (_ssd_data_)
$0455: $910F:  F: -> r16 (-> r16)
-----          L: 
$0456: $D2E1:  F: rcall $738 (_ssd_data_)
-----          L: 
$0457: $9508:  F: RET (ret)
-----          L: 
-----          V: _ssd_sprite_Pos
-----          L: 
-----          L: 
-----          L: 
$0458: $E201:  F: $21 -> r16 ($21 -> r16)
$0459: $D2D4:  F: rcall $72E (_ssd_command_)
$045A: $9100:  F: [$0522] -> r16 (ssd_Last_X -> r16)
$045B: $0522:  
$045C: $D2D1:  F: rcall $72E (_ssd_command_)
$045D: $9100:  F: [$0522] -> r16 (ssd_Last_X -> r16)
$045E: $0522:  
$045F: $5E09:  F: r16 - $E9 (r16 + 23)
$0460: $D2CD:  F: rcall $72E (_ssd_command_)
-----          L: 
$0461: $E202:  F: $22 -> r16 ($22 -> r16)
$0462: $D2CB:  F: rcall $72E (_ssd_command_)
$0463: $9100:  F: [$0523] -> r16 (ssd_Last_Y -> r16)
$0464: $0523:  
$0465: $D2C8:  F: rcall $72E (_ssd_command_)
$0466: $E007:  F: $07 -> r16 (7 -> r16)
$0467: $D2C6:  F: rcall $72E (_ssd_command_)
$0468: $9508:  F: RET (ret)
-----          V: _ssd_spite_
$0469: $930F:  F: r16 -> (r16 ->)
$046A: $DFED:  F: rcall $458 (_ssd_sprite_Pos)
-----          L: 
$046B: $911F:  F: -> r17 (-> r17)
               F: Z ->  ...
$046C: $93EF:     r30 ->
$046D: $93FF:     r31 ->
               F: r17 -> Z  ...
$046E: $2FE1:     r17 -> r30
$046F: $E0F0:     $00 -> r31
               F: <<Z  ...
$0470: $0FEE:     << r30
$0471: $1FFF:     << r31 <
               F: <<Z  ...
$0472: $0FEE:     << r30
$0473: $1FFF:     << r31 <
               F: <<Z  ...
$0474: $0FEE:     << r30
$0475: $1FFF:     << r31 <
$0476: $E000:  F: $00 -> r16 (0 -> r16)
               F: r16:Word >>  ...
$0477: $9516:     r17 >>
$0478: $9507:     > r16 >>
               F: r16:Word >>  ...
$0479: $9516:     r17 >>
$047A: $9507:     > r16 >>
               F: Z + r16:Word  ...
$047B: $0FE0:     r30 + r16
$047C: $1FF1:     r31 + r17 +
-----          L: 
               F: Z + 2*D_ssd_sprites  ...
$047D: $5EEE:     r30 - $EE
$047E: $4FF6:     r31 - $F6 -
$047F: $E408:  F: $48 -> r16 (72 -> r16)
-----          L: 
$0480: $930F:  F: r16 -> (r16 ->)
$0481: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
$0482: $D2B5:  F: rcall $738 (_ssd_data_)
$0483: $910F:  F: -> r16 (-> r16)
               C: if (r16 --) then goto $0480 ...
$0484: $950A:     r16 --
$0485: $F7D1:     if (Z=0) then goto $480
-----          L: 
-----          L: 
-----          L: 
               F: -> Z  ...
$0486: $91FF:     -> r31
$0487: $91EF:     -> r30
$0488: $9508:  F: RET (ret)
-----          L: 
-----          L: D_ssd_sprites
$0489: $00 $80 $60 $10 $08 $04 $04 $02 $02 $01 $01 $01 $01 $01 $01 $02
$0491: $02 $04 $04 $08 $10 $60 $80 $00 $7E $81 $00 $00 $00 $00 $00 $00
$0499: $00 $7E $42 $42 $42 $42 $7E $00 $00 $00 $00 $00 $00 $00 $81 $7E
$04A1: $00 $01 $06 $08 $10 $20 $20 $40 $40 $80 $80 $80 $80 $80 $80 $40
$04A9: $40 $20 $20 $10 $08 $06 $01 $00 $00 $80 $60 $10 $08 $04 $04 $02
$04B1: $02 $01 $01 $01 $01 $01 $01 $82 $82 $84 $84 $88 $90 $E0 $80 $00
$04B9: $7E $81 $40 $20 $10 $08 $08 $04 $04 $02 $02 $01 $81 $41 $21 $10
$04C1: $08 $04 $04 $02 $02 $02 $83 $7E $00 $01 $06 $08 $10 $20 $20 $40
$04C9: $40 $80 $F0 $8E $81 $80 $80 $40 $40 $20 $20 $10 $08 $06 $01 $00
$04D1: $00 $80 $60 $10 $08 $04 $04 $02 $02 $01 $01 $01 $01 $01 $01 $02
$04D9: $02 $04 $04 $88 $50 $60 $80 $00 $7E $81 $00 $80 $40 $20 $20 $10
$04E1: $10 $88 $48 $44 $24 $24 $92 $92 $4A $29 $25 $14 $12 $09 $85 $7E
$04E9: $00 $01 $07 $08 $10 $28 $24 $42 $41 $E0 $98 $84 $82 $81 $80 $40
$04F1: $40 $20 $20 $10 $08 $06 $01 $00 $00 $80 $60 $10 $08 $04 $04 $02
$04F9: $02 $01 $81 $41 $01 $01 $81 $62 $52 $84 $84 $08 $10 $60 $80 $00
$0501: $7E $81 $00 $00 $20 $C0 $40 $80 $00 $0F $30 $C1 $06 $08 $13 $0C
$0509: $00 $00 $00 $01 $01 $02 $83 $7E $00 $01 $06 $08 $14 $23 $20 $40
$0511: $43 $84 $82 $81 $80 $80 $80 $40 $40 $20 $20 $10 $08 $06 $01 $00
$0519: $00 $80 $60 $10 $08 $04 $04 $02 $02 $01 $01 $01 $01 $01 $01 $02
$0521: $02 $04 $04 $08 $10 $60 $80 $00 $7E $81 $00 $00 $00 $00 $00 $00
$0529: $00 $00 $00 $7E $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $81 $7E
$0531: $00 $01 $06 $08 $10 $20 $20 $40 $40 $80 $80 $80 $80 $80 $80 $40
$0539: $40 $20 $20 $10 $08 $06 $01 $00 $00 $80 $60 $10 $08 $04 $04 $02
$0541: $02 $01 $01 $01 $01 $01 $01 $02 $02 $04 $04 $08 $10 $60 $80 $00
$0549: $7E $81 $00 $00 $00 $00 $00 $00 $00 $00 $7E $00 $00 $7E $00 $00
$0551: $00 $00 $00 $00 $00 $00 $81 $7E $00 $01 $06 $08 $10 $20 $20 $40
$0559: $40 $80 $80 $80 $80 $80 $80 $40 $40 $20 $20 $10 $08 $06 $01 $00
$0561: $00 $80 $60 $10 $08 $04 $04 $02 $02 $31 $71 $71 $21 $01 $01 $02
$0569: $02 $04 $04 $08 $10 $60 $80 $00 $7E $81 $00 $00 $00 $00 $00 $00
$0571: $38 $0E $FF $7F $64 $C4 $82 $01 $00 $00 $00 $00 $00 $00 $81 $7E
$0579: $00 $01 $06 $08 $10 $20 $20 $40 $46 $83 $81 $80 $80 $80 $87 $44
$0581: $40 $20 $20 $10 $08 $06 $01 $00 $00 $80 $60 $10 $08 $44 $44 $42
$0589: $42 $41 $41 $41 $09 $F9 $31 $62 $C2 $84 $04 $08 $10 $60 $80 $00
$0591: $7E $81 $00 $00 $00 $00 $00 $00 $82 $92 $92 $92 $92 $93 $92 $90
$0599: $9F $D1 $E3 $BE $1C $00 $81 $7E $00 $01 $06 $08 $10 $24 $24 $44
$05A1: $44 $84 $84 $84 $84 $84 $84 $44 $44 $27 $24 $10 $08 $06 $01 $00
-----          V: _ssd1306_Init
$05A9: $9478:  F: 1 -> I (1 -> I)
$05AA: $EA0E:  F: $AE -> r16 (SSD_OFF -> r16)
$05AB: $D182:  F: rcall $72E (_ssd_command_)
-----          L: 
$05AC: $ED05:  F: $D5 -> r16 (SSD_DISP_CLOCK -> r16)
$05AD: $D180:  F: rcall $72E (_ssd_command_)
$05AE: $EF00:  F: $F0 -> r16 ($F0 -> r16)
$05AF: $D17E:  F: rcall $72E (_ssd_command_)
-----          L: 
$05B0: $EA08:  F: $A8 -> r16 (SSD_MLTPX_RATIO -> r16)
$05B1: $D17C:  F: rcall $72E (_ssd_command_)
$05B2: $E30F:  F: $3F -> r16 ($3F -> r16)
$05B3: $D17A:  F: rcall $72E (_ssd_command_)
-----          L: 
$05B4: $ED03:  F: $D3 -> r16 (SSD_DISP_OFFSET -> r16)
$05B5: $D178:  F: rcall $72E (_ssd_command_)
$05B6: $E000:  F: $00 -> r16 ($00 -> r16)
$05B7: $D176:  F: rcall $72E (_ssd_command_)
-----          L: 
$05B8: $E400:  F: $40 -> r16 (SSD_DISPL_START_LINE -> r16)
$05B9: $D174:  F: rcall $72E (_ssd_command_)
-----          L: 
$05BA: $E80D:  F: $8D -> r16 (SSD_CHARGE_PUMP -> r16)
$05BB: $D172:  F: rcall $72E (_ssd_command_)
$05BC: $E104:  F: $14 -> r16 ($14 -> r16)
$05BD: $D170:  F: rcall $72E (_ssd_command_)
-----          L: 
$05BE: $E200:  F: $20 -> r16 (SSD_ADDR_MODE -> r16)
$05BF: $D16E:  F: rcall $72E (_ssd_command_)
$05C0: $E000:  F: $00 -> r16 ($00 -> r16)
$05C1: $D16C:  F: rcall $72E (_ssd_command_)
-----          L: 
$05C2: $EA01:  F: $A1 -> r16 ($A1 -> r16)
$05C3: $D16A:  F: rcall $72E (_ssd_command_)
$05C4: $EC08:  F: $C8 -> r16 ($C8 -> r16)
$05C5: $D168:  F: rcall $72E (_ssd_command_)
-----          L: 
$05C6: $ED0A:  F: $DA -> r16 ($DA -> r16)
$05C7: $D166:  F: rcall $72E (_ssd_command_)
$05C8: $E102:  F: $12 -> r16 ($12 -> r16)
$05C9: $D164:  F: rcall $72E (_ssd_command_)
-----          L: 
$05CA: $E801:  F: $81 -> r16 (SSD_CONTRAST -> r16)
$05CB: $D162:  F: rcall $72E (_ssd_command_)
$05CC: $EC0F:  F: $CF -> r16 ($CF -> r16)
$05CD: $D160:  F: rcall $72E (_ssd_command_)
-----          L: 
$05CE: $ED09:  F: $D9 -> r16 ($D9 -> r16)
$05CF: $D15E:  F: rcall $72E (_ssd_command_)
$05D0: $EF01:  F: $F1 -> r16 ($F1 -> r16)
$05D1: $D15C:  F: rcall $72E (_ssd_command_)
-----          L: 
$05D2: $ED0B:  F: $DB -> r16 ($DB -> r16)
$05D3: $D15A:  F: rcall $72E (_ssd_command_)
$05D4: $E300:  F: $30 -> r16 ($30 -> r16)
$05D5: $D158:  F: rcall $72E (_ssd_command_)
$05D6: $EA04:  F: $A4 -> r16 ($A4 -> r16)
$05D7: $D156:  F: rcall $72E (_ssd_command_)
-----          L: 
$05D8: $EA06:  F: $A6 -> r16 ($A6 -> r16)
$05D9: $D154:  F: rcall $72E (_ssd_command_)
-----          L: 
$05DA: $EA0F:  F: $AF -> r16 (SSD_ON -> r16)
$05DB: $D152:  F: rcall $72E (_ssd_command_)
-----          L: 
$05DC: $DD9C:  F: rcall $379 (_ssd_Clr)
-----          L: 
$05DD: $9508:  F: RET (ret)
-----          V: D_ssd_font
-----          L: 
$05DE: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$05E6: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$05EE: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$05F6: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$05FE: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$0606: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$060E: $00 $00 $00 $00 $00 $00 $00 $00 $5F $00 $00 $00 $00 $07 $00 $07
$0616: $00 $00 $14 $7F $14 $7F $14 $00 $24 $2A $7F $2A $12 $00 $23 $13
$061E: $08 $64 $62 $00 $36 $49 $55 $22 $50 $00 $00 $05 $03 $00 $00 $00
$0626: $00 $1C $22 $41 $00 $00 $00 $41 $22 $1C $00 $00 $14 $08 $3E $08
$062E: $14 $00 $08 $08 $3E $08 $08 $00 $00 $50 $30 $00 $00 $00 $08 $08
$0636: $08 $08 $08 $00 $00 $60 $60 $00 $00 $00 $20 $10 $08 $04 $02 $00
$063E: $3E $51 $49 $45 $3E $00 $00 $42 $7F $40 $00 $00 $42 $61 $51 $49
$0646: $46 $00 $21 $41 $45 $4B $31 $00 $18 $14 $12 $7F $10 $00 $27 $45
$064E: $45 $45 $39 $00 $3C $4A $49 $49 $30 $00 $01 $71 $09 $05 $03 $00
$0656: $36 $49 $49 $49 $36 $00 $06 $49 $49 $29 $1E $00 $00 $36 $36 $00
$065E: $00 $00 $00 $56 $36 $00 $00 $00 $08 $14 $22 $41 $00 $00 $14 $14
$0666: $14 $14 $14 $00 $00 $41 $22 $14 $08 $00 $02 $01 $51 $09 $06 $00
$066E: $32 $49 $79 $41 $3E $00 $7E $11 $11 $11 $7E $00 $7F $49 $49 $49
$0676: $36 $00 $3E $41 $41 $41 $22 $00 $7F $41 $41 $22 $1C $00 $7F $49
$067E: $49 $49 $41 $00 $7F $09 $09 $09 $01 $00 $3E $41 $49 $49 $7A $00
$0686: $7F $08 $08 $08 $7F $00 $00 $41 $7F $41 $00 $00 $20 $40 $41 $3F
$068E: $01 $00 $7F $08 $14 $22 $41 $00 $7F $40 $40 $40 $40 $00 $7F $02
$0696: $0C $02 $7F $00 $7F $04 $08 $10 $7F $00 $3E $41 $41 $41 $3E $00
$069E: $7F $09 $09 $09 $06 $00 $3E $41 $51 $21 $5E $00 $7F $09 $19 $29
$06A6: $46 $00 $46 $49 $49 $49 $31 $00 $01 $01 $7F $01 $01 $00 $3F $40
$06AE: $40 $40 $3F $00 $1F $20 $40 $20 $1F $00 $3F $40 $38 $40 $3F $00
$06B6: $63 $14 $08 $14 $63 $00 $07 $08 $70 $08 $07 $00 $61 $51 $49 $45
$06BE: $43 $00 $00 $7F $41 $41 $00 $00 $02 $04 $08 $10 $20 $00 $00 $41
$06C6: $41 $7F $00 $00 $00 $1F $10 $54 $38 $10 $00 $C0 $C0 $C0 $C0 $00
$06CE: $00 $01 $02 $04 $00 $00 $20 $54 $54 $54 $78 $00 $7F $48 $44 $44
$06D6: $38 $00 $38 $44 $44 $44 $20 $00 $38 $44 $44 $48 $7F $00 $38 $54
$06DE: $54 $54 $18 $00 $08 $7E $09 $01 $02 $00 $0C $52 $52 $52 $3E $00
$06E6: $7F $08 $04 $04 $78 $00 $00 $44 $7D $40 $00 $00 $20 $40 $44 $3D
$06EE: $00 $00 $7F $10 $28 $44 $00 $00 $00 $41 $7F $40 $00 $00 $7C $04
$06F6: $18 $04 $78 $00 $7C $08 $04 $04 $78 $00 $38 $44 $44 $44 $38 $00
$06FE: $7C $14 $14 $14 $08 $00 $08 $14 $14 $18 $7C $00 $7C $08 $04 $04
$0706: $08 $00 $48 $54 $54 $54 $20 $00 $04 $3F $44 $40 $20 $00 $3C $40
$070E: $40 $20 $7C $00 $1C $20 $40 $20 $1C $00 $3C $40 $30 $40 $3C $00
$0716: $44 $28 $10 $28 $44 $00 $0C $50 $50 $50 $3C $00 $44 $64 $54 $4C
$071E: $44 $00 $00 $08 $36 $41 $00 $00 $00 $00 $7F $00 $00 $00 $00 $41
$0726: $36 $08 $00 $00 $10 $08 $08 $10 $08 $00 $00 $00 $00 $00 $00 $00
-----          L: 
-----          V: _ssd_Convert
-----          L: 
-----          V: _ssd_command_
$072E: $930F:  F: r16 -> (r16 ->)
-----          L: 
$072F: $DBEB:  F: rcall $31B (_iics_start)
-----          L: 
$0730: $E708:  F: $78 -> r16 (SSD_ADDR -> r16)
$0731: $DBEC:  F: rcall $31E (_iics_send_)
-----          L: 
$0732: $E000:  F: $00 -> r16 ($00 -> r16)
$0733: $DBEA:  F: rcall $31E (_iics_send_)
-----          L: 
$0734: $910F:  F: -> r16 (-> r16)
$0735: $DBE8:  F: rcall $31E (_iics_send_)
-----          L: 
$0736: $DC07:  F: rcall $33E (_iics_stop)
$0737: $9508:  F: RET (RET)
-----          V: _ssd_data_
$0738: $DBE5:  F: rcall $31E (_iics_send_)
$0739: $9100:  F: [$0522] -> r16 (ssd_Last_X -> r16)
$073A: $0522:  
$073B: $9503:  F: r16 ++ (r16++)
               C: if (r16 < 128) then goto $0744 ...
$073C: $3800:     r16 = $80
$073D: $F030:     if ( < ) then goto $744
               F: ssd_Last_Y++  ...
$073E: $9100:     [$0523] -> r16
$073F: $0523:  
$0740: $9503:     r16 ++
$0741: $9300:     r16 -> [$0523]
$0742: $0523:  
$0743: $E000:  F: $00 -> r16 (0 -> r16)
-----          L: 
$0744: $9300:  F: r16 -> [$0522] (r16 -> ssd_Last_X)
$0745: $0522:  
$0746: $9508:  F: RET (RET)
-----          V: _ssd_startData
-----          L: 
$0747: $DBD3:  F: rcall $31B (_iics_start)
-----          L: 
$0748: $E708:  F: $78 -> r16 (SSD_ADDR -> r16)
$0749: $DBD4:  F: rcall $31E (_iics_send_)
-----          L: 
$074A: $E400:  F: $40 -> r16 ($40 -> r16)
$074B: $DBD2:  F: rcall $31E (_iics_send_)
-----          L: 
$074C: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          V: _print_string_l_
               F: << Z  ...
$074D: $0FEE:     << r30
$074E: $1FFF:     << r31 <
-----          L: 
$074F: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $0753 ...
$0750: $3000:     r16 = $00
$0751: $F409:     if (Z=0) then goto $753
$0752: $9508:  F: RET (ret)
$0753: $DC36:  F: rcall $38A (_ssd_Parse_r16)
$0754: $CFFA:  J: goto $74F (RJMP)
-----          L: 
$0755: $9508:  F: RET (ret)
-----          V: _print_string_
               F: Z -> PRINT_Z_temp  ...
$0756: $93E0:     r30 -> [$0524]
$0757: $0524:  
$0758: $93F0:     r31 -> [$0525]
$0759: $0525:  
               F: -> Z  ...
$075A: $91FF:     -> r31
$075B: $91EF:     -> r30
               F: << Z  ...
$075C: $0FEE:     << r30
$075D: $1FFF:     << r31 <
-----          L: 
$075E: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $0763 ...
$075F: $3000:     r16 = $00
$0760: $F011:     if (Z=1) then goto $763
$0761: $DC28:  F: rcall $38A (_ssd_Parse_r16)
$0762: $CFFB:  J: goto $75E (RJMP)
-----          L: 
$0763: $9631:  F: r30,r31 + $01 (Z + 1)
               F: Z >>  ...
$0764: $95F6:     r31 >>
$0765: $95E7:     > r30 >>
               F: Z ->  ...
$0766: $93EF:     r30 ->
$0767: $93FF:     r31 ->
               F: PRINT_Z_temp -> Z  ...
$0768: $91E0:     [$0524] -> r30
$0769: $0524:  
$076A: $91F0:     [$0525] -> r31
$076B: $0525:  
-----          L: 
$076C: $9508:  F: RET (ret)
-----          V: _print_string_v_
-----          L: 
$076D: $9101:  F: [Z++] -> r16 ([Z++] -> r16)
               C: if (r16 = EOS) then goto $0771 ...
$076E: $3000:     r16 = $00
$076F: $F409:     if (Z=0) then goto $771
$0770: $9508:  F: RET (ret)
$0771: $DC18:  F: rcall $38A (_ssd_Parse_r16)
$0772: $CFFA:  J: goto $76D (RJMP)
-----          L: 
$0773: $9508:  F: RET (ret)
-----          V: _print_DECV2_
-----          L: 
               F: "0" -> PRINT_Dec0_Flag  ...
$0774: $E300:     $30 -> r16
$0775: $9300:     r16 -> [$0526]
$0776: $0526:  
-----          L: 
               F: 10000 -> r17:Word  ...
$0777: $E110:     $10 -> r17
$0778: $E227:     $27 -> r18
$0779: $D022:  F: rcall $79C (_Print_DEC_Char_)
-----          L: 
               F: 1000 -> r17:Word  ...
$077A: $EE18:     $E8 -> r17
$077B: $E023:     $03 -> r18
$077C: $D01F:  F: rcall $79C (_Print_DEC_Char_)
-----          L: 
               F: 100 -> r17:Word  ...
$077D: $E614:     $64 -> r17
$077E: $E020:     $00 -> r18
$077F: $D01C:  F: rcall $79C (_Print_DEC_Char_)
-----          L: 
               F: 10 -> r17:Word  ...
$0780: $E01A:     $0A -> r17
$0781: $E020:     $00 -> r18
$0782: $D04B:  F: rcall $7CE (_Print_DEC_Char)
-----          L: 
$0783: $E20E:  F: $2E -> r16 ("." -> r16)
$0784: $DC05:  F: rcall $38A (_ssd_Parse_r16)
-----          L: 
$0785: $E300:  F: $30 -> r16 ("0" -> r16)
$0786: $0F0E:  F: r16 + r30 (r16 + ZL)
$0787: $DC02:  F: rcall $38A (_ssd_Parse_r16)
$0788: $9508:  F: RET (ret)
-----          L: 
-----          V: _print_DEC2_
-----          L: 
               F: "0" -> PRINT_Dec0_Flag  ...
$0789: $E300:     $30 -> r16
$078A: $9300:     r16 -> [$0526]
$078B: $0526:  
-----          L: 
               F: 10000 -> r17:Word  ...
$078C: $E110:     $10 -> r17
$078D: $E227:     $27 -> r18
$078E: $D00D:  F: rcall $79C (_Print_DEC_Char_)
-----          L: 
               F: 1000 -> r17:Word  ...
$078F: $EE18:     $E8 -> r17
$0790: $E023:     $03 -> r18
$0791: $D00A:  F: rcall $79C (_Print_DEC_Char_)
-----          L: 
               F: 100 -> r17:Word  ...
$0792: $E614:     $64 -> r17
$0793: $E020:     $00 -> r18
$0794: $D007:  F: rcall $79C (_Print_DEC_Char_)
-----          L: 
               F: 10 -> r17:Word  ...
$0795: $E01A:     $0A -> r17
$0796: $E020:     $00 -> r18
$0797: $D036:  F: rcall $7CE (_Print_DEC_Char)
-----          L: 
$0798: $E300:  F: $30 -> r16 ("0" -> r16)
$0799: $0F0E:  F: r16 + r30 (r16 + ZL)
$079A: $DBEF:  F: rcall $38A (_ssd_Parse_r16)
$079B: $9508:  F: RET (ret)
-----          L: 
-----          V: _Print_DEC_Char_
-----          L: 
               C: if (Z < r17:Word) then goto $07A3 ...
$079C: $17E1:     r30 = r17
$079D: $07F2:     r31 = r18=
$079E: $F020:     if ( < ) then goto $7A3
               F: Z - r17:Word  ...
$079F: $1BE1:     r30 - r17
$07A0: $0BF2:     r31 - r18 -
$07A1: $9503:  F: r16 ++ (r16 ++)
$07A2: $CFF9:  J: goto $79C (RJMP)
-----          L: 
$07A3: $9508:  F: RET (ret)
-----          V: _print_HEX_
$07A4: $2F0F:  F: r31 -> r16 (ZH -> r16)
$07A5: $9502:  F: >> r16 << (>>r16<<)
$07A6: $D03B:  F: rcall $7E2 (_Print_HEX_Char)
-----          L: 
$07A7: $2F0F:  F: r31 -> r16 (ZH -> r16)
$07A8: $D039:  F: rcall $7E2 (_Print_HEX_Char)
-----          L: 
$07A9: $2F0E:  F: r30 -> r16 (ZL -> r16)
$07AA: $9502:  F: >> r16 << (>>r16<<)
$07AB: $D036:  F: rcall $7E2 (_Print_HEX_Char)
-----          L: 
$07AC: $2F0E:  F: r30 -> r16 (ZL -> r16)
$07AD: $D034:  F: rcall $7E2 (_Print_HEX_Char)
-----          L: 
$07AE: $9508:  F: RET (ret)
-----          L: 
-----          V: _print_DEC_
-----          L: 
               F: "0" -> PRINT_Dec0_Flag  ...
$07AF: $E300:     $30 -> r16
$07B0: $9300:     r16 -> [$0526]
$07B1: $0526:  
-----          L: 
               F: 10000 -> r17:Word  ...
$07B2: $E110:     $10 -> r17
$07B3: $E227:     $27 -> r18
$07B4: $D019:  F: rcall $7CE (_Print_DEC_Char)
-----          L: 
               F: 1000 -> r17:Word  ...
$07B5: $EE18:     $E8 -> r17
$07B6: $E023:     $03 -> r18
$07B7: $D016:  F: rcall $7CE (_Print_DEC_Char)
-----          L: 
               F: 100 -> r17:Word  ...
$07B8: $E614:     $64 -> r17
$07B9: $E020:     $00 -> r18
$07BA: $D013:  F: rcall $7CE (_Print_DEC_Char)
-----          L: 
               F: 10 -> r17:Word  ...
$07BB: $E01A:     $0A -> r17
$07BC: $E020:     $00 -> r18
$07BD: $D010:  F: rcall $7CE (_Print_DEC_Char)
-----          L: 
$07BE: $E300:  F: $30 -> r16 ("0" -> r16)
$07BF: $0F0E:  F: r16 + r30 (r16 + ZL)
$07C0: $DBC9:  F: rcall $38A (_ssd_Parse_r16)
$07C1: $9508:  F: RET (ret)
-----          L: 
-----          V: _print_BIT_
-----          L: 
               F: << Z  ...
$07C2: $0FEE:     << r30
$07C3: $1FFF:     << r31 <
$07C4: $F008:  C: if (C=1) then goto $7C6 (C = 0)
$07C5: $E300:  F: $30 -> r16 (PRINT_BIT_ZERO_CHAR -> r16)
$07C6: $F408:  C: if (C=0) then goto $7C8 (C = 1)
$07C7: $E301:  F: $31 -> r16 (PRINT_BIT_ONE_CHAR -> r16)
$07C8: $931F:  F: r17 -> (r17 ->)
$07C9: $DBC0:  F: rcall $38A (_ssd_Parse_r16)
$07CA: $911F:  F: -> r17 (-> r17)
               C: if (r17 --) then goto $07C2 ...
$07CB: $951A:     r17 --
$07CC: $F7A9:     if (Z=0) then goto $7C2
$07CD: $9508:  F: RET (ret)
-----          L: 
-----          V: _Print_DEC_Char
$07CE: $E300:  F: $30 -> r16 ("0" -> r16)
-----          L: 
               C: if (Z < r17:Word) then goto $07D6 ...
$07CF: $17E1:     r30 = r17
$07D0: $07F2:     r31 = r18=
$07D1: $F020:     if ( < ) then goto $7D6
               F: Z - r17:Word  ...
$07D2: $1BE1:     r30 - r17
$07D3: $0BF2:     r31 - r18 -
$07D4: $9503:  F: r16 ++ (r16 ++)
$07D5: $CFF9:  J: goto $7CF (RJMP)
-----          L: 
-----          L: 
               C: if (r16 -= "0") then goto $07DE ...
$07D6: $3300:     r16 = $30
$07D7: $F431:     if (Z=0) then goto $7DE
$07D8: $9110:  F: [$0526] -> r17 (PRINT_Dec0_Flag -> r17)
$07D9: $0526:  
               C: if (r17 -= "0") then goto $07E0 ...
$07DA: $3310:     r17 = $30
$07DB: $F421:     if (Z=0) then goto $7E0
-----          L: 
$07DC: $E300:  F: $30 -> r16 (PRINT_DEC_ZERO_CHAR -> r16)
-----          L: 
$07DD: $C002:  J: goto $7E0 (RJMP)
-----          L: 
$07DE: $9300:  F: r16 -> [$0526] (r16 -> PRINT_Dec0_Flag)
$07DF: $0526:  
-----          L: 
$07E0: $DBA9:  F: rcall $38A (_ssd_Parse_r16)
$07E1: $9508:  F: RET (ret)
-----          L: 
-----          V: _Print_HEX_Char
$07E2: $700F:  F: r16 & $0F (r16 & #b00001111)
               C: if (r16 < 10) then goto $07E6 ...
$07E3: $300A:     r16 = $0A
$07E4: $F408:     if ( >= ) then goto $7E6
$07E5: $5D00:  F: r16 - $D0 (r16 + "0")
               C: if (r16 < 16) then goto $07E9 ...
$07E6: $3100:     r16 = $10
$07E7: $F408:     if ( >= ) then goto $7E9
$07E8: $5C09:  F: r16 - $C9 (r16 + "A"-10)
$07E9: $DBA0:  F: rcall $38A (_ssd_Parse_r16)
$07EA: $9508:  F: RET (ret)
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\PrintU.alg    ***********
-----          V: _PrintU_string_l_
               F: << Z  ...
$07EB: $0FEE:     << r30
$07EC: $1FFF:     << r31 <
-----          L: 
$07ED: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $07F1 ...
$07EE: $3000:     r16 = $00
$07EF: $F409:     if (Z=0) then goto $7F1
$07F0: $9508:  F: RET (ret)
$07F1: $D98F:  F: rcall $181 (_UART_PUSH_r16)
$07F2: $CFFA:  J: goto $7ED (RJMP)
-----          L: 
$07F3: $9508:  F: RET (ret)
-----          V: _PrintU_string_
               F: Z -> PrintU_Z_temp  ...
$07F4: $93E0:     r30 -> [$0527]
$07F5: $0527:  
$07F6: $93F0:     r31 -> [$0528]
$07F7: $0528:  
               F: -> Z  ...
$07F8: $91FF:     -> r31
$07F9: $91EF:     -> r30
               F: << Z  ...
$07FA: $0FEE:     << r30
$07FB: $1FFF:     << r31 <
-----          L: 
$07FC: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $0801 ...
$07FD: $3000:     r16 = $00
$07FE: $F011:     if (Z=1) then goto $801
$07FF: $D981:  F: rcall $181 (_UART_PUSH_r16)
$0800: $CFFB:  J: goto $7FC (RJMP)
-----          L: 
$0801: $9631:  F: r30,r31 + $01 (Z + 1)
               F: Z >>  ...
$0802: $95F6:     r31 >>
$0803: $95E7:     > r30 >>
               F: Z ->  ...
$0804: $93EF:     r30 ->
$0805: $93FF:     r31 ->
               F: PrintU_Z_temp -> Z  ...
$0806: $91E0:     [$0527] -> r30
$0807: $0527:  
$0808: $91F0:     [$0528] -> r31
$0809: $0528:  
-----          L: 
$080A: $9508:  F: RET (ret)
-----          V: _PrintU_string_v_
-----          L: 
$080B: $9101:  F: [Z++] -> r16 ([Z++] -> r16)
               C: if (r16 = EOS) then goto $080F ...
$080C: $3000:     r16 = $00
$080D: $F409:     if (Z=0) then goto $80F
$080E: $9508:  F: RET (ret)
$080F: $D971:  F: rcall $181 (_UART_PUSH_r16)
$0810: $CFFA:  J: goto $80B (RJMP)
-----          L: 
$0811: $9508:  F: RET (ret)
-----          V: _PrintU_HEX_
$0812: $2F0E:  F: r30 -> r16 (ZL -> r16)
$0813: $9502:  F: >> r16 << (>>r16<<)
$0814: $D036:  F: rcall $84B (_PrintU_HEX_Char)
-----          L: 
$0815: $2F0E:  F: r30 -> r16 (ZL -> r16)
$0816: $D034:  F: rcall $84B (_PrintU_HEX_Char)
-----          L: 
$0817: $9508:  F: RET (ret)
-----          L: 
-----          V: _PrintU_DEC_
-----          L: 
               F: "0" -> PrintU_Dec0_Flag  ...
$0818: $E300:     $30 -> r16
$0819: $9300:     r16 -> [$0529]
$081A: $0529:  
-----          L: 
               F: 10000 -> r17:Word  ...
$081B: $E110:     $10 -> r17
$081C: $E227:     $27 -> r18
$081D: $D019:  F: rcall $837 (_PrintU_DEC_Char)
-----          L: 
               F: 1000 -> r17:Word  ...
$081E: $EE18:     $E8 -> r17
$081F: $E023:     $03 -> r18
$0820: $D016:  F: rcall $837 (_PrintU_DEC_Char)
-----          L: 
               F: 100 -> r17:Word  ...
$0821: $E614:     $64 -> r17
$0822: $E020:     $00 -> r18
$0823: $D013:  F: rcall $837 (_PrintU_DEC_Char)
-----          L: 
               F: 10 -> r17:Word  ...
$0824: $E01A:     $0A -> r17
$0825: $E020:     $00 -> r18
$0826: $D010:  F: rcall $837 (_PrintU_DEC_Char)
-----          L: 
$0827: $E300:  F: $30 -> r16 ("0" -> r16)
$0828: $0F0E:  F: r16 + r30 (r16 + ZL)
$0829: $D957:  F: rcall $181 (_UART_PUSH_r16)
$082A: $9508:  F: RET (ret)
-----          L: 
-----          V: _PrintU_BIT_
-----          L: 
               F: << Z  ...
$082B: $0FEE:     << r30
$082C: $1FFF:     << r31 <
$082D: $F008:  C: if (C=1) then goto $82F (C = 0)
$082E: $E300:  F: $30 -> r16 (PrintU_BIT_ZERO_CHAR -> r16)
$082F: $F408:  C: if (C=0) then goto $831 (C = 1)
$0830: $E301:  F: $31 -> r16 (PrintU_BIT_ONE_CHAR -> r16)
$0831: $931F:  F: r17 -> (r17 ->)
$0832: $D94E:  F: rcall $181 (_UART_PUSH_r16)
$0833: $911F:  F: -> r17 (-> r17)
               C: if (r17 --) then goto $082B ...
$0834: $951A:     r17 --
$0835: $F7A9:     if (Z=0) then goto $82B
$0836: $9508:  F: RET (ret)
-----          L: 
-----          V: _PrintU_DEC_Char
$0837: $E300:  F: $30 -> r16 ("0" -> r16)
-----          L: 
               C: if (Z < r17:Word) then goto $083F ...
$0838: $17E1:     r30 = r17
$0839: $07F2:     r31 = r18=
$083A: $F020:     if ( < ) then goto $83F
               F: Z - r17:Word  ...
$083B: $1BE1:     r30 - r17
$083C: $0BF2:     r31 - r18 -
$083D: $9503:  F: r16 ++ (r16 ++)
$083E: $CFF9:  J: goto $838 (RJMP)
-----          L: 
-----          L: 
               C: if (r16 -= "0") then goto $0847 ...
$083F: $3300:     r16 = $30
$0840: $F431:     if (Z=0) then goto $847
$0841: $9110:  F: [$0529] -> r17 (PrintU_Dec0_Flag -> r17)
$0842: $0529:  
               C: if (r17 -= "0") then goto $0849 ...
$0843: $3310:     r17 = $30
$0844: $F421:     if (Z=0) then goto $849
$0845: $9508:  F: RET (ret)
-----          L: 
-----          L: 
$0846: $C002:  J: goto $849 (RJMP)
-----          L: 
$0847: $9300:  F: r16 -> [$0529] (r16 -> PrintU_Dec0_Flag)
$0848: $0529:  
-----          L: 
$0849: $D937:  F: rcall $181 (_UART_PUSH_r16)
$084A: $9508:  F: RET (ret)
-----          L: 
-----          V: _PrintU_HEX_Char
$084B: $700F:  F: r16 & $0F (r16 & #b00001111)
               C: if (r16 < 10) then goto $084F ...
$084C: $300A:     r16 = $0A
$084D: $F408:     if ( >= ) then goto $84F
$084E: $5D00:  F: r16 - $D0 (r16 + "0")
               C: if (r16 < 16) then goto $0852 ...
$084F: $3100:     r16 = $10
$0850: $F408:     if ( >= ) then goto $852
$0851: $5C09:  F: r16 - $C9 (r16 + "A"-10)
$0852: $D92E:  F: rcall $181 (_UART_PUSH_r16)
$0853: $9508:  F: RET (ret)
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          V: _ms_eeRestoreSafeState
               F: Y ->  ...
$0854: $93CF:     r28 ->
$0855: $93DF:     r29 ->
               F: X ->  ...
$0856: $93AF:     r26 ->
$0857: $93BF:     r27 ->
               C: if (ms_currentProg=0) then goto $085F ...
$0858: $9100:     [$052E] -> r16
$0859: $052E:  
$085A: $3000:     r16 = $00
$085B: $F019:     if (Z=1) then goto $85F
               F: @ee_ms_Prog1->X  ...
$085C: $E0A5:     $05 -> r26
$085D: $E0B0:     $00 -> r27
$085E: $C002:  J: goto $861 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
               F: @ee_ms_Prog1->X  ...
$085F: $E0A5:     $05 -> r26
$0860: $E0B0:     $00 -> r27
-----          L: 
               C: if (ms_currentProg=1) then goto $0867 ...
$0861: $9100:     [$052E] -> r16
$0862: $052E:  
$0863: $3001:     r16 = $01
$0864: $F011:     if (Z=1) then goto $867
$0865: $0000:  F: NOP (NOP)
$0866: $C002:  J: goto $869 (RJMP)
-----          L: 
               F: @ee_ms_Prog2->X  ...
$0867: $E2A5:     $25 -> r26
$0868: $E0B1:     $01 -> r27
-----          L: 
               C: if (ms_currentProg=2) then goto $086F ...
$0869: $9100:     [$052E] -> r16
$086A: $052E:  
$086B: $3002:     r16 = $02
$086C: $F011:     if (Z=1) then goto $86F
$086D: $0000:  F: NOP (NOP)
$086E: $C002:  J: goto $871 (RJMP)
-----          L: 
               F: @ee_ms_Prog3->X  ...
$086F: $E4A5:     $45 -> r26
$0870: $E0B2:     $02 -> r27
-----          L: 
               F: @ms_objTable -> Y  ...
$0871: $E5C0:     $50 -> r28
$0872: $E0D5:     $05 -> r29
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
               C: if (EE[X] -= 255) then goto $087D ...
$0873: $BDA1:     r26 -> p$21
$0874: $BDB2:     r27 -> p$22
$0875: $9AF8:     1 -> p$1F.0
$0876: $B500:     p$20 -> r16
$0877: $3F0F:     r16 = $FF
$0878: $F421:     if (Z=0) then goto $87D
$0879: $D3E2:  F: rcall $C5C (_ms_do_objBlank)
               F: MS_TYPE_LIST_END -> [Y + MS_OBJ_TYPE + MS_OBJ_SIZE]  ...
$087A: $EF0F:     $FF -> r16
$087B: $8B08:     r16 -> [Y+$10]
$087C: $D2F6:  F: rcall $B73 (_ms_eeSave)
-----          L: 
-----          L: 
               F: EE[X] -> [Y]  ...
$087D: $BDA1:     r26 -> p$21
$087E: $BDB2:     r27 -> p$22
$087F: $9AF8:     1 -> p$1F.0
$0880: $B500:     p$20 -> r16
$0881: $8308:     r16 -> [Y+$00]
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0892 ...
$0882: $8108:     [Y+$00] -> r 16
$0883: $3F0F:     r16 = $FF
$0884: $F069:     if (Z=1) then goto $892
$0885: $E009:  F: $09 -> r16 (9 -> r16)
-----          L: 
$0886: $930F:  F: r16 -> (r16 ->)
               F: EE[X++] -> [Y++]  ...
$0887: $BDA1:     r26 -> p$21
$0888: $BDB2:     r27 -> p$22
$0889: $9611:     r26,r27 + $01
$088A: $9AF8:     1 -> p$1F.0
$088B: $B500:     p$20 -> r16
$088C: $9309:     r16 -> [Y++]
$088D: $910F:  F: -> r16 (-> r16)
               C: if (r16--) then goto $0886 ...
$088E: $950A:     r16 --
$088F: $F7B1:     if (Z=0) then goto $886
$0890: $9627:  F: r28,r29 + $07 (Y + (MS_OBJ_SIZE - 9))
$0891: $CFEB:  J: goto $87D (RJMP)
-----          L: 
               F: -> X  ...
$0892: $91BF:     -> r27
$0893: $91AF:     -> r26
               F: -> Y  ...
$0894: $91DF:     -> r29
$0895: $91CF:     -> r28
$0896: $9508:  F: RET (RET)
-----          V: _ms_eeRestore
               F: Y ->  ...
$0897: $93CF:     r28 ->
$0898: $93DF:     r29 ->
               F: X ->  ...
$0899: $93AF:     r26 ->
$089A: $93BF:     r27 ->
               C: if (ms_currentProg=0) then goto $08A2 ...
$089B: $9100:     [$052E] -> r16
$089C: $052E:  
$089D: $3000:     r16 = $00
$089E: $F019:     if (Z=1) then goto $8A2
               F: @ee_ms_Prog1->X  ...
$089F: $E0A5:     $05 -> r26
$08A0: $E0B0:     $00 -> r27
$08A1: $C002:  J: goto $8A4 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
               F: @ee_ms_Prog1->X  ...
$08A2: $E0A5:     $05 -> r26
$08A3: $E0B0:     $00 -> r27
-----          L: 
               C: if (ms_currentProg=1) then goto $08AA ...
$08A4: $9100:     [$052E] -> r16
$08A5: $052E:  
$08A6: $3001:     r16 = $01
$08A7: $F011:     if (Z=1) then goto $8AA
$08A8: $0000:  F: NOP (NOP)
$08A9: $C002:  J: goto $8AC (RJMP)
-----          L: 
               F: @ee_ms_Prog2->X  ...
$08AA: $E2A5:     $25 -> r26
$08AB: $E0B1:     $01 -> r27
-----          L: 
               C: if (ms_currentProg=2) then goto $08B2 ...
$08AC: $9100:     [$052E] -> r16
$08AD: $052E:  
$08AE: $3002:     r16 = $02
$08AF: $F011:     if (Z=1) then goto $8B2
$08B0: $0000:  F: NOP (NOP)
$08B1: $C002:  J: goto $8B4 (RJMP)
-----          L: 
               F: @ee_ms_Prog3->X  ...
$08B2: $E4A5:     $45 -> r26
$08B3: $E0B2:     $02 -> r27
-----          L: 
               F: @ms_objTable -> Y  ...
$08B4: $E5C0:     $50 -> r28
$08B5: $E0D5:     $05 -> r29
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
               C: if (EE[X] -= 255) then goto $08C0 ...
$08B6: $BDA1:     r26 -> p$21
$08B7: $BDB2:     r27 -> p$22
$08B8: $9AF8:     1 -> p$1F.0
$08B9: $B500:     p$20 -> r16
$08BA: $3F0F:     r16 = $FF
$08BB: $F421:     if (Z=0) then goto $8C0
$08BC: $D39F:  F: rcall $C5C (_ms_do_objBlank)
               F: MS_TYPE_LIST_END -> [Y + MS_OBJ_TYPE + MS_OBJ_SIZE]  ...
$08BD: $EF0F:     $FF -> r16
$08BE: $8B08:     r16 -> [Y+$10]
$08BF: $D2B3:  F: rcall $B73 (_ms_eeSave)
-----          L: 
-----          L: 
               F: EE[X] -> [Y]  ...
$08C0: $BDA1:     r26 -> p$21
$08C1: $BDB2:     r27 -> p$22
$08C2: $9AF8:     1 -> p$1F.0
$08C3: $B500:     p$20 -> r16
$08C4: $8308:     r16 -> [Y+$00]
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $08D8 ...
$08C5: $8108:     [Y+$00] -> r 16
$08C6: $3F0F:     r16 = $FF
$08C7: $F081:     if (Z=1) then goto $8D8
$08C8: $E009:  F: $09 -> r16 (9 -> r16)
-----          L: 
$08C9: $930F:  F: r16 -> (r16 ->)
               F: EE[X++] -> [Y++]  ...
$08CA: $BDA1:     r26 -> p$21
$08CB: $BDB2:     r27 -> p$22
$08CC: $9611:     r26,r27 + $01
$08CD: $9AF8:     1 -> p$1F.0
$08CE: $B500:     p$20 -> r16
$08CF: $9309:     r16 -> [Y++]
$08D0: $910F:  F: -> r16 (-> r16)
               C: if (r16--) then goto $08C9 ...
$08D1: $950A:     r16 --
$08D2: $F7B1:     if (Z=0) then goto $8C9
               F: 0 -> [Y++]  ...
$08D3: $E000:     $00 -> r16
$08D4: $9309:     r16 -> [Y++]
               F: 0 -> [Y++]  ...
$08D5: $9309:     r16 -> [Y++]
$08D6: $9625:  F: r28,r29 + $05 (Y + (MS_OBJ_SIZE - 11))
$08D7: $CFE8:  J: goto $8C0 (RJMP)
-----          L: 
               F: -> X  ...
$08D8: $91BF:     -> r27
$08D9: $91AF:     -> r26
               F: -> Y  ...
$08DA: $91DF:     -> r29
$08DB: $91CF:     -> r28
$08DC: $9508:  F: RET (RET)
-----          V: _ms_printMessage
$08DD: $E000:  F: $00 -> r16 (0 -> r16)
$08DE: $E010:  F: $00 -> r17 (0 -> r17)
$08DF: $DA82:  F: rcall $362 (_ssd_Pos_)
               F: Z ->  ...
$08E0: $93EF:     r30 ->
$08E1: $93FF:     r31 ->
               F: @ms_message -> Z  ...
$08E2: $E3E3:     $33 -> r30
$08E3: $E0F5:     $05 -> r31
$08E4: $DE88:  F: rcall $76D (_print_string_v_)
               F: -> Z  ...
$08E5: $91FF:     -> r31
$08E6: $91EF:     -> r30
$08E7: $DA6D:  F: rcall $355 (_ssd_clrRestLine)
$08E8: $9508:  F: RET (RET)
-----          V: _ms_message_
               F: Z -> ms_Ztemp  ...
$08E9: $93E0:     r30 -> [$054E]
$08EA: $054E:  
$08EB: $93F0:     r31 -> [$054F]
$08EC: $054F:  
               F: -> Z  ...
$08ED: $91FF:     -> r31
$08EE: $91EF:     -> r30
               F: X ->  ...
$08EF: $93AF:     r26 ->
$08F0: $93BF:     r27 ->
               F: @ms_message -> X  ...
$08F1: $E3A3:     $33 -> r26
$08F2: $E0B5:     $05 -> r27
               F: << Z  ...
$08F3: $0FEE:     << r30
$08F4: $1FFF:     << r31 <
-----          L: 
$08F5: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $08FA ...
$08F6: $3000:     r16 = $00
$08F7: $F011:     if (Z=1) then goto $8FA
$08F8: $930D:  F: r16 -> [X++] (r16 -> [X++])
$08F9: $CFFB:  J: goto $8F5 (RJMP)
-----          L: 
               F: 0 -> [X]  ...
$08FA: $E000:     $00 -> r16
$08FB: $930C:     r16 -> [X]
$08FC: $9631:  F: r30,r31 + $01 (Z + 1)
               F: Z >>  ...
$08FD: $95F6:     r31 >>
$08FE: $95E7:     > r30 >>
               F: -> X  ...
$08FF: $91BF:     -> r27
$0900: $91AF:     -> r26
               F: Z ->  ...
$0901: $93EF:     r30 ->
$0902: $93FF:     r31 ->
               F: ms_Ztemp -> Z  ...
$0903: $91E0:     [$054E] -> r30
$0904: $054E:  
$0905: $91F0:     [$054F] -> r31
$0906: $054F:  
-----          L: 
               F: 2000/STIMER_PERIOD_CALL -> [@STimer_Counter + DO_MESSCLEAR]  ...
$0907: $EC08:     $C8 -> r16
$0908: $9300:     r16 -> [$0516]
$0909: $0516:  
               F: 2000/STIMER_PERIOD_CALL -> [@STimer_Counter_Stop + DO_MESSCLEAR]  ...
$090A: $9300:     r16 -> [$051A]
$090B: $051A:  
-----          L: 
$090C: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$090D: $9508:  F: RET (RET)
-----          V: _ms_do_order
               F: Y ->  ...
$090E: $93CF:     r28 ->
$090F: $93DF:     r29 ->
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$0910: $E4C0:     $40 -> r28
$0911: $E0D5:     $05 -> r29
-----          L: 
$0912: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0941 ...
$0913: $8108:     [Y+$00] -> r 16
$0914: $3F0F:     r16 = $FF
$0915: $F159:     if (Z=1) then goto $941
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $0912 ...
$0916: $8108:     [Y+$00] -> r 16
$0917: $3001:     r16 = $01
$0918: $F7C9:     if (Z=0) then goto $912
               C: if ([Y+MS_OBJ_ORDER] = [Y+MS_OBJ_STATUS]) then goto $0912 ...
$0919: $8509:     [Y+$09] -> r 16
$091A: $851A:     [Y+$0A] -> r 17
$091B: $1701:     r16 = r17
$091C: $F3A9:     if (Z=1) then goto $912
-----          L: 
-----          L: 
$091D: $7F3D:  F: r19 & $FD (0 -> f_arbitrationLost)
$091E: $D92E:  F: rcall $24D (_iic_start)
$091F: $D04E:  F: rcall $96E (_ms_addressCreate)
$0920: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$0921: $C003:  C: goto $925 (RJMP) (f_arbitrationLost = 1)
$0922: $9300:  F: r16 -> [$00BB] (r16 -> TWDR)
$0923: $00BB:  
$0924: $D938:  F: rcall $25D (_iic_send_)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\iic.alg    ***********
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
               F: 128 -> [Y+MS_OBJ_STATUS]  ...
$0925: $E800:     $80 -> r16
$0926: $870A:     r16 -> [Y+$0A]
               C: if (iic_status -= MT_SLA_ACK) then goto $092B ...
$0927: $3148:     r20 = $18
$0928: $F411:     if (Z=0) then goto $92B
               F: [Y+MS_OBJ_ORDER] -> [Y+MS_OBJ_STATUS]  ...
$0929: $8509:     [Y+$09] -> r 16
$092A: $870A:     r16 -> [Y+$0A]
-----          L: 
-----          L: 
-----          L: 
$092B: $8108:  F: [Y+$00] -> r 16 ([Y+MS_OBJ_TYPE] -> r16)
$092C: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$092D: $C003:  C: goto $931 (RJMP) (f_arbitrationLost = 1)
$092E: $9300:  F: r16 -> [$00BB] (r16 -> TWDR)
$092F: $00BB:  
$0930: $D92C:  F: rcall $25D (_iic_send_)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\iic.alg    ***********
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
$0931: $8109:  F: [Y+$01] -> r 16 ([Y+MS_OBJ_ADDR] -> r16)
$0932: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$0933: $C003:  C: goto $937 (RJMP) (f_arbitrationLost = 1)
$0934: $9300:  F: r16 -> [$00BB] (r16 -> TWDR)
$0935: $00BB:  
$0936: $D926:  F: rcall $25D (_iic_send_)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\iic.alg    ***********
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
$0937: $8509:  F: [Y+$09] -> r 16 ([Y+MS_OBJ_ORDER] -> r16)
$0938: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$0939: $C003:  C: goto $93D (RJMP) (f_arbitrationLost = 1)
$093A: $9300:  F: r16 -> [$00BB] (r16 -> TWDR)
$093B: $00BB:  
$093C: $D920:  F: rcall $25D (_iic_send_)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\iic.alg    ***********
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
$093D: $D931:  F: rcall $26F (_iic_stop)
$093E: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$093F: $CFDD:  C: goto $91D (RJMP) (f_arbitrationLost = 1)
$0940: $CFD1:  J: goto $912 (RJMP)
-----          L: 
-----          L: 
               F: -> Y  ...
$0941: $91DF:     -> r29
$0942: $91CF:     -> r28
$0943: $9508:  F: RET (RET)
-----          V: _ms_resetAllRelay
               F: 7 -> ms_objCurrentScan  ...
$0944: $E007:     $07 -> r16
$0945: $9300:     r16 -> [$0751]
$0946: $0751:  
-----          L: 
$0947: $7F3D:  F: r19 & $FD (0 -> f_arbitrationLost)
$0948: $D904:  F: rcall $24D (_iic_start)
-----          L: 
$0949: $9100:  F: [$0751] -> r16 (ms_objCurrentScan -> r16)
$094A: $0751:  
$094B: $0F00:  F: << r16 (<< r16)
$094C: $6200:  F: r16 ! $20 (r16 ! MS_OUTDEV_ADDRESS)
$094D: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$094E: $C003:  C: goto $952 (RJMP) (f_arbitrationLost = 1)
$094F: $9300:  F: r16 -> [$00BB] (r16 -> TWDR)
$0950: $00BB:  
$0951: $D90B:  F: rcall $25D (_iic_send_)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\iic.alg    ***********
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
$0952: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$0953: $C004:  C: goto $958 (RJMP) (f_arbitrationLost = 1)
               F: MS_TYPE_RELAY -> TWDR  ...
$0954: $E001:     $01 -> r16
$0955: $9300:     r16 -> [$00BB]
$0956: $00BB:  
$0957: $D905:  F: rcall $25D (_iic_send_)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\iic.alg    ***********
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
$0958: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$0959: $C004:  C: goto $95E (RJMP) (f_arbitrationLost = 1)
               F: 128 -> TWDR  ...
$095A: $E800:     $80 -> r16
$095B: $9300:     r16 -> [$00BB]
$095C: $00BB:  
$095D: $D8FF:  F: rcall $25D (_iic_send_)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\iic.alg    ***********
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
$095E: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$095F: $C004:  C: goto $964 (RJMP) (f_arbitrationLost = 1)
               F: 2 -> TWDR  ...
$0960: $E002:     $02 -> r16
$0961: $9300:     r16 -> [$00BB]
$0962: $00BB:  
$0963: $D8F9:  F: rcall $25D (_iic_send_)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\iic.alg    ***********
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
$0964: $D90A:  F: rcall $26F (_iic_stop)
$0965: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$0966: $CFE0:  C: goto $947 (RJMP) (f_arbitrationLost = 1)
-----          L: 
               C: if (ms_objCurrentScan --) then goto $0947 ...
$0967: $9100:     [$0751] -> r16
$0968: $0751:  
$0969: $5001:     r16 - $01
$096A: $9300:     r16 -> [$0751]
$096B: $0751:  
$096C: $F6D1:     if (Z=0) then goto $947
-----          L: 
$096D: $9508:  F: RET (RET)
-----          V: _ms_addressCreate
$096E: $E010:  F: $00 -> r17 (MS_TYPE_NUL -> r17)
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_RELAY) then goto $0973 ...
$096F: $8108:     [Y+$00] -> r 16
$0970: $3001:     r16 = $01
$0971: $F409:     if (Z=0) then goto $973
$0972: $E210:  F: $20 -> r17 (MS_OUTDEV_ADDRESS -> r17)
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_GENINPUT) then goto $0977 ...
$0973: $8108:     [Y+$00] -> r 16
$0974: $3100:     r16 = $10
$0975: $F409:     if (Z=0) then goto $977
$0976: $E410:  F: $40 -> r17 (MS_INDEV_ADDRESS -> r17)
-----          L: 
$0977: $8109:  F: [Y+$01] -> r 16 ([Y+MS_OBJ_ADDR] -> r16)
$0978: $9502:  F: >> r16 << (>> r16 <<)
$0979: $7007:  F: r16 & $07 (r16 & #b00000111)
$097A: $0F00:  F: << r16 (<< r16)
$097B: $2B01:  F: r16 ! r17 (r16 ! r17)
$097C: $9508:  F: RET (RET)
-----          V: _ms_parsePac
               C: if (iic_type -= MS_TYPE_RELAY) then goto $0982 ...
$097D: $9100:     [$051E] -> r16
$097E: $051E:  
$097F: $3001:     r16 = $01
$0980: $F009:     if (Z=1) then goto $982
$0981: $9508:  F: RET (RET)
-----          L: 
$0982: $9110:  F: [$051F] -> r17 (iic_key -> r17)
$0983: $051F:  
-----          L: 
               F: Y ->  ...
$0984: $93CF:     r28 ->
$0985: $93DF:     r29 ->
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$0986: $E4C0:     $40 -> r28
$0987: $E0D5:     $05 -> r29
-----          L: 
$0988: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $099B ...
$0989: $8108:     [Y+$00] -> r 16
$098A: $3F0F:     r16 = $FF
$098B: $F079:     if (Z=1) then goto $99B
               C: if ([Y+MS_OBJ_ADDR] -= r17) then goto $0988 ...
$098C: $8109:     [Y+$01] -> r 16
$098D: $1701:     r16 = r17
$098E: $F7C9:     if (Z=0) then goto $988
               C: if (iic_data -= 0) then goto $0997 ...
$098F: $9100:     [$0520] -> r16
$0990: $0520:  
$0991: $3000:     r16 = $00
$0992: $F421:     if (Z=0) then goto $997
               F: LOW -> [Y+MS_OBJ_ORDER]  ...
$0993: $E000:     $00 -> r16
$0994: $8709:     r16 -> [Y+$09]
               F: LOW -> [Y+MS_OBJ_STATUS]  ...
$0995: $870A:     r16 -> [Y+$0A]
-----          L: 
$0996: $CFF1:  J: goto $988 (RJMP)
-----          L: 
               F: HIGH -> [Y+MS_OBJ_ORDER]  ...
$0997: $EF0F:     $FF -> r16
$0998: $8709:     r16 -> [Y+$09]
               F: HIGH -> [Y+MS_OBJ_STATUS]  ...
$0999: $870A:     r16 -> [Y+$0A]
-----          L: 
$099A: $CFED:  J: goto $988 (RJMP)
-----          L: 
               F: -> Y  ...
$099B: $91DF:     -> r29
$099C: $91CF:     -> r28
$099D: $9508:  F: RET (RET)
-----          V: _ms_hold
               C: if (ms_mode -= MS_MODE_STOP_BUILD) then goto $09A3 ...
$099E: $9100:     [$0530] -> r16
$099F: $0530:  
$09A0: $3001:     r16 = $01
$09A1: $F409:     if (Z=0) then goto $9A3
$09A2: $D1D0:  F: rcall $B73 (_ms_eeSave)
-----          L: 
               C: if (ms_mode = MS_MODE_MENU) then goto $09AC ...
$09A3: $9100:     [$0530] -> r16
$09A4: $0530:  
$09A5: $3006:     r16 = $06
$09A6: $F029:     if (Z=1) then goto $9AC
               F: MS_MODE_MENU -> ms_mode  ...
$09A7: $E006:     $06 -> r16
$09A8: $9300:     r16 -> [$0530]
$09A9: $0530:  
$09AA: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$09AB: $6038:  F: r19 ! $08 (1 -> f_resetAllRelay)
-----          L: 
$09AC: $9508:  F: RET (RET)
-----          V: _ms_click
$09AD: $9100:  F: [$0530] -> r16 (ms_mode -> r16)
$09AE: $0530:  
               C: if (r16 = MS_MODE_MENU) then goto $159D ...
$09AF: $3006:     r16 = $06
$09B0: $F411:     if (Z=0) then goto $9B3
$09B1: $940C:     goto $159D
$09B2: $159D:  
               C: if (r16 = MS_MODE_WORK_CYCLE) then goto $1413 ...
$09B3: $3003:     r16 = $03
$09B4: $F411:     if (Z=0) then goto $9B7
$09B5: $940C:     goto $1413
$09B6: $1413:  
               C: if (r16 = MS_MODE_WORK_ONCE) then goto $1413 ...
$09B7: $3004:     r16 = $04
$09B8: $F411:     if (Z=0) then goto $9BB
$09B9: $940C:     goto $1413
$09BA: $1413:  
               C: if (r16 = MS_MODE_STOP_MANUAL) then goto $1AEB ...
$09BB: $3002:     r16 = $02
$09BC: $F411:     if (Z=0) then goto $9BF
$09BD: $940C:     goto $1AEB
$09BE: $1AEB:  
               C: if (r16 = MS_MODE_STOP_BUILD) then goto $1755 ...
$09BF: $3001:     r16 = $01
$09C0: $F411:     if (Z=0) then goto $9C3
$09C1: $940C:     goto $1755
$09C2: $1755:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION) then goto $17D3 ...
$09C3: $300A:     r16 = $0A
$09C4: $F411:     if (Z=0) then goto $9C7
$09C5: $940C:     goto $17D3
$09C6: $17D3:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION_EDIT) then goto $1969 ...
$09C7: $3604:     r16 = $64
$09C8: $F411:     if (Z=0) then goto $9CB
$09C9: $940C:     goto $1969
$09CA: $1969:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION_MOVE) then goto $19AC ...
$09CB: $3606:     r16 = $66
$09CC: $F411:     if (Z=0) then goto $9CF
$09CD: $940C:     goto $19AC
$09CE: $19AC:  
               C: if (r16 = MS_MODE_TITLE) then goto $0A3F ...
$09CF: $3000:     r16 = $00
$09D0: $F409:     if (Z=0) then goto $9D2
$09D1: $C06D:     goto $A3F (RJMP)
               C: if (r16 = MS_MODE_SOURCES_VIEWER) then goto $0DBA ...
$09D2: $3007:     r16 = $07
$09D3: $F409:     if (Z=0) then goto $9D5
$09D4: $C3E5:     goto $DBA (RJMP)
               C: if (r16 = MS_MODE_CONDITIONS_EDIT) then goto $11BD ...
$09D5: $3009:     r16 = $09
$09D6: $F409:     if (Z=0) then goto $9D8
$09D7: $C7E5:     goto $11BD (RJMP)
               C: if (r16 = MS_MODE_CONDITIONS_EDIT_IF) then goto $12EE ...
$09D8: $300B:     r16 = $0B
$09D9: $F411:     if (Z=0) then goto $9DC
$09DA: $940C:     goto $12EE
$09DB: $12EE:  
               C: if (r16 = MS_MODE_CONDITIONS_WORK) then goto $0E62 ...
$09DC: $3008:     r16 = $08
$09DD: $F409:     if (Z=0) then goto $9DF
$09DE: $C483:     goto $E62 (RJMP)
-----          L: 
-----          L: 
$09DF: $9508:  F: RET (RET)
-----          V: _ms_navi
$09E0: $9100:  F: [$0530] -> r16 (ms_mode -> r16)
$09E1: $0530:  
               C: if (r16 = MS_MODE_WORK_CYCLE) then goto $13ED ...
$09E2: $3003:     r16 = $03
$09E3: $F411:     if (Z=0) then goto $9E6
$09E4: $940C:     goto $13ED
$09E5: $13ED:  
               C: if (r16 = MS_MODE_WORK_ONCE) then goto $13ED ...
$09E6: $3004:     r16 = $04
$09E7: $F411:     if (Z=0) then goto $9EA
$09E8: $940C:     goto $13ED
$09E9: $13ED:  
               C: if (r16 = MS_MODE_MENU) then goto $1583 ...
$09EA: $3006:     r16 = $06
$09EB: $F411:     if (Z=0) then goto $9EE
$09EC: $940C:     goto $1583
$09ED: $1583:  
               C: if (r16 = MS_MODE_STOP_MANUAL) then goto $1AC4 ...
$09EE: $3002:     r16 = $02
$09EF: $F411:     if (Z=0) then goto $9F2
$09F0: $940C:     goto $1AC4
$09F1: $1AC4:  
               C: if (r16 = MS_MODE_STOP_BUILD) then goto $172E ...
$09F2: $3001:     r16 = $01
$09F3: $F411:     if (Z=0) then goto $9F6
$09F4: $940C:     goto $172E
$09F5: $172E:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION) then goto $17B9 ...
$09F6: $300A:     r16 = $0A
$09F7: $F411:     if (Z=0) then goto $9FA
$09F8: $940C:     goto $17B9
$09F9: $17B9:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION_EDIT) then goto $18BF ...
$09FA: $3604:     r16 = $64
$09FB: $F411:     if (Z=0) then goto $9FE
$09FC: $940C:     goto $18BF
$09FD: $18BF:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION_MOVE) then goto $199B ...
$09FE: $3606:     r16 = $66
$09FF: $F411:     if (Z=0) then goto $A02
$0A00: $940C:     goto $199B
$0A01: $199B:  
               C: if (r16 = MS_MODE_CONDITIONS_EDIT) then goto $10DB ...
$0A02: $3009:     r16 = $09
$0A03: $F409:     if (Z=0) then goto $A05
$0A04: $C6D6:     goto $10DB (RJMP)
               C: if (r16 = MS_MODE_CONDITIONS_EDIT_IF) then goto $1247 ...
$0A05: $300B:     r16 = $0B
$0A06: $F411:     if (Z=0) then goto $A09
$0A07: $940C:     goto $1247
$0A08: $1247:  
               C: if (r16 = MS_MODE_CONDITIONS_WORK) then goto $0E3A ...
$0A09: $3008:     r16 = $08
$0A0A: $F409:     if (Z=0) then goto $A0C
$0A0B: $C42E:     goto $E3A (RJMP)
-----          L: 
-----          L: 
$0A0C: $9508:  F: RET (RET)
-----          V: _ms_do_vis
$0A0D: $9100:  F: [$0530] -> r16 (ms_mode -> r16)
$0A0E: $0530:  
               C: if (r16 = MS_MODE_WORK_CYCLE) then goto $13C7 ...
$0A0F: $3003:     r16 = $03
$0A10: $F411:     if (Z=0) then goto $A13
$0A11: $940C:     goto $13C7
$0A12: $13C7:  
               C: if (r16 = MS_MODE_WORK_ONCE) then goto $13C7 ...
$0A13: $3004:     r16 = $04
$0A14: $F411:     if (Z=0) then goto $A17
$0A15: $940C:     goto $13C7
$0A16: $13C7:  
               C: if (r16 = MS_MODE_TITLE) then goto $0A47 ...
$0A17: $3000:     r16 = $00
$0A18: $F171:     if (Z=1) then goto $A47
               C: if (r16 = MS_MODE_MENU) then goto $1486 ...
$0A19: $3006:     r16 = $06
$0A1A: $F411:     if (Z=0) then goto $A1D
$0A1B: $940C:     goto $1486
$0A1C: $1486:  
               C: if (r16 = MS_MODE_STOP_MANUAL) then goto $19B1 ...
$0A1D: $3002:     r16 = $02
$0A1E: $F411:     if (Z=0) then goto $A21
$0A1F: $940C:     goto $19B1
$0A20: $19B1:  
               C: if (r16 = MS_MODE_STOP_BUILD) then goto $169F ...
$0A21: $3001:     r16 = $01
$0A22: $F411:     if (Z=0) then goto $A25
$0A23: $940C:     goto $169F
$0A24: $169F:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION) then goto $175D ...
$0A25: $300A:     r16 = $0A
$0A26: $F411:     if (Z=0) then goto $A29
$0A27: $940C:     goto $175D
$0A28: $175D:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION_EDIT) then goto $1839 ...
$0A29: $3604:     r16 = $64
$0A2A: $F411:     if (Z=0) then goto $A2D
$0A2B: $940C:     goto $1839
$0A2C: $1839:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION_MOVE) then goto $198A ...
$0A2D: $3606:     r16 = $66
$0A2E: $F411:     if (Z=0) then goto $A31
$0A2F: $940C:     goto $198A
$0A30: $198A:  
               C: if (r16 = MS_MODE_SOURCES_VIEWER) then goto $0D81 ...
$0A31: $3007:     r16 = $07
$0A32: $F409:     if (Z=0) then goto $A34
$0A33: $C34D:     goto $D81 (RJMP)
               C: if (r16 = MS_MODE_CONDITIONS_EDIT) then goto $10F5 ...
$0A34: $3009:     r16 = $09
$0A35: $F409:     if (Z=0) then goto $A37
$0A36: $C6BE:     goto $10F5 (RJMP)
               C: if (r16 = MS_MODE_CONDITIONS_EDIT_IF) then goto $12CF ...
$0A37: $300B:     r16 = $0B
$0A38: $F411:     if (Z=0) then goto $A3B
$0A39: $940C:     goto $12CF
$0A3A: $12CF:  
               C: if (r16 = MS_MODE_CONDITIONS_WORK) then goto $0E5A ...
$0A3B: $3008:     r16 = $08
$0A3C: $F409:     if (Z=0) then goto $A3E
$0A3D: $C41C:     goto $E5A (RJMP)
-----          L: 
-----          L: 
$0A3E: $9508:  F: RET (RET)
-----          V: _ms_clicTitle
               F: 0 -> ms_posMenu  ...
$0A3F: $E000:     $00 -> r16
$0A40: $9300:     r16 -> [$0752]
$0A41: $0752:  
               F: MS_MODE_MENU -> ms_mode  ...
$0A42: $E006:     $06 -> r16
$0A43: $9300:     r16 -> [$0530]
$0A44: $0530:  
$0A45: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$0A46: $9508:  F: RET (RET)
-----          V: _ms_visTitle
-----          L: 
$0A47: $DE95:  F: rcall $8DD (_ms_printMessage)
-----          L: 
$0A48: $DD0D:  F: rcall $756 (_print_string_)
$0A49: $20 $20 $20 $20 $20 $20 $73 $6F $69 $2D $74 $65 $63 $68 $01 $00
$0A51: $D903:  F: rcall $355 (_ssd_clrRestLine)
$0A52: $DD03:  F: rcall $756 (_print_string_)
$0A53: $08 $20 $20 $20 $20 $20 $4D $55 $4C $54 $49 $53 $57 $49 $54 $43
$0A5B: $48 $20 $20 $20 $20 $20 $01 $00
$0A5F: $E000:  F: $00 -> r16 (0 -> r16)
$0A60: $E014:  F: $04 -> r17 (4 -> r17)
$0A61: $D900:  F: rcall $362 (_ssd_Pos_)
$0A62: $D8F2:  F: rcall $355 (_ssd_clrRestLine)
$0A63: $D8F1:  F: rcall $355 (_ssd_clrRestLine)
$0A64: $DCF1:  F: rcall $756 (_print_string_)
$0A65: $2A $20 $68 $6F $6C $64 $20 $65 $6E $63 $6F $64 $65 $72 $01 $00
$0A6D: $D8E7:  F: rcall $355 (_ssd_clrRestLine)
$0A6E: $DCE7:  F: rcall $756 (_print_string_)
$0A6F: $20 $20 $66 $6F $72 $20 $74 $68 $65 $20 $6D $69 $6E $65 $20 $6D
$0A77: $65 $6E $75 $01 $00 $00
$0A7A: $D8DA:  F: rcall $355 (_ssd_clrRestLine)
$0A7B: $9508:  F: RET (RET)
-----          V: _ms_printAddress
               C: if ([Y+MS_OBJ_ORDER]=MS_ORDER_ON) then goto $0A81 ...
$0A7C: $8509:     [Y+$09] -> r 16
$0A7D: $3F0F:     r16 = $FF
$0A7E: $F011:     if (Z=1) then goto $A81
$0A7F: $0000:  F: NOP (NOP)
$0A80: $C002:  J: goto $A83 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$0A81: $DCD4:  F: rcall $756 (_print_string_)
$0A82: $03 $00
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
               C: if ([Y+MS_OBJ_ORDER]=[Y+MS_OBJ_STATUS]) then goto $0A8A ...
$0A83: $8509:     [Y+$09] -> r 16
$0A84: $851A:     [Y+$0A] -> r 17
$0A85: $1701:     r16 = r17
$0A86: $F019:     if (Z=1) then goto $A8A
$0A87: $DCCE:  F: rcall $756 (_print_string_)
$0A88: $2D $00
$0A89: $C002:  J: goto $A8C (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$0A8A: $DCCB:  F: rcall $756 (_print_string_)
$0A8B: $5B $00
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
$0A8C: $8109:  F: [Y+$01] -> r 16 ([Y+MS_OBJ_ADDR] -> r16)
               C: if (r16 -= 0) then goto $0A9E ...
$0A8D: $3000:     r16 = $00
$0A8E: $F479:     if (Z=0) then goto $A9E
$0A8F: $DCC6:  F: rcall $756 (_print_string_)
$0A90: $2E $2E $2E $00
               C: if ([Y+MS_OBJ_ORDER]=[Y+MS_OBJ_STATUS]) then goto $0A9A ...
$0A92: $8509:     [Y+$09] -> r 16
$0A93: $851A:     [Y+$0A] -> r 17
$0A94: $1701:     r16 = r17
$0A95: $F021:     if (Z=1) then goto $A9A
$0A96: $DCBF:  F: rcall $756 (_print_string_)
$0A97: $2D $01 $20 $00
$0A99: $C003:  J: goto $A9D (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$0A9A: $DCBB:  F: rcall $756 (_print_string_)
$0A9B: $5D $01 $20 $00
-----          L: 
$0A9D: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
$0A9E: $7700:  F: r16 & $70 (r16 & #b01110000)
$0A9F: $9502:  F: >> r16 << (>>r16<<)
$0AA0: $5D00:  F: r16 - $D0 (r16 + "0")
$0AA1: $D8E8:  F: rcall $38A (_ssd_Parse_r16)
$0AA2: $DCB3:  F: rcall $756 (_print_string_)
$0AA3: $2E $00
$0AA4: $8109:  F: [Y+$01] -> r 16 ([Y+MS_OBJ_ADDR] -> r16)
$0AA5: $7007:  F: r16 & $07 (r16 & #b00000111)
$0AA6: $5C0F:  F: r16 - $CF (r16 + "1")
$0AA7: $D8E2:  F: rcall $38A (_ssd_Parse_r16)
               C: if ([Y+MS_OBJ_ORDER]=[Y+MS_OBJ_STATUS]) then goto $0AB0 ...
$0AA8: $8509:     [Y+$09] -> r 16
$0AA9: $851A:     [Y+$0A] -> r 17
$0AAA: $1701:     r16 = r17
$0AAB: $F021:     if (Z=1) then goto $AB0
$0AAC: $DCA9:  F: rcall $756 (_print_string_)
$0AAD: $2D $01 $20 $00
$0AAF: $C003:  J: goto $AB3 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$0AB0: $DCA5:  F: rcall $756 (_print_string_)
$0AB1: $5D $01 $20 $00
-----          L: 
$0AB3: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          V: _ms_printKey
               C: if ([Y+MS_OBJ_KEY]=MS_KEY_FREE) then goto $0AB9 ...
$0AB4: $810A:     [Y+$02] -> r 16
$0AB5: $3000:     r16 = $00
$0AB6: $F011:     if (Z=1) then goto $AB9
$0AB7: $E50E:  F: $5E -> r16 ("^"->r16)
$0AB8: $C001:  J: goto $ABA (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$0AB9: $E50F:  F: $5F -> r16 ("_"->r16)
-----          L: 
$0ABA: $D8CF:  F: rcall $38A (_ssd_Parse_r16)
$0ABB: $DC9A:  F: rcall $756 (_print_string_)
$0ABC: $01 $20 $00 $00
$0ABE: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          V: _ms_printIdle_s
$0ABF: $E000:  F: $00 -> r16 (0 -> r16)
$0AC0: $810B:  F: [Y+$03] -> r 16 ([Y+MS_OBJ_TIME_IDLE_S] -> r16)
               F: r16 ! [Y+MS_OBJ_TIME_IDLE_M + 0]  ...
$0AC1: $811C:     [Y+$04] -> r 17
$0AC2: $2B01:     r16 ! r17
               F: r16 ! [Y+MS_OBJ_TIME_IDLE_M + 1]  ...
$0AC3: $811D:     [Y+$05] -> r 17
$0AC4: $2B01:     r16 ! r17
               C: if (r16 = 0) then goto $0ACF ...
$0AC5: $3000:     r16 = $00
$0AC6: $F041:     if (Z=1) then goto $ACF
               F: Z ->  ...
$0AC7: $93EF:     r30 ->
$0AC8: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_IDLE_S] -> Z  ...
$0AC9: $81EB:     [Y+$03] -> r 30
$0ACA: $E0F0:     $00 -> r31
$0ACB: $DCBD:  F: rcall $789 (_print_DEC2_)
               F: -> Z  ...
$0ACC: $91FF:     -> r31
$0ACD: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          L: 
$0ACE: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
$0ACF: $DC86:  F: rcall $756 (_print_string_)
$0AD0: $2D $20 $00 $00
$0AD2: $9508:  F: RET (RET)
-----          V: _ms_printInvIdle
$0AD3: $DC82:  F: rcall $756 (_print_string_)
$0AD4: $03 $00
               F: Z ->  ...
$0AD5: $93EF:     r30 ->
$0AD6: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_IDLE_M]:Word -> Z  ...
$0AD7: $81EC:     [Y+$04] -> r 30
$0AD8: $81FD:     [Y+$05] -> r 31
$0AD9: $DCAF:  F: rcall $789 (_print_DEC2_)
               F: -> Z  ...
$0ADA: $91FF:     -> r31
$0ADB: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          L: 
$0ADC: $DC79:  F: rcall $756 (_print_string_)
$0ADD: $3A $00
               F: Z ->  ...
$0ADE: $93EF:     r30 ->
$0ADF: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_IDLE_S] -> Z  ...
$0AE0: $81EB:     [Y+$03] -> r 30
$0AE1: $E0F0:     $00 -> r31
$0AE2: $DCA6:  F: rcall $789 (_print_DEC2_)
               F: -> Z  ...
$0AE3: $91FF:     -> r31
$0AE4: $91EF:     -> r30
-----          L: 
$0AE5: $DC70:  F: rcall $756 (_print_string_)
$0AE6: $01 $20 $00 $00
$0AE8: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          V: _ms_printIdle_m
$0AE9: $E000:  F: $00 -> r16 (0 -> r16)
$0AEA: $810B:  F: [Y+$03] -> r 16 ([Y+MS_OBJ_TIME_IDLE_S] -> r16)
               F: r16 ! [Y+MS_OBJ_TIME_IDLE_M + 0]  ...
$0AEB: $811C:     [Y+$04] -> r 17
$0AEC: $2B01:     r16 ! r17
               F: r16 ! [Y+MS_OBJ_TIME_IDLE_M + 1]  ...
$0AED: $811D:     [Y+$05] -> r 17
$0AEE: $2B01:     r16 ! r17
               C: if (r16 = 0) then goto $0AF9 ...
$0AEF: $3000:     r16 = $00
$0AF0: $F041:     if (Z=1) then goto $AF9
               F: Z ->  ...
$0AF1: $93EF:     r30 ->
$0AF2: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_IDLE_M]:Word -> Z  ...
$0AF3: $81EC:     [Y+$04] -> r 30
$0AF4: $81FD:     [Y+$05] -> r 31
$0AF5: $DC93:  F: rcall $789 (_print_DEC2_)
               F: -> Z  ...
$0AF6: $91FF:     -> r31
$0AF7: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          L: 
$0AF8: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
$0AF9: $DC5C:  F: rcall $756 (_print_string_)
$0AFA: $20 $2D $00 $00
$0AFC: $9508:  F: RET (RET)
-----          V: _ms_printWork_s
$0AFD: $E000:  F: $00 -> r16 (0 -> r16)
$0AFE: $810E:  F: [Y+$06] -> r 16 ([Y+MS_OBJ_TIME_WORK_S] -> r16)
               F: r16 ! [Y+MS_OBJ_TIME_WORK_M + 0]  ...
$0AFF: $811F:     [Y+$07] -> r 17
$0B00: $2B01:     r16 ! r17
               F: r16 ! [Y+MS_OBJ_TIME_WORK_M + 1]  ...
$0B01: $8518:     [Y+$08] -> r 17
$0B02: $2B01:     r16 ! r17
               C: if (r16 = 0) then goto $0B0D ...
$0B03: $3000:     r16 = $00
$0B04: $F041:     if (Z=1) then goto $B0D
               F: Z ->  ...
$0B05: $93EF:     r30 ->
$0B06: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_WORK_S] -> Z  ...
$0B07: $81EE:     [Y+$06] -> r 30
$0B08: $E0F0:     $00 -> r31
$0B09: $DC7F:  F: rcall $789 (_print_DEC2_)
               F: -> Z  ...
$0B0A: $91FF:     -> r31
$0B0B: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          L: 
$0B0C: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
$0B0D: $DC48:  F: rcall $756 (_print_string_)
$0B0E: $2D $20 $00 $00
$0B10: $9508:  F: RET (RET)
-----          V: _ms_printWork_m
$0B11: $E000:  F: $00 -> r16 (0 -> r16)
$0B12: $810E:  F: [Y+$06] -> r 16 ([Y+MS_OBJ_TIME_WORK_S] -> r16)
               F: r16 ! [Y+MS_OBJ_TIME_WORK_M + 0]  ...
$0B13: $811F:     [Y+$07] -> r 17
$0B14: $2B01:     r16 ! r17
               F: r16 ! [Y+MS_OBJ_TIME_WORK_M + 1]  ...
$0B15: $8518:     [Y+$08] -> r 17
$0B16: $2B01:     r16 ! r17
               C: if (r16 = 0) then goto $0B21 ...
$0B17: $3000:     r16 = $00
$0B18: $F041:     if (Z=1) then goto $B21
               F: Z ->  ...
$0B19: $93EF:     r30 ->
$0B1A: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_WORK_M]:Word -> Z  ...
$0B1B: $81EF:     [Y+$07] -> r 30
$0B1C: $85F8:     [Y+$08] -> r 31
$0B1D: $DC6B:  F: rcall $789 (_print_DEC2_)
               F: -> Z  ...
$0B1E: $91FF:     -> r31
$0B1F: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          L: 
$0B20: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
$0B21: $DC34:  F: rcall $756 (_print_string_)
$0B22: $20 $2D $00 $00
$0B24: $9508:  F: RET (RET)
-----          V: _ms_printInvWork
$0B25: $DC30:  F: rcall $756 (_print_string_)
$0B26: $03 $00
               F: Z ->  ...
$0B27: $93EF:     r30 ->
$0B28: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_WORK_M]:Word -> Z  ...
$0B29: $81EF:     [Y+$07] -> r 30
$0B2A: $85F8:     [Y+$08] -> r 31
$0B2B: $DC5D:  F: rcall $789 (_print_DEC2_)
               F: -> Z  ...
$0B2C: $91FF:     -> r31
$0B2D: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          L: 
$0B2E: $DC27:  F: rcall $756 (_print_string_)
$0B2F: $3A $00
               F: Z ->  ...
$0B30: $93EF:     r30 ->
$0B31: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_WORK_S] -> Z  ...
$0B32: $81EE:     [Y+$06] -> r 30
$0B33: $E0F0:     $00 -> r31
$0B34: $DC54:  F: rcall $789 (_print_DEC2_)
               F: -> Z  ...
$0B35: $91FF:     -> r31
$0B36: $91EF:     -> r30
-----          L: 
$0B37: $DC1E:  F: rcall $756 (_print_string_)
$0B38: $01 $20 $00 $00
$0B3A: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          V: _ms_init
-----          L: 
               F: ee_ms_currentProg -> r16  ...
$0B3B: $E014:     $04 -> r17
$0B3C: $BD11:     r17 -> p$21
$0B3D: $E010:     $00 -> r17
$0B3E: $BD12:     r17 -> p$22
$0B3F: $9AF8:     1 -> p$1F.0
$0B40: $B500:     p$20 -> r16
$0B41: $9300:  F: r16 -> [$052E] (r16 -> ms_currentProg)
$0B42: $052E:  
               C: if (r16 < 3) then goto $0B53 ...
$0B43: $3003:     r16 = $03
$0B44: $F070:     if ( < ) then goto $B53
$0B45: $E000:  F: $00 -> r16 (0 -> r16)
$0B46: $9300:  F: r16 -> [$052E] (r16 -> ms_currentProg)
$0B47: $052E:  
               F: r16 -> ee_ms_currentProg  ...
$0B48: $E014:     $04 -> r17
$0B49: $BD11:     r17 -> p$21
$0B4A: $E010:     $00 -> r17
$0B4B: $BD12:     r17 -> p$22
$0B4C: $BD00:     r16 -> p$20
$0B4D: $9AFA:     1 -> p$1F.2
$0B4E: $9AF9:     1 -> p$1F.1
$0B4F: $99F9:     if (p$1F.1=0 then SKIP
$0B50: $CFFE:     goto $B4F (RJMP)
-----          L: 
$0B51: $940E:  F: CALL $1644 (_ms_clearConditions)
$0B52: $1644:  
-----          L: 
-----          L: 
$0B53: $DD43:  F: rcall $897 (_ms_eeRestore)
-----          L: 
               F: ee_ms_afterReset -> ms_afterReset  ...
$0B54: $E013:     $03 -> r17
$0B55: $BD11:     r17 -> p$21
$0B56: $E010:     $00 -> r17
$0B57: $BD12:     r17 -> p$22
$0B58: $9AF8:     1 -> p$1F.0
$0B59: $B500:     p$20 -> r16
$0B5A: $9300:     r16 -> [$052F]
$0B5B: $052F:  
               F: MS_MODE_TITLE -> ms_mode  ...
$0B5C: $E000:     $00 -> r16
$0B5D: $9300:     r16 -> [$0530]
$0B5E: $0530:  
               C: if (ms_afterReset = 0) then goto $0B66 ...
$0B5F: $9100:     [$052F] -> r16
$0B60: $052F:  
$0B61: $3000:     r16 = $00
$0B62: $F419:     if (Z=0) then goto $B66
               F: MS_MODE_WORK_CYCLE -> ms_mode  ...
$0B63: $E003:     $03 -> r16
$0B64: $9300:     r16 -> [$0530]
$0B65: $0530:  
               C: if (ms_afterReset = 1) then goto $0B6D ...
$0B66: $9100:     [$052F] -> r16
$0B67: $052F:  
$0B68: $3001:     r16 = $01
$0B69: $F419:     if (Z=0) then goto $B6D
               F: MS_MODE_CONDITIONS_WORK -> ms_mode  ...
$0B6A: $E008:     $08 -> r16
$0B6B: $9300:     r16 -> [$0530]
$0B6C: $0530:  
-----          L: 
-----          L: 
               F: ms_mode -> ms_mode  ...
$0B6D: $9100:     [$0530] -> r16
$0B6E: $0530:  
$0B6F: $9300:     r16 -> [$0530]
$0B70: $0530:  
$0B71: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$0B72: $9508:  F: RET (RET)
-----          V: _ms_eeSave
               F: Y ->  ...
$0B73: $93CF:     r28 ->
$0B74: $93DF:     r29 ->
               F: X ->  ...
$0B75: $93AF:     r26 ->
$0B76: $93BF:     r27 ->
               C: if (ms_currentProg=0) then goto $0B7E ...
$0B77: $9100:     [$052E] -> r16
$0B78: $052E:  
$0B79: $3000:     r16 = $00
$0B7A: $F019:     if (Z=1) then goto $B7E
               F: @ee_ms_Prog1->X  ...
$0B7B: $E0A5:     $05 -> r26
$0B7C: $E0B0:     $00 -> r27
$0B7D: $C002:  J: goto $B80 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
               F: @ee_ms_Prog1->X  ...
$0B7E: $E0A5:     $05 -> r26
$0B7F: $E0B0:     $00 -> r27
-----          L: 
               C: if (ms_currentProg=1) then goto $0B86 ...
$0B80: $9100:     [$052E] -> r16
$0B81: $052E:  
$0B82: $3001:     r16 = $01
$0B83: $F011:     if (Z=1) then goto $B86
$0B84: $0000:  F: NOP (NOP)
$0B85: $C002:  J: goto $B88 (RJMP)
-----          L: 
               F: @ee_ms_Prog2->X  ...
$0B86: $E2A5:     $25 -> r26
$0B87: $E0B1:     $01 -> r27
-----          L: 
               C: if (ms_currentProg=2) then goto $0B8E ...
$0B88: $9100:     [$052E] -> r16
$0B89: $052E:  
$0B8A: $3002:     r16 = $02
$0B8B: $F011:     if (Z=1) then goto $B8E
$0B8C: $0000:  F: NOP (NOP)
$0B8D: $C002:  J: goto $B90 (RJMP)
-----          L: 
               F: @ee_ms_Prog3->X  ...
$0B8E: $E4A5:     $45 -> r26
$0B8F: $E0B2:     $02 -> r27
-----          L: 
               F: @ms_objTable -> Y  ...
$0B90: $E5C0:     $50 -> r28
$0B91: $E0D5:     $05 -> r29
*********   D:\work\MultiSwitch\Firmwares\Base_v2\multis.alg    ***********
-----          L: 
-----          L: 
               F: [Y] -> EE[X]  ...
$0B92: $8108:     [Y+$00] -> r 16
$0B93: $BDA1:     r26 -> p$21
$0B94: $BDB2:     r27 -> p$22
$0B95: $BD00:     r16 -> p$20
$0B96: $9AFA:     1 -> p$1F.2
$0B97: $9AF9:     1 -> p$1F.1
$0B98: $99F9:     if (p$1F.1=0 then SKIP
$0B99: $CFFE:     goto $B98 (RJMP)
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0BAD ...
$0B9A: $8108:     [Y+$00] -> r 16
$0B9B: $3F0F:     r16 = $FF
$0B9C: $F081:     if (Z=1) then goto $BAD
$0B9D: $E009:  F: $09 -> r16 (9 -> r16)
-----          L: 
$0B9E: $930F:  F: r16 -> (r16 ->)
               F: [Y++] -> EE[X++]  ...
$0B9F: $9109:     [Y++] -> r16
$0BA0: $BDA1:     r26 -> p$21
$0BA1: $BDB2:     r27 -> p$22
$0BA2: $9611:     r26,r27 + $01
$0BA3: $BD00:     r16 -> p$20
$0BA4: $9AFA:     1 -> p$1F.2
$0BA5: $9AF9:     1 -> p$1F.1
$0BA6: $99F9:     if (p$1F.1=0 then SKIP
$0BA7: $CFFE:     goto $BA6 (RJMP)
$0BA8: $910F:  F: -> r16 (-> r16)
               C: if (r16--) then goto $0B9E ...
$0BA9: $950A:     r16 --
$0BAA: $F799:     if (Z=0) then goto $B9E
$0BAB: $9627:  F: r28,r29 + $07 (Y + (MS_OBJ_SIZE - 9))
$0BAC: $CFE5:  J: goto $B92 (RJMP)
-----          L: 
               F: -> X  ...
$0BAD: $91BF:     -> r27
$0BAE: $91AF:     -> r26
               F: -> Y  ...
$0BAF: $91DF:     -> r29
$0BB0: $91CF:     -> r28
$0BB1: $9508:  F: RET (RET)
-----          V: _ms_posFrameTest
               F: ms_posFrame++  ...
$0BB2: $9100:     [$0757] -> r16
$0BB3: $0757:  
$0BB4: $9503:     r16 ++
$0BB5: $9300:     r16 -> [$0757]
$0BB6: $0757:  
$0BB7: $E210:  F: $20 -> r17 (" " -> r17)
               C: if (r16 = 2) then goto $0BBB ...
$0BB8: $3002:     r16 = $02
$0BB9: $F409:     if (Z=0) then goto $BBB
$0BBA: $E31E:  F: $3E -> r17 (">" -> r17)
$0BBB: $3006:  F: r16 = $06 (r16 = 6)
$0BBC: $9508:  F: RET (RET)
-----          V: _ms_get_visRelayNumber
-----          L: 
               F: Y ->  ...
$0BBD: $93CF:     r28 ->
$0BBE: $93DF:     r29 ->
               F: @ms_objTable -> Y  ...
$0BBF: $E5C0:     $50 -> r28
$0BC0: $E0D5:     $05 -> r29
               F: 0 -> ms_objNumber  ...
$0BC1: $E000:     $00 -> r16
$0BC2: $9300:     r16 -> [$0750]
$0BC3: $0750:  
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0BD4 ...
$0BC4: $8108:     [Y+$00] -> r 16
$0BC5: $3F0F:     r16 = $FF
$0BC6: $F069:     if (Z=1) then goto $BD4
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $0BD2 ...
$0BC7: $8108:     [Y+$00] -> r 16
$0BC8: $3001:     r16 = $01
$0BC9: $F441:     if (Z=0) then goto $BD2
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $0BD2 ...
$0BCA: $8109:     [Y+$01] -> r 16
$0BCB: $3000:     r16 = $00
$0BCC: $F029:     if (Z=1) then goto $BD2
               F: ms_objNumber++  ...
$0BCD: $9100:     [$0750] -> r16
$0BCE: $0750:  
$0BCF: $9503:     r16 ++
$0BD0: $9300:     r16 -> [$0750]
$0BD1: $0750:  
-----          L: 
-----          L: 
$0BD2: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
$0BD3: $CFF0:  J: goto $BC4 (RJMP)
-----          L: 
               F: -> Y  ...
$0BD4: $91DF:     -> r29
$0BD5: $91CF:     -> r28
$0BD6: $9508:  F: RET (RET)
-----          V: _ms_get_visObjNumber
-----          L: 
               F: Y ->  ...
$0BD7: $93CF:     r28 ->
$0BD8: $93DF:     r29 ->
               F: @ms_objTable -> Y  ...
$0BD9: $E5C0:     $50 -> r28
$0BDA: $E0D5:     $05 -> r29
               F: 0 -> ms_objNumber  ...
$0BDB: $E000:     $00 -> r16
$0BDC: $9300:     r16 -> [$0750]
$0BDD: $0750:  
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0BEB ...
$0BDE: $8108:     [Y+$00] -> r 16
$0BDF: $3F0F:     r16 = $FF
$0BE0: $F051:     if (Z=1) then goto $BEB
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_RELAY) then goto $0BE9 ...
$0BE1: $8108:     [Y+$00] -> r 16
$0BE2: $3001:     r16 = $01
$0BE3: $F429:     if (Z=0) then goto $BE9
               F: ms_objNumber++  ...
$0BE4: $9100:     [$0750] -> r16
$0BE5: $0750:  
$0BE6: $9503:     r16 ++
$0BE7: $9300:     r16 -> [$0750]
$0BE8: $0750:  
$0BE9: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
$0BEA: $CFF3:  J: goto $BDE (RJMP)
-----          L: 
               F: -> Y  ...
$0BEB: $91DF:     -> r29
$0BEC: $91CF:     -> r28
$0BED: $9508:  F: RET (RET)
-----          V: _ms_get_visAllObjNumber
-----          L: 
               F: Y ->  ...
$0BEE: $93CF:     r28 ->
$0BEF: $93DF:     r29 ->
               F: @ms_objTable -> Y  ...
$0BF0: $E5C0:     $50 -> r28
$0BF1: $E0D5:     $05 -> r29
               F: 0 -> ms_objNumber  ...
$0BF2: $E000:     $00 -> r16
$0BF3: $9300:     r16 -> [$0750]
$0BF4: $0750:  
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0C02 ...
$0BF5: $8108:     [Y+$00] -> r 16
$0BF6: $3F0F:     r16 = $FF
$0BF7: $F051:     if (Z=1) then goto $C02
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_RELAY) then goto $0C00 ...
$0BF8: $8108:     [Y+$00] -> r 16
$0BF9: $3001:     r16 = $01
$0BFA: $F429:     if (Z=0) then goto $C00
               F: ms_objNumber++  ...
$0BFB: $9100:     [$0750] -> r16
$0BFC: $0750:  
$0BFD: $9503:     r16 ++
$0BFE: $9300:     r16 -> [$0750]
$0BFF: $0750:  
$0C00: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
$0C01: $CFF3:  J: goto $BF5 (RJMP)
-----          L: 
               F: -> Y  ...
$0C02: $91DF:     -> r29
$0C03: $91CF:     -> r28
$0C04: $9508:  F: RET (RET)
-----          V: _ms_get_ObjPointerY
               F: @ms_objTable -> Y  ...
$0C05: $E5C0:     $50 -> r28
$0C06: $E0D5:     $05 -> r29
               F: ms_posBuild -> ms_objNumber  ...
$0C07: $9100:     [$0753] -> r16
$0C08: $0753:  
$0C09: $9300:     r16 -> [$0750]
$0C0A: $0750:  
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0C1C ...
$0C0B: $8108:     [Y+$00] -> r 16
$0C0C: $3F0F:     r16 = $FF
$0C0D: $F071:     if (Z=1) then goto $C1C
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $0C1B ...
$0C0E: $8108:     [Y+$00] -> r 16
$0C0F: $3001:     r16 = $01
$0C10: $F451:     if (Z=0) then goto $C1B
-----          L: 
               C: if (ms_objNumber = 0) then goto $0C1C ...
$0C11: $9100:     [$0750] -> r16
$0C12: $0750:  
$0C13: $3000:     r16 = $00
$0C14: $F039:     if (Z=1) then goto $C1C
               F: ms_objNumber--  ...
$0C15: $9100:     [$0750] -> r16
$0C16: $0750:  
$0C17: $950A:     r16 --
$0C18: $9300:     r16 -> [$0750]
$0C19: $0750:  
$0C1A: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
$0C1B: $CFEF:  J: goto $C0B (RJMP)
-----          L: 
-----          L: 
$0C1C: $9508:  F: RET (RET)
-----          V: _ms_do_ObjNumberTest
-----          L: 
               F: Y ->  ...
$0C1D: $93CF:     r28 ->
$0C1E: $93DF:     r29 ->
               F: @ms_objTable -> Y  ...
$0C1F: $E5C0:     $50 -> r28
$0C20: $E0D5:     $05 -> r29
               F: 0 -> ms_objNumber  ...
$0C21: $E000:     $00 -> r16
$0C22: $9300:     r16 -> [$0750]
$0C23: $0750:  
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0C2E ...
$0C24: $8108:     [Y+$00] -> r 16
$0C25: $3F0F:     r16 = $FF
$0C26: $F039:     if (Z=1) then goto $C2E
$0C27: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
               F: ms_objNumber++  ...
$0C28: $9100:     [$0750] -> r16
$0C29: $0750:  
$0C2A: $9503:     r16 ++
$0C2B: $9300:     r16 -> [$0750]
$0C2C: $0750:  
$0C2D: $CFF6:  J: goto $C24 (RJMP)
-----          L: 
               F: -> Y  ...
$0C2E: $91DF:     -> r29
$0C2F: $91CF:     -> r28
$0C30: $9508:  F: RET (RET)
-----          V: _ms_do_ObjTest
-----          L: 
               F: Y ->  ...
$0C31: $93CF:     r28 ->
$0C32: $93DF:     r29 ->
               F: @ms_objTable -> Y  ...
$0C33: $E5C0:     $50 -> r28
$0C34: $E0D5:     $05 -> r29
               F: MS_OBJ_TABLE_SIZE -> ms_objNumber  ...
$0C35: $E200:     $20 -> r16
$0C36: $9300:     r16 -> [$0750]
$0C37: $0750:  
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0C42 ...
$0C38: $8108:     [Y+$00] -> r 16
$0C39: $3F0F:     r16 = $FF
$0C3A: $F039:     if (Z=1) then goto $C42
$0C3B: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
               F: ms_objNumber--  ...
$0C3C: $9100:     [$0750] -> r16
$0C3D: $0750:  
$0C3E: $950A:     r16 --
$0C3F: $9300:     r16 -> [$0750]
$0C40: $0750:  
$0C41: $CFF6:  J: goto $C38 (RJMP)
-----          L: 
               F: -> Y  ...
$0C42: $91DF:     -> r29
$0C43: $91CF:     -> r28
$0C44: $9508:  F: RET (RET)
-----          V: _ms_do_ObjClean
-----          L: 
               F: Y ->  ...
$0C45: $93CF:     r28 ->
$0C46: $93DF:     r29 ->
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$0C47: $E4C0:     $40 -> r28
$0C48: $E0D5:     $05 -> r29
-----          L: 
$0C49: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0C59 ...
$0C4A: $8108:     [Y+$00] -> r 16
$0C4B: $3F0F:     r16 = $FF
$0C4C: $F061:     if (Z=1) then goto $C59
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_NUL) then goto $0C49 ...
$0C4D: $8108:     [Y+$00] -> r 16
$0C4E: $3000:     r16 = $00
$0C4F: $F7C9:     if (Z=0) then goto $C49
               F: Y ->  ...
$0C50: $93CF:     r28 ->
$0C51: $93DF:     r29 ->
-----          L: 
               F: [Y+MS_OBJ_SIZE] -> [Y++]  ...
$0C52: $8908:     [Y+$10] -> r 16
$0C53: $9309:     r16 -> [Y++]
               C: if (r16 -= MS_TYPE_LIST_END) then goto $0C52 ...
$0C54: $3F0F:     r16 = $FF
$0C55: $F7E1:     if (Z=0) then goto $C52
               F: -> Y  ...
$0C56: $91DF:     -> r29
$0C57: $91CF:     -> r28
$0C58: $CFF1:  J: goto $C4A (RJMP)
-----          L: 
               F: -> Y  ...
$0C59: $91DF:     -> r29
$0C5A: $91CF:     -> r28
$0C5B: $9508:  F: RET (RET)
-----          V: _ms_do_ObjBlank
               F: MS_TYPE_RELAY -> [Y+MS_OBJ_TYPE]  ...
$0C5C: $E001:     $01 -> r16
$0C5D: $8308:     r16 -> [Y+$00]
               F: $10 -> [Y+MS_OBJ_ADDR]  ...
$0C5E: $E100:     $10 -> r16
$0C5F: $8309:     r16 -> [Y+$01]
               F: $0 -> [Y+MS_OBJ_KEY]  ...
$0C60: $E000:     $00 -> r16
$0C61: $830A:     r16 -> [Y+$02]
               F: 1 -> [Y+MS_OBJ_TIME_IDLE_S]  ...
$0C62: $E001:     $01 -> r16
$0C63: $830B:     r16 -> [Y+$03]
               F: 0 -> [Y+MS_OBJ_TIME_IDLE_M]:Word  ...
$0C64: $E000:     $00 -> r16
$0C65: $830C:     r16 -> [Y+$04]
$0C66: $830D:     r16 -> [Y+$05]
               F: 1 -> [Y+MS_OBJ_TIME_WORK_S]  ...
$0C67: $E001:     $01 -> r16
$0C68: $830E:     r16 -> [Y+$06]
               F: 0 -> [Y+MS_OBJ_TIME_WORK_M]:Word  ...
$0C69: $E000:     $00 -> r16
$0C6A: $830F:     r16 -> [Y+$07]
$0C6B: $8708:     r16 -> [Y+$08]
-----          L: 
$0C6C: $9508:  F: RET (RET)
-----          V: _ms_do_ObjSpace
               F: X ->  ...
$0C6D: $93AF:     r26 ->
$0C6E: $93BF:     r27 ->
$0C6F: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
$0C70: $01DE:  F: r28,r29 -> r26,r27 (Y -> X)
-----          L: 
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0C76 ...
$0C71: $8108:     [Y+$00] -> r 16
$0C72: $3F0F:     r16 = $FF
$0C73: $F011:     if (Z=1) then goto $C76
$0C74: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
$0C75: $CFFB:  J: goto $C71 (RJMP)
-----          L: 
$0C76: $9621:  F: r28,r29 + $01 (Y + 1)
-----          L: 
               F: Y--  ...
$0C77: $50C1:     r28 - $01
$0C78: $40D0:     r29 - $00 -
               F: [Y] -> [Y+MS_OBJ_SIZE]  ...
$0C79: $8108:     [Y+$00] -> r 16
$0C7A: $8B08:     r16 -> [Y+$10]
               C: if (Y -= X) then goto $0C77 ...
$0C7B: $17CA:     r28 = r26
$0C7C: $07DB:     r29 = r27=
$0C7D: $F7C9:     if (Z=0) then goto $C77
               F: -> X  ...
$0C7E: $91BF:     -> r27
$0C7F: $91AF:     -> r26
$0C80: $9508:  F: RET (RET)
-----          V: _ms_do_ObjSwitchDown
               F: X ->  ...
$0C81: $93AF:     r26 ->
$0C82: $93BF:     r27 ->
               C: if ([Y + MS_OBJ_SIZE] = MS_TYPE_LIST_END) then goto $0C97 ...
$0C83: $8908:     [Y+$10] -> r 16
$0C84: $3F0F:     r16 = $FF
$0C85: $F089:     if (Z=1) then goto $C97
$0C86: $01DE:  F: r28,r29 -> r26,r27 (Y -> X)
$0C87: $9650:  F: r26,r27 + $10 (X + MS_OBJ_SIZE)
-----          L: 
$0C88: $8108:  F: [Y] -> r16 ([Y] -> r16)
$0C89: $8918:  F: [Y+$10] -> r 17 ([Y + MS_OBJ_SIZE] -> r17)
$0C8A: $8318:  F: r17 -> [Y] (r17 -> [Y])
$0C8B: $8B08:  F: r16 -> [Y+$10] (r16 -> [Y + MS_OBJ_SIZE])
               F: Y++  ...
$0C8C: $5FCF:     r28 - $FF
$0C8D: $4FDF:     r29 - $FF -
               C: if (Y -= X) then goto $0C88 ...
$0C8E: $17CA:     r28 = r26
$0C8F: $07DB:     r29 = r27=
$0C90: $F7B9:     if (Z=0) then goto $C88
-----          L: 
$0C91: $01ED:  F: r26,r27 -> r28,r29 (X -> Y)
               F: ms_posBuild++  ...
$0C92: $9100:     [$0753] -> r16
$0C93: $0753:  
$0C94: $9503:     r16 ++
$0C95: $9300:     r16 -> [$0753]
$0C96: $0753:  
-----          L: 
               F: -> X  ...
$0C97: $91BF:     -> r27
$0C98: $91AF:     -> r26
$0C99: $9508:  F: RET (RET)
-----          V: _ms_do_ObjSwitchUp
               F: X ->  ...
$0C9A: $93AF:     r26 ->
$0C9B: $93BF:     r27 ->
               C: if (Y = @ms_objTable) then goto $0CB1 ...
$0C9C: $35C0:     r28 = $50
$0C9D: $E015:     $05 -> r17
$0C9E: $07D1:     r29 = r17=
$0C9F: $F089:     if (Z=1) then goto $CB1
$0CA0: $01DE:  F: r28,r29 -> r26,r27 (Y -> X)
$0CA1: $9760:  F: r28,r29 - $10 (Y - MS_OBJ_SIZE)
-----          L: 
$0CA2: $8108:  F: [Y] -> r16 ([Y] -> r16)
$0CA3: $8918:  F: [Y+$10] -> r 17 ([Y + MS_OBJ_SIZE] -> r17)
$0CA4: $8318:  F: r17 -> [Y] (r17 -> [Y])
$0CA5: $8B08:  F: r16 -> [Y+$10] (r16 -> [Y + MS_OBJ_SIZE])
               F: Y++  ...
$0CA6: $5FCF:     r28 - $FF
$0CA7: $4FDF:     r29 - $FF -
               C: if (Y -= X) then goto $0CA2 ...
$0CA8: $17CA:     r28 = r26
$0CA9: $07DB:     r29 = r27=
$0CAA: $F7B9:     if (Z=0) then goto $CA2
-----          L: 
$0CAB: $01ED:  F: r26,r27 -> r28,r29 (X -> Y)
               F: ms_posBuild--  ...
$0CAC: $9100:     [$0753] -> r16
$0CAD: $0753:  
$0CAE: $950A:     r16 --
$0CAF: $9300:     r16 -> [$0753]
$0CB0: $0753:  
-----          L: 
               F: -> X  ...
$0CB1: $91BF:     -> r27
$0CB2: $91AF:     -> r26
$0CB3: $9508:  F: RET (RET)
-----          V: _ms_do_statusReset
               F: Y ->  ...
$0CB4: $93CF:     r28 ->
$0CB5: $93DF:     r29 ->
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$0CB6: $E4C0:     $40 -> r28
$0CB7: $E0D5:     $05 -> r29
-----          L: 
$0CB8: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0CC2 ...
$0CB9: $8108:     [Y+$00] -> r 16
$0CBA: $3F0F:     r16 = $FF
$0CBB: $F031:     if (Z=1) then goto $CC2
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $0CB8 ...
$0CBC: $8108:     [Y+$00] -> r 16
$0CBD: $3001:     r16 = $01
$0CBE: $F7C9:     if (Z=0) then goto $CB8
-----          L: 
               F: 128 -> [Y+MS_OBJ_STATUS]  ...
$0CBF: $E800:     $80 -> r16
$0CC0: $870A:     r16 -> [Y+$0A]
$0CC1: $CFF6:  J: goto $CB8 (RJMP)
-----          L: 
-----          L: 
               F: -> Y  ...
$0CC2: $91DF:     -> r29
$0CC3: $91CF:     -> r28
$0CC4: $9508:  F: RET (RET)
-----          V: _ms_timersWork
-----          L: 
               C: if (ms_mode = MS_MODE_CONDITIONS_WORK) then goto $0CD2 ...
$0CC5: $9100:     [$0530] -> r16
$0CC6: $0530:  
$0CC7: $3008:     r16 = $08
$0CC8: $F049:     if (Z=1) then goto $CD2
               C: if (ms_mode = MS_MODE_WORK_CYCLE) then goto $0CD3 ...
$0CC9: $9100:     [$0530] -> r16
$0CCA: $0530:  
$0CCB: $3003:     r16 = $03
$0CCC: $F031:     if (Z=1) then goto $CD3
               C: if (ms_mode = MS_MODE_WORK_ONCE) then goto $0CD3 ...
$0CCD: $9100:     [$0530] -> r16
$0CCE: $0530:  
$0CCF: $3004:     r16 = $04
$0CD0: $F011:     if (Z=1) then goto $CD3
-----          L: 
$0CD1: $9508:  F: RET (RET)
-----          L: 
$0CD2: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
               C: if (ms_pauseOnceCycle = 1) then goto $0CD8 ...
$0CD3: $9100:     [$075D] -> r16
$0CD4: $075D:  
$0CD5: $3001:     r16 = $01
$0CD6: $F409:     if (Z=0) then goto $CD8
$0CD7: $9508:  F: RET (RET)
$0CD8: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
               F: Y ->  ...
$0CD9: $93CF:     r28 ->
$0CDA: $93DF:     r29 ->
               F: X ->  ...
$0CDB: $93AF:     r26 ->
$0CDC: $93BF:     r27 ->
-----          L: 
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$0CDD: $E4C0:     $40 -> r28
$0CDE: $E0D5:     $05 -> r29
-----          L: 
-----          L: 
$0CDF: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0D1E ...
$0CE0: $8108:     [Y+$00] -> r 16
$0CE1: $3F0F:     r16 = $FF
$0CE2: $F1D9:     if (Z=1) then goto $D1E
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $0CDF ...
$0CE3: $8108:     [Y+$00] -> r 16
$0CE4: $3001:     r16 = $01
$0CE5: $F7C9:     if (Z=0) then goto $CDF
-----          L: 
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $0D3F ...
$0CE6: $8109:     [Y+$01] -> r 16
$0CE7: $3000:     r16 = $00
$0CE8: $F409:     if (Z=0) then goto $CEA
$0CE9: $C055:     goto $D3F (RJMP)
-----          L: 
-----          L: 
$0CEA: $810B:  F: [Y+$03] -> r 16 ([Y+MS_OBJ_TIME_IDLE_S] -> r16)
               F: [Y+MS_OBJ_TIME_IDLE_M]:Word -> X  ...
$0CEB: $81AC:     [Y+$04] -> r 26
$0CEC: $81BD:     [Y+$05] -> r 27
               C: if (X -= 0) then goto $0CF3 ...
$0CED: $30A0:     r26 = $00
$0CEE: $E010:     $00 -> r17
$0CEF: $07B1:     r27 = r17=
$0CF0: $F411:     if (Z=0) then goto $CF3
               C: if (r16 = 0) then goto $0CFE ...
$0CF1: $3000:     r16 = $00
$0CF2: $F059:     if (Z=1) then goto $CFE
-----          L: 
               C: if (r16 = 0) then goto $0CF7 ...
$0CF3: $3000:     r16 = $00
$0CF4: $F011:     if (Z=1) then goto $CF7
$0CF5: $950A:  F: r16 -- (r16--)
$0CF6: $C003:  J: goto $CFA (RJMP)
-----          L: 
$0CF7: $E30B:  F: $3B -> r16 (59 -> r16)
               F: X--  ...
$0CF8: $50A1:     r26 - $01
$0CF9: $40B0:     r27 - $00 -
-----          L: 
$0CFA: $830B:  F: r16 -> [Y+$03] (r16 -> [Y+MS_OBJ_TIME_IDLE_S])
               F: X -> [Y+MS_OBJ_TIME_IDLE_M]:Word  ...
$0CFB: $83AC:     r26 -> [Y+$04]
$0CFC: $83BD:     r27 -> [Y+$05]
$0CFD: $C019:  J: goto $D17 (RJMP)
-----          L: 
-----          L: 
-----          L: 
               F: MS_ORDER_ON -> [Y+MS_OBJ_ORDER]  ...
$0CFE: $EF0F:     $FF -> r16
$0CFF: $8709:     r16 -> [Y+$09]
-----          L: 
-----          L: 
$0D00: $810E:  F: [Y+$06] -> r 16 ([Y+MS_OBJ_TIME_WORK_S] -> r16)
               F: [Y+MS_OBJ_TIME_WORK_M]:Word -> X  ...
$0D01: $81AF:     [Y+$07] -> r 26
$0D02: $85B8:     [Y+$08] -> r 27
               C: if (X -= 0) then goto $0D09 ...
$0D03: $30A0:     r26 = $00
$0D04: $E010:     $00 -> r17
$0D05: $07B1:     r27 = r17=
$0D06: $F411:     if (Z=0) then goto $D09
               C: if (r16 = 0) then goto $0D14 ...
$0D07: $3000:     r16 = $00
$0D08: $F059:     if (Z=1) then goto $D14
-----          L: 
               C: if (r16 = 0) then goto $0D0D ...
$0D09: $3000:     r16 = $00
$0D0A: $F011:     if (Z=1) then goto $D0D
$0D0B: $950A:  F: r16 -- (r16--)
$0D0C: $C003:  J: goto $D10 (RJMP)
-----          L: 
$0D0D: $E30B:  F: $3B -> r16 (59 -> r16)
               F: X--  ...
$0D0E: $50A1:     r26 - $01
$0D0F: $40B0:     r27 - $00 -
-----          L: 
$0D10: $830E:  F: r16 -> [Y+$06] (r16 -> [Y+MS_OBJ_TIME_WORK_S])
               F: X -> [Y+MS_OBJ_TIME_WORK_M]:Word  ...
$0D11: $83AF:     r26 -> [Y+$07]
$0D12: $87B8:     r27 -> [Y+$08]
$0D13: $C003:  J: goto $D17 (RJMP)
-----          L: 
               F: MS_ORDER_OFF -> [Y+MS_OBJ_ORDER]  ...
$0D14: $E000:     $00 -> r16
$0D15: $8709:     r16 -> [Y+$09]
-----          L: 
$0D16: $CFC8:  J: goto $CDF (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if ([Y+MS_OBJ_TYPE + MS_OBJ_SIZE] = MS_TYPE_LIST_END) then goto $0D3A ...
$0D17: $8908:     [Y+$10] -> r 16
$0D18: $3F0F:     r16 = $FF
$0D19: $F101:     if (Z=1) then goto $D3A
-----          L: 
               C: if ([Y+MS_OBJ_KEY + MS_OBJ_SIZE] -= MS_KEY_JOINUP) then goto $0D3A ...
$0D1A: $890A:     [Y+$12] -> r 16
$0D1B: $3001:     r16 = $01
$0D1C: $F4E9:     if (Z=0) then goto $D3A
-----          L: 
-----          L: 
$0D1D: $CFC1:  J: goto $CDF (RJMP)
-----          L: 
               C: if (ms_mode = MS_MODE_WORK_ONCE) then goto $0D2F ...
$0D1E: $9100:     [$0530] -> r16
$0D1F: $0530:  
$0D20: $3004:     r16 = $04
$0D21: $F069:     if (Z=1) then goto $D2F
$0D22: $DB31:  F: rcall $854 (_ms_eeRestoreSafeState)
$0D23: $DBC5:  F: rcall $8E9 (_ms_message_)
$0D24: $20 $2A $20 $73 $74 $61 $72 $74 $20 $6E $65 $77 $20 $63 $79 $63
$0D2C: $6C $65 $00 $00
$0D2E: $CFAE:  J: goto $CDD (RJMP)
-----          L: 
$0D2F: $DBB9:  F: rcall $8E9 (_ms_message_)
$0D30: $20 $2A $20 $65 $6E $64 $20 $63 $79 $63 $6C $65 $20 $2D $20 $73
$0D38: $74 $6F $70 $00
-----          L: 
-----          L: 
               F: -> X  ...
$0D3A: $91BF:     -> r27
$0D3B: $91AF:     -> r26
               F: -> Y  ...
$0D3C: $91DF:     -> r29
$0D3D: $91CF:     -> r28
$0D3E: $9508:  F: RET (RET)
-----          V: 
-----          L: 
$0D3F: $810B:  F: [Y+$03] -> r 16 ([Y+MS_OBJ_TIME_IDLE_S] -> r16)
               F: [Y+MS_OBJ_TIME_IDLE_M]:Word -> X  ...
$0D40: $81AC:     [Y+$04] -> r 26
$0D41: $81BD:     [Y+$05] -> r 27
               C: if (X -= 0) then goto $0D49 ...
$0D42: $30A0:     r26 = $00
$0D43: $E010:     $00 -> r17
$0D44: $07B1:     r27 = r17=
$0D45: $F419:     if (Z=0) then goto $D49
               C: if (r16 = 0) then goto $0CDF ...
$0D46: $3000:     r16 = $00
$0D47: $F409:     if (Z=0) then goto $D49
$0D48: $CF96:     goto $CDF (RJMP)
-----          L: 
               C: if (r16 = 0) then goto $0D4D ...
$0D49: $3000:     r16 = $00
$0D4A: $F011:     if (Z=1) then goto $D4D
$0D4B: $950A:  F: r16 -- (r16--)
$0D4C: $C003:  J: goto $D50 (RJMP)
-----          L: 
$0D4D: $E30B:  F: $3B -> r16 (59 -> r16)
               F: X--  ...
$0D4E: $50A1:     r26 - $01
$0D4F: $40B0:     r27 - $00 -
-----          L: 
$0D50: $830B:  F: r16 -> [Y+$03] (r16 -> [Y+MS_OBJ_TIME_IDLE_S])
               F: X -> [Y+MS_OBJ_TIME_IDLE_M]:Word  ...
$0D51: $83AC:     r26 -> [Y+$04]
$0D52: $83BD:     r27 -> [Y+$05]
-----          L: 
$0D53: $CFC3:  J: goto $D17 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ADC.alg    ***********
-----          V: _ADC_init
-----          L: 
$0D54: $E000:  S: $00 -> r16 ($00->r16)
$0D55: $9300:  S: r16 -> [$007B] (r16->ADCSRB)
$0D56: $007B:  
$0D57: $E600:  S: $60 -> r16 ($60->r16)
$0D58: $9300:  S: r16 -> [$007C] (r16->ADMUX)
$0D59: $007C:  
$0D5A: $EE0F:  S: $EF -> r16 ($EF->r16)
$0D5B: $9300:  S: r16 -> [$007A] (r16->ADCSRA)
$0D5C: $007A:  
$0D5D: $9508:  F: RET (ret)
-----          V: ADC_Complete
$0D5E: $930F:  F: r16 -> (r16 ->)
$0D5F: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$0D60: $B70F:     p$3F -> r16
$0D61: $930F:     r16 ->
               F: Z ->  ...
$0D62: $93EF:     r30 ->
$0D63: $93FF:     r31 ->
-----          L: 
$0D64: $9100:  F: [$007C] -> r16 (ADMUX -> r16)
$0D65: $007C:  
$0D66: $2F10:  F: r16 -> r17 (r16 -> r17)
$0D67: $5001:  F: r16 - $01 (r16 - 1)
$0D68: $F408:  C: if (C=0) then goto $D6A (C = 1)
$0D69: $E007:  F: $07 -> r16 (7 -> r16)
-----          L: 
$0D6A: $9513:  F: r17 ++ (r17 ++)
$0D6B: $FD13:  C: if (r17.3=0 then SKIP (r17.3 = 1)
$0D6C: $E610:  F: $60 -> r17 ($60 -> r17)
$0D6D: $9310:  F: r17 -> [$007C] (r17 -> ADMUX)
$0D6E: $007C:  
-----          L: 
               F: @ADC_Level -> Z  ...
$0D6F: $E6E2:     $62 -> r30
$0D70: $E0F7:     $07 -> r31
$0D71: $7007:  F: r16 & $07 (r16 & #b00000111)
               F: Z + r16  ...
$0D72: $0FE0:     r30 + r16
$0D73: $E010:     $00 -> r17
$0D74: $1FF1:     r31 + r17 +
$0D75: $9100:  F: [$0079] -> r16 (ADCH -> r16)
$0D76: $0079:  
$0D77: $E312:  F: $32 -> r17 (ADC_MAX -> r17)
$0D78: $9F01:  F: r16 * r17 (r16 * r17)
$0D79: $8210:  F: r1 -> [Z] (r1 -> [Z])
-----          L: 
-----          L: 
               F: -> Z  ...
$0D7A: $91FF:     -> r31
$0D7B: $91EF:     -> r30
               F: -> SREG  ...
$0D7C: $910F:     -> r16
$0D7D: $BF0F:     r16 -> p$3F
$0D7E: $911F:  F: -> r17 (-> r17)
$0D7F: $910F:  F: -> r16 (-> r16)
$0D80: $9518:  F: RETI (reti)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          V: _ms_visSourcesViewer
-----          L: 
$0D81: $DB5B:  F: rcall $8DD (_ms_printMessage)
-----          L: 
$0D82: $D9D3:  F: rcall $756 (_print_string_)
$0D83: $49 $4E $50 $55 $54 $53 $20 $53 $54 $41 $54 $55 $53 $01 $00 $00
$0D8B: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0D8C: $0355:  
$0D8D: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0D8E: $0355:  
-----          L: 
$0D8F: $D9C6:  F: rcall $756 (_print_string_)
$0D90: $49 $6E $2D $31 $20 $3D $20 $01 $00 $00
               F: Z ->  ...
$0D95: $93EF:     r30 ->
$0D96: $93FF:     r31 ->
               F: ADC_Level[6] -> Z  ...
$0D97: $91E0:     [$0768] -> r30
$0D98: $0768:  
$0D99: $E0F0:     $00 -> r31
$0D9A: $D9D9:  F: rcall $774 (_print_DECV2_)
               F: -> Z  ...
$0D9B: $91FF:     -> r31
$0D9C: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          L: 
$0D9D: $D9B8:  F: rcall $756 (_print_string_)
$0D9E: $56 $01 $00 $00
$0DA0: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0DA1: $0355:  
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
$0DA2: $D9B3:  F: rcall $756 (_print_string_)
$0DA3: $49 $6E $2D $32 $20 $3D $20 $01 $00 $00
               F: Z ->  ...
$0DA8: $93EF:     r30 ->
$0DA9: $93FF:     r31 ->
               F: ADC_Level[7] -> Z  ...
$0DAA: $91E0:     [$0769] -> r30
$0DAB: $0769:  
$0DAC: $E0F0:     $00 -> r31
$0DAD: $D9C6:  F: rcall $774 (_print_DECV2_)
               F: -> Z  ...
$0DAE: $91FF:     -> r31
$0DAF: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          L: 
$0DB0: $D9A5:  F: rcall $756 (_print_string_)
$0DB1: $56 $01 $00 $00
$0DB3: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0DB4: $0355:  
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
$0DB5: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0DB6: $0355:  
$0DB7: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0DB8: $0355:  
-----          L: 
$0DB9: $9508:  F: RET (RET)
-----          V: _ms_clickSourcesViewer
-----          L: 
               F: MS_MODE_MENU -> ms_mode  ...
$0DBA: $E006:     $06 -> r16
$0DBB: $9300:     r16 -> [$0530]
$0DBC: $0530:  
$0DBD: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$0DBE: $9508:  F: RET (RET)
-----          V: _ms_ConditionsSwitchProg
-----          L: 
               C: if (ms_mode -= MS_MODE_CONDITIONS_WORK) then goto $0DC4 ...
$0DBF: $9100:     [$0530] -> r16
$0DC0: $0530:  
$0DC1: $3008:     r16 = $08
$0DC2: $F009:     if (Z=1) then goto $DC4
$0DC3: $9508:  F: RET (RET)
-----          L: 
               F: 0 -> ms_pauseOnceCycle  ...
$0DC4: $E000:     $00 -> r16
$0DC5: $9300:     r16 -> [$075D]
$0DC6: $075D:  
-----          L: 
               F: ee_ms_sourceProg1 -> ms_sourceProg  ...
$0DC7: $E615:     $65 -> r17
$0DC8: $BD11:     r17 -> p$21
$0DC9: $E013:     $03 -> r17
$0DCA: $BD12:     r17 -> p$22
$0DCB: $9AF8:     1 -> p$1F.0
$0DCC: $B500:     p$20 -> r16
$0DCD: $9300:     r16 -> [$075E]
$0DCE: $075E:  
               F: ee_ms_sourceProg1_up -> ms_sourceProg_up  ...
$0DCF: $E616:     $66 -> r17
$0DD0: $BD11:     r17 -> p$21
$0DD1: $E013:     $03 -> r17
$0DD2: $BD12:     r17 -> p$22
$0DD3: $9AF8:     1 -> p$1F.0
$0DD4: $B500:     p$20 -> r16
$0DD5: $9300:     r16 -> [$075F]
$0DD6: $075F:  
               F: ee_ms_sourceProg1_down -> ms_sourceProg_down  ...
$0DD7: $E617:     $67 -> r17
$0DD8: $BD11:     r17 -> p$21
$0DD9: $E013:     $03 -> r17
$0DDA: $BD12:     r17 -> p$22
$0DDB: $9AF8:     1 -> p$1F.0
$0DDC: $B500:     p$20 -> r16
$0DDD: $9300:     r16 -> [$0760]
$0DDE: $0760:  
$0DDF: $D2C8:  F: rcall $10A8 (_ms_visConditionsTest_)
               C: if (r16 = FALSE) then goto $0DEC ...
$0DE0: $3000:     r16 = $00
$0DE1: $F051:     if (Z=1) then goto $DEC
               C: if (ms_currentProg = 0) then goto $0DE7 ...
$0DE2: $9100:     [$052E] -> r16
$0DE3: $052E:  
$0DE4: $3000:     r16 = $00
$0DE5: $F409:     if (Z=0) then goto $DE7
$0DE6: $9508:  F: RET (RET)
               F: 0 -> ms_currentProg  ...
$0DE7: $E000:     $00 -> r16
$0DE8: $9300:     r16 -> [$052E]
$0DE9: $052E:  
$0DEA: $DAAC:  F: rcall $897 (_ms_eeRestore)
$0DEB: $9508:  F: RET (RET)
-----          L: 
               F: ee_ms_sourceProg2 -> ms_sourceProg  ...
$0DEC: $E618:     $68 -> r17
$0DED: $BD11:     r17 -> p$21
$0DEE: $E013:     $03 -> r17
$0DEF: $BD12:     r17 -> p$22
$0DF0: $9AF8:     1 -> p$1F.0
$0DF1: $B500:     p$20 -> r16
$0DF2: $9300:     r16 -> [$075E]
$0DF3: $075E:  
               F: ee_ms_sourceProg2_up -> ms_sourceProg_up  ...
$0DF4: $E619:     $69 -> r17
$0DF5: $BD11:     r17 -> p$21
$0DF6: $E013:     $03 -> r17
$0DF7: $BD12:     r17 -> p$22
$0DF8: $9AF8:     1 -> p$1F.0
$0DF9: $B500:     p$20 -> r16
$0DFA: $9300:     r16 -> [$075F]
$0DFB: $075F:  
               F: ee_ms_sourceProg2_down -> ms_sourceProg_down  ...
$0DFC: $E61A:     $6A -> r17
$0DFD: $BD11:     r17 -> p$21
$0DFE: $E013:     $03 -> r17
$0DFF: $BD12:     r17 -> p$22
$0E00: $9AF8:     1 -> p$1F.0
$0E01: $B500:     p$20 -> r16
$0E02: $9300:     r16 -> [$0760]
$0E03: $0760:  
$0E04: $D2A3:  F: rcall $10A8 (_ms_visConditionsTest_)
               C: if (r16 = FALSE) then goto $0E11 ...
$0E05: $3000:     r16 = $00
$0E06: $F051:     if (Z=1) then goto $E11
               C: if (ms_currentProg = 1) then goto $0E0C ...
$0E07: $9100:     [$052E] -> r16
$0E08: $052E:  
$0E09: $3001:     r16 = $01
$0E0A: $F409:     if (Z=0) then goto $E0C
$0E0B: $9508:  F: RET (RET)
               F: 1 -> ms_currentProg  ...
$0E0C: $E001:     $01 -> r16
$0E0D: $9300:     r16 -> [$052E]
$0E0E: $052E:  
$0E0F: $DA87:  F: rcall $897 (_ms_eeRestore)
$0E10: $9508:  F: RET (RET)
-----          L: 
               F: ee_ms_sourceProg3 -> ms_sourceProg  ...
$0E11: $E61B:     $6B -> r17
$0E12: $BD11:     r17 -> p$21
$0E13: $E013:     $03 -> r17
$0E14: $BD12:     r17 -> p$22
$0E15: $9AF8:     1 -> p$1F.0
$0E16: $B500:     p$20 -> r16
$0E17: $9300:     r16 -> [$075E]
$0E18: $075E:  
               F: ee_ms_sourceProg3_up -> ms_sourceProg_up  ...
$0E19: $E61C:     $6C -> r17
$0E1A: $BD11:     r17 -> p$21
$0E1B: $E013:     $03 -> r17
$0E1C: $BD12:     r17 -> p$22
$0E1D: $9AF8:     1 -> p$1F.0
$0E1E: $B500:     p$20 -> r16
$0E1F: $9300:     r16 -> [$075F]
$0E20: $075F:  
               F: ee_ms_sourceProg3_down -> ms_sourceProg_down  ...
$0E21: $E61D:     $6D -> r17
$0E22: $BD11:     r17 -> p$21
$0E23: $E013:     $03 -> r17
$0E24: $BD12:     r17 -> p$22
$0E25: $9AF8:     1 -> p$1F.0
$0E26: $B500:     p$20 -> r16
$0E27: $9300:     r16 -> [$0760]
$0E28: $0760:  
$0E29: $D27E:  F: rcall $10A8 (_ms_visConditionsTest_)
               C: if (r16 = FALSE) then goto $0E36 ...
$0E2A: $3000:     r16 = $00
$0E2B: $F051:     if (Z=1) then goto $E36
               C: if (ms_currentProg = 2) then goto $0E31 ...
$0E2C: $9100:     [$052E] -> r16
$0E2D: $052E:  
$0E2E: $3002:     r16 = $02
$0E2F: $F409:     if (Z=0) then goto $E31
$0E30: $9508:  F: RET (RET)
               F: 2 -> ms_currentProg  ...
$0E31: $E002:     $02 -> r16
$0E32: $9300:     r16 -> [$052E]
$0E33: $052E:  
$0E34: $DA62:  F: rcall $897 (_ms_eeRestore)
$0E35: $9508:  F: RET (RET)
-----          L: 
               F: 1 -> ms_pauseOnceCycle  ...
$0E36: $E001:     $01 -> r16
$0E37: $9300:     r16 -> [$075D]
$0E38: $075D:  
-----          L: 
$0E39: $9508:  F: RET (RET)
-----          V: _ms_naviConditionsWork
-----          L: 
               C: if (ms_posConditionsClick.0 = 0) then goto $0E40 ...
$0E3A: $9100:     [$075C] -> r16
$0E3B: $075C:  
$0E3C: $FF00:     if (r16.0=1 then SKIP
$0E3D: $C002:     goto $E40 (RJMP)
$0E3E: $D5AE:  F: rcall $13ED (_ms_naviOnceCycle)
$0E3F: $9508:  F: RET (RET)
-----          L: 
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $0E4F ...
$0E40: $9100:     [$010A] -> r16
$0E41: $010A:  
$0E42: $3001:     r16 = $01
$0E43: $F059:     if (Z=1) then goto $E4F
               C: if (ms_posConditions < 7) then goto $0E4D ...
$0E44: $9100:     [$0759] -> r16
$0E45: $0759:  
$0E46: $3007:     r16 = $07
$0E47: $F428:     if ( >= ) then goto $E4D
               F: ms_posConditions++  ...
$0E48: $9100:     [$0759] -> r16
$0E49: $0759:  
$0E4A: $9503:     r16 ++
$0E4B: $9300:     r16 -> [$0759]
$0E4C: $0759:  
$0E4D: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$0E4E: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posConditions >= 1) then goto $0E58 ...
$0E4F: $9100:     [$0759] -> r16
$0E50: $0759:  
$0E51: $3001:     r16 = $01
$0E52: $F028:     if ( < ) then goto $E58
               F: ms_posConditions--  ...
$0E53: $9100:     [$0759] -> r16
$0E54: $0759:  
$0E55: $950A:     r16 --
$0E56: $9300:     r16 -> [$0759]
$0E57: $0759:  
$0E58: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$0E59: $9508:  F: RET (RET)
-----          V: _ms_visConditionsWork
-----          L: 
               C: if (ms_posConditionsClick.0=0) then goto $0E60 ...
$0E5A: $9100:     [$075C] -> r16
$0E5B: $075C:  
$0E5C: $FF00:     if (r16.0=1 then SKIP
$0E5D: $C002:     goto $E60 (RJMP)
$0E5E: $D00A:  F: rcall $E69 (_ms_visConditionsProgWork)
$0E5F: $C001:  J: goto $E61 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$0E60: $D02E:  F: rcall $E8F (_ms_visConditionsSourceWork)
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
$0E61: $9508:  F: RET (RET)
-----          V: _ms_clickConditionsWork
-----          L: 
-----          L: 
               F: ms_posConditionsClick ++  ...
$0E62: $9100:     [$075C] -> r16
$0E63: $075C:  
$0E64: $9503:     r16 ++
$0E65: $9300:     r16 -> [$075C]
$0E66: $075C:  
-----          L: 
$0E67: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$0E68: $9508:  F: RET (RET)
-----          V: _ms_visConditionsProgWork
-----          L: 
$0E69: $DA73:  F: rcall $8DD (_ms_printMessage)
-----          L: 
               C: if (ms_pauseOnceCycle=1) then goto $0E7B ...
$0E6A: $9100:     [$075D] -> r16
$0E6B: $075D:  
$0E6C: $3001:     r16 = $01
$0E6D: $F069:     if (Z=1) then goto $E7B
$0E6E: $D8E7:  F: rcall $756 (_print_string_)
$0E6F: $01 $43 $4F $4E $44 $49 $54 $49 $4F $4E $53 $20 $57 $6F $72 $6B
$0E77: $73 $20 $50 $2D $00 $00
$0E7A: $C00B:  J: goto $E86 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$0E7B: $D8DA:  F: rcall $756 (_print_string_)
$0E7C: $01 $43 $4F $4E $44 $49 $54 $49 $4F $4E $53 $20 $49 $64 $6C $65
$0E84: $20 $50 $2D $00
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
$0E86: $9100:  F: [$052E] -> r16 (ms_currentProg -> r16)
$0E87: $052E:  
$0E88: $5C0F:  F: r16 - $CF (r16 + "1")
$0E89: $940E:  F: CALL $38A (_ssd_Parse_r16)
$0E8A: $038A:  
$0E8B: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0E8C: $0355:  
-----          L: 
$0E8D: $D595:  F: rcall $1423 (_ms_visProgWorks)
$0E8E: $9508:  F: RET (RET)
-----          V: _ms_visConditionsSourceWork
-----          L: 
$0E8F: $DA4D:  F: rcall $8DD (_ms_printMessage)
-----          L: 
               C: if (ms_pauseOnceCycle=1) then goto $0EA1 ...
$0E90: $9100:     [$075D] -> r16
$0E91: $075D:  
$0E92: $3001:     r16 = $01
$0E93: $F069:     if (Z=1) then goto $EA1
$0E94: $D8C1:  F: rcall $756 (_print_string_)
$0E95: $01 $43 $4F $4E $44 $49 $54 $49 $4F $4E $53 $20 $57 $6F $72 $6B
$0E9D: $73 $20 $50 $2D $00 $00
$0EA0: $C00B:  J: goto $EAC (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$0EA1: $D8B4:  F: rcall $756 (_print_string_)
$0EA2: $01 $43 $4F $4E $44 $49 $54 $49 $4F $4E $53 $20 $49 $64 $6C $65
$0EAA: $20 $50 $2D $00
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
$0EAC: $9100:  F: [$052E] -> r16 (ms_currentProg -> r16)
$0EAD: $052E:  
$0EAE: $5C0F:  F: r16 - $CF (r16 + "1")
$0EAF: $940E:  F: CALL $38A (_ssd_Parse_r16)
$0EB0: $038A:  
$0EB1: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0EB2: $0355:  
-----          L: 
$0EB3: $9100:  F: [$0759] -> r16 (ms_posConditions -> r16)
$0EB4: $0759:  
$0EB5: $9503:  F: r16 ++ (r16++)
$0EB6: $9501:  F: - r16 (-r16)
$0EB7: $9300:  F: r16 -> [$0757] (r16 -> ms_posFrame)
$0EB8: $0757:  
-----          L: 
$0EB9: $DCF8:  F: rcall $BB2 (_ms_posFrameTest)
$0EBA: $F410:  C: if ( >= ) then goto $EBD (<)
$0EBB: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0EBC: $0355:  
$0EBD: $DCF4:  F: rcall $BB2 (_ms_posFrameTest)
$0EBE: $F410:  C: if ( >= ) then goto $EC1 (<)
$0EBF: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0EC0: $0355:  
-----          L: 
-----          L: 
$0EC1: $DCF0:  F: rcall $BB2 (_ms_posFrameTest)
$0EC2: $F4E0:  C: if ( >= ) then goto $EDF (>=)
$0EC3: $E200:  F: $20 -> r16 (" " -> r16)
$0EC4: $940E:  F: CALL $38A (_ssd_Parse_r16)
$0EC5: $038A:  
               F: ee_ms_sourceProg1 -> ms_sourceProg  ...
$0EC6: $E615:     $65 -> r17
$0EC7: $BD11:     r17 -> p$21
$0EC8: $E013:     $03 -> r17
$0EC9: $BD12:     r17 -> p$22
$0ECA: $9AF8:     1 -> p$1F.0
$0ECB: $B500:     p$20 -> r16
$0ECC: $9300:     r16 -> [$075E]
$0ECD: $075E:  
               F: ee_ms_sourceProg1_up -> ms_sourceProg_up  ...
$0ECE: $E616:     $66 -> r17
$0ECF: $BD11:     r17 -> p$21
$0ED0: $E013:     $03 -> r17
$0ED1: $BD12:     r17 -> p$22
$0ED2: $9AF8:     1 -> p$1F.0
$0ED3: $B500:     p$20 -> r16
$0ED4: $9300:     r16 -> [$075F]
$0ED5: $075F:  
               F: ee_ms_sourceProg1_down -> ms_sourceProg_down  ...
$0ED6: $E617:     $67 -> r17
$0ED7: $BD11:     r17 -> p$21
$0ED8: $E013:     $03 -> r17
$0ED9: $BD12:     r17 -> p$22
$0EDA: $9AF8:     1 -> p$1F.0
$0EDB: $B500:     p$20 -> r16
$0EDC: $9300:     r16 -> [$0760]
$0EDD: $0760:  
$0EDE: $D15D:  F: rcall $103C (_ms_visConditionsSourceWorkLine_)
-----          L: 
$0EDF: $DCD2:  F: rcall $BB2 (_ms_posFrameTest)
$0EE0: $F5C0:  C: if ( >= ) then goto $F19 (>=)
$0EE1: $E200:  F: $20 -> r16 (" " -> r16)
$0EE2: $940E:  F: CALL $38A (_ssd_Parse_r16)
$0EE3: $038A:  
               F: ee_ms_sourceProg1 -> ms_sourceProg  ...
$0EE4: $E615:     $65 -> r17
$0EE5: $BD11:     r17 -> p$21
$0EE6: $E013:     $03 -> r17
$0EE7: $BD12:     r17 -> p$22
$0EE8: $9AF8:     1 -> p$1F.0
$0EE9: $B500:     p$20 -> r16
$0EEA: $9300:     r16 -> [$075E]
$0EEB: $075E:  
               F: ee_ms_sourceProg1_up -> ms_sourceProg_up  ...
$0EEC: $E616:     $66 -> r17
$0EED: $BD11:     r17 -> p$21
$0EEE: $E013:     $03 -> r17
$0EEF: $BD12:     r17 -> p$22
$0EF0: $9AF8:     1 -> p$1F.0
$0EF1: $B500:     p$20 -> r16
$0EF2: $9300:     r16 -> [$075F]
$0EF3: $075F:  
               F: ee_ms_sourceProg1_down -> ms_sourceProg_down  ...
$0EF4: $E617:     $67 -> r17
$0EF5: $BD11:     r17 -> p$21
$0EF6: $E013:     $03 -> r17
$0EF7: $BD12:     r17 -> p$22
$0EF8: $9AF8:     1 -> p$1F.0
$0EF9: $B500:     p$20 -> r16
$0EFA: $9300:     r16 -> [$0760]
$0EFB: $0760:  
$0EFC: $D1AB:  F: rcall $10A8 (_ms_visConditionsTest_)
$0EFD: $930F:  F: r16 -> (r16 ->)
               C: if (r16 = TRUE) then goto $0F02 ...
$0EFE: $3001:     r16 = $01
$0EFF: $F411:     if (Z=0) then goto $F02
$0F00: $D855:  F: rcall $756 (_print_string_)
$0F01: $03 $00
$0F02: $910F:  F: -> r16 (-> r16)
               C: if (r16=FALSE) then goto $0F0B ...
$0F03: $3000:     r16 = $00
$0F04: $F031:     if (Z=1) then goto $F0B
$0F05: $D850:  F: rcall $756 (_print_string_)
$0F06: $2D $57 $6F $72 $6B $73 $20 $00
$0F0A: $C005:  J: goto $F10 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$0F0B: $D84A:  F: rcall $756 (_print_string_)
$0F0C: $2D $49 $64 $6C $65 $20 $00 $00
-----          L: 
$0F10: $D845:  F: rcall $756 (_print_string_)
$0F11: $50 $52 $4F $47 $52 $41 $4D $2D $31 $01 $00 $00
$0F17: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0F18: $0355:  
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
-----          L: 
$0F19: $DC98:  F: rcall $BB2 (_ms_posFrameTest)
$0F1A: $F410:  C: if ( >= ) then goto $F1D (<)
$0F1B: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0F1C: $0355:  
-----          L: 
$0F1D: $DC94:  F: rcall $BB2 (_ms_posFrameTest)
$0F1E: $F4E0:  C: if ( >= ) then goto $F3B (>=)
$0F1F: $E200:  F: $20 -> r16 (" " -> r16)
$0F20: $940E:  F: CALL $38A (_ssd_Parse_r16)
$0F21: $038A:  
               F: ee_ms_sourceProg2 -> ms_sourceProg  ...
$0F22: $E618:     $68 -> r17
$0F23: $BD11:     r17 -> p$21
$0F24: $E013:     $03 -> r17
$0F25: $BD12:     r17 -> p$22
$0F26: $9AF8:     1 -> p$1F.0
$0F27: $B500:     p$20 -> r16
$0F28: $9300:     r16 -> [$075E]
$0F29: $075E:  
               F: ee_ms_sourceProg2_up -> ms_sourceProg_up  ...
$0F2A: $E619:     $69 -> r17
$0F2B: $BD11:     r17 -> p$21
$0F2C: $E013:     $03 -> r17
$0F2D: $BD12:     r17 -> p$22
$0F2E: $9AF8:     1 -> p$1F.0
$0F2F: $B500:     p$20 -> r16
$0F30: $9300:     r16 -> [$075F]
$0F31: $075F:  
               F: ee_ms_sourceProg2_down -> ms_sourceProg_down  ...
$0F32: $E61A:     $6A -> r17
$0F33: $BD11:     r17 -> p$21
$0F34: $E013:     $03 -> r17
$0F35: $BD12:     r17 -> p$22
$0F36: $9AF8:     1 -> p$1F.0
$0F37: $B500:     p$20 -> r16
$0F38: $9300:     r16 -> [$0760]
$0F39: $0760:  
$0F3A: $D101:  F: rcall $103C (_ms_visConditionsSourceWorkLine_)
-----          L: 
$0F3B: $DC76:  F: rcall $BB2 (_ms_posFrameTest)
$0F3C: $F008:  C: if ( < ) then goto $F3E (>=)
$0F3D: $C058:  C: goto $F96 (RJMP) (>=)
$0F3E: $E200:  F: $20 -> r16 (" " -> r16)
$0F3F: $940E:  F: CALL $38A (_ssd_Parse_r16)
$0F40: $038A:  
-----          L: 
               F: ee_ms_sourceProg1 -> ms_sourceProg  ...
$0F41: $E615:     $65 -> r17
$0F42: $BD11:     r17 -> p$21
$0F43: $E013:     $03 -> r17
$0F44: $BD12:     r17 -> p$22
$0F45: $9AF8:     1 -> p$1F.0
$0F46: $B500:     p$20 -> r16
$0F47: $9300:     r16 -> [$075E]
$0F48: $075E:  
               F: ee_ms_sourceProg1_up -> ms_sourceProg_up  ...
$0F49: $E616:     $66 -> r17
$0F4A: $BD11:     r17 -> p$21
$0F4B: $E013:     $03 -> r17
$0F4C: $BD12:     r17 -> p$22
$0F4D: $9AF8:     1 -> p$1F.0
$0F4E: $B500:     p$20 -> r16
$0F4F: $9300:     r16 -> [$075F]
$0F50: $075F:  
               F: ee_ms_sourceProg1_down -> ms_sourceProg_down  ...
$0F51: $E617:     $67 -> r17
$0F52: $BD11:     r17 -> p$21
$0F53: $E013:     $03 -> r17
$0F54: $BD12:     r17 -> p$22
$0F55: $9AF8:     1 -> p$1F.0
$0F56: $B500:     p$20 -> r16
$0F57: $9300:     r16 -> [$0760]
$0F58: $0760:  
$0F59: $D14E:  F: rcall $10A8 (_ms_visConditionsTest_)
               C: if (r16 = TRUE) then goto $109C ...
$0F5A: $3001:     r16 = $01
$0F5B: $F409:     if (Z=0) then goto $F5D
$0F5C: $C13F:     goto $109C (RJMP)
-----          L: 
               F: ee_ms_sourceProg2 -> ms_sourceProg  ...
$0F5D: $E618:     $68 -> r17
$0F5E: $BD11:     r17 -> p$21
$0F5F: $E013:     $03 -> r17
$0F60: $BD12:     r17 -> p$22
$0F61: $9AF8:     1 -> p$1F.0
$0F62: $B500:     p$20 -> r16
$0F63: $9300:     r16 -> [$075E]
$0F64: $075E:  
               F: ee_ms_sourceProg2_up -> ms_sourceProg_up  ...
$0F65: $E619:     $69 -> r17
$0F66: $BD11:     r17 -> p$21
$0F67: $E013:     $03 -> r17
$0F68: $BD12:     r17 -> p$22
$0F69: $9AF8:     1 -> p$1F.0
$0F6A: $B500:     p$20 -> r16
$0F6B: $9300:     r16 -> [$075F]
$0F6C: $075F:  
               F: ee_ms_sourceProg2_down -> ms_sourceProg_down  ...
$0F6D: $E61A:     $6A -> r17
$0F6E: $BD11:     r17 -> p$21
$0F6F: $E013:     $03 -> r17
$0F70: $BD12:     r17 -> p$22
$0F71: $9AF8:     1 -> p$1F.0
$0F72: $B500:     p$20 -> r16
$0F73: $9300:     r16 -> [$0760]
$0F74: $0760:  
$0F75: $D132:  F: rcall $10A8 (_ms_visConditionsTest_)
$0F76: $930F:  F: r16 -> (r16 ->)
               C: if (r16 = TRUE) then goto $0F7C ...
$0F77: $3001:     r16 = $01
$0F78: $F419:     if (Z=0) then goto $F7C
$0F79: $940E:  F: CALL $756 (_print_string_)
$0F7A: $0756:  
$0F7B: $03 $00
$0F7C: $910F:  F: -> r16 (-> r16)
               C: if (r16=FALSE) then goto $0F86 ...
$0F7D: $3000:     r16 = $00
$0F7E: $F039:     if (Z=1) then goto $F86
$0F7F: $940E:  F: CALL $756 (_print_string_)
$0F80: $0756:  
$0F81: $2D $57 $6F $72 $6B $73 $20 $00
$0F85: $C006:  J: goto $F8C (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$0F86: $940E:  F: CALL $756 (_print_string_)
$0F87: $0756:  
$0F88: $2D $49 $64 $6C $65 $20 $00 $00
-----          L: 
$0F8C: $940E:  F: CALL $756 (_print_string_)
$0F8D: $0756:  
$0F8E: $50 $52 $4F $47 $52 $41 $4D $2D $32 $01 $00 $00
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
$0F94: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0F95: $0355:  
-----          L: 
-----          L: 
$0F96: $DC1B:  F: rcall $BB2 (_ms_posFrameTest)
$0F97: $F410:  C: if ( >= ) then goto $F9A (<)
$0F98: $940E:  F: CALL $355 (_ssd_clrRestLine)
$0F99: $0355:  
-----          L: 
$0F9A: $DC17:  F: rcall $BB2 (_ms_posFrameTest)
$0F9B: $F4E0:  C: if ( >= ) then goto $FB8 (>=)
$0F9C: $E200:  F: $20 -> r16 (" " -> r16)
$0F9D: $940E:  F: CALL $38A (_ssd_Parse_r16)
$0F9E: $038A:  
               F: ee_ms_sourceProg3 -> ms_sourceProg  ...
$0F9F: $E61B:     $6B -> r17
$0FA0: $BD11:     r17 -> p$21
$0FA1: $E013:     $03 -> r17
$0FA2: $BD12:     r17 -> p$22
$0FA3: $9AF8:     1 -> p$1F.0
$0FA4: $B500:     p$20 -> r16
$0FA5: $9300:     r16 -> [$075E]
$0FA6: $075E:  
               F: ee_ms_sourceProg3_up -> ms_sourceProg_up  ...
$0FA7: $E61C:     $6C -> r17
$0FA8: $BD11:     r17 -> p$21
$0FA9: $E013:     $03 -> r17
$0FAA: $BD12:     r17 -> p$22
$0FAB: $9AF8:     1 -> p$1F.0
$0FAC: $B500:     p$20 -> r16
$0FAD: $9300:     r16 -> [$075F]
$0FAE: $075F:  
               F: ee_ms_sourceProg3_down -> ms_sourceProg_down  ...
$0FAF: $E61D:     $6D -> r17
$0FB0: $BD11:     r17 -> p$21
$0FB1: $E013:     $03 -> r17
$0FB2: $BD12:     r17 -> p$22
$0FB3: $9AF8:     1 -> p$1F.0
$0FB4: $B500:     p$20 -> r16
$0FB5: $9300:     r16 -> [$0760]
$0FB6: $0760:  
$0FB7: $D084:  F: rcall $103C (_ms_visConditionsSourceWorkLine_)
-----          L: 
$0FB8: $DBF9:  F: rcall $BB2 (_ms_posFrameTest)
$0FB9: $F008:  C: if ( < ) then goto $FBB (>=)
$0FBA: $C074:  C: goto $102F (RJMP) (>=)
$0FBB: $E200:  F: $20 -> r16 (" " -> r16)
$0FBC: $940E:  F: CALL $38A (_ssd_Parse_r16)
$0FBD: $038A:  
-----          L: 
               F: ee_ms_sourceProg1 -> ms_sourceProg  ...
$0FBE: $E615:     $65 -> r17
$0FBF: $BD11:     r17 -> p$21
$0FC0: $E013:     $03 -> r17
$0FC1: $BD12:     r17 -> p$22
$0FC2: $9AF8:     1 -> p$1F.0
$0FC3: $B500:     p$20 -> r16
$0FC4: $9300:     r16 -> [$075E]
$0FC5: $075E:  
               F: ee_ms_sourceProg1_up -> ms_sourceProg_up  ...
$0FC6: $E616:     $66 -> r17
$0FC7: $BD11:     r17 -> p$21
$0FC8: $E013:     $03 -> r17
$0FC9: $BD12:     r17 -> p$22
$0FCA: $9AF8:     1 -> p$1F.0
$0FCB: $B500:     p$20 -> r16
$0FCC: $9300:     r16 -> [$075F]
$0FCD: $075F:  
               F: ee_ms_sourceProg1_down -> ms_sourceProg_down  ...
$0FCE: $E617:     $67 -> r17
$0FCF: $BD11:     r17 -> p$21
$0FD0: $E013:     $03 -> r17
$0FD1: $BD12:     r17 -> p$22
$0FD2: $9AF8:     1 -> p$1F.0
$0FD3: $B500:     p$20 -> r16
$0FD4: $9300:     r16 -> [$0760]
$0FD5: $0760:  
$0FD6: $D0D1:  F: rcall $10A8 (_ms_visConditionsTest_)
               C: if (r16 = TRUE) then goto $10CF ...
$0FD7: $3001:     r16 = $01
$0FD8: $F409:     if (Z=0) then goto $FDA
$0FD9: $C0F5:     goto $10CF (RJMP)
               F: ee_ms_sourceProg2 -> ms_sourceProg  ...
$0FDA: $E618:     $68 -> r17
$0FDB: $BD11:     r17 -> p$21
$0FDC: $E013:     $03 -> r17
$0FDD: $BD12:     r17 -> p$22
$0FDE: $9AF8:     1 -> p$1F.0
$0FDF: $B500:     p$20 -> r16
$0FE0: $9300:     r16 -> [$075E]
$0FE1: $075E:  
               F: ee_ms_sourceProg2_up -> ms_sourceProg_up  ...
$0FE2: $E619:     $69 -> r17
$0FE3: $BD11:     r17 -> p$21
$0FE4: $E013:     $03 -> r17
$0FE5: $BD12:     r17 -> p$22
$0FE6: $9AF8:     1 -> p$1F.0
$0FE7: $B500:     p$20 -> r16
$0FE8: $9300:     r16 -> [$075F]
$0FE9: $075F:  
               F: ee_ms_sourceProg2_down -> ms_sourceProg_down  ...
$0FEA: $E61A:     $6A -> r17
$0FEB: $BD11:     r17 -> p$21
$0FEC: $E013:     $03 -> r17
$0FED: $BD12:     r17 -> p$22
$0FEE: $9AF8:     1 -> p$1F.0
$0FEF: $B500:     p$20 -> r16
$0FF0: $9300:     r16 -> [$0760]
$0FF1: $0760:  
$0FF2: $D0B5:  F: rcall $10A8 (_ms_visConditionsTest_)
               C: if (r16 = TRUE) then goto $10CF ...
$0FF3: $3001:     r16 = $01
$0FF4: $F409:     if (Z=0) then goto $FF6
$0FF5: $C0D9:     goto $10CF (RJMP)
-----          L: 
               F: ee_ms_sourceProg3 -> ms_sourceProg  ...
$0FF6: $E61B:     $6B -> r17
$0FF7: $BD11:     r17 -> p$21
$0FF8: $E013:     $03 -> r17
$0FF9: $BD12:     r17 -> p$22
$0FFA: $9AF8:     1 -> p$1F.0
$0FFB: $B500:     p$20 -> r16
$0FFC: $9300:     r16 -> [$075E]
$0FFD: $075E:  
               F: ee_ms_sourceProg3_up -> ms_sourceProg_up  ...
$0FFE: $E61C:     $6C -> r17
$0FFF: $BD11:     r17 -> p$21
$1000: $E013:     $03 -> r17
$1001: $BD12:     r17 -> p$22
$1002: $9AF8:     1 -> p$1F.0
$1003: $B500:     p$20 -> r16
$1004: $9300:     r16 -> [$075F]
$1005: $075F:  
               F: ee_ms_sourceProg3_down -> ms_sourceProg_down  ...
$1006: $E61D:     $6D -> r17
$1007: $BD11:     r17 -> p$21
$1008: $E013:     $03 -> r17
$1009: $BD12:     r17 -> p$22
$100A: $9AF8:     1 -> p$1F.0
$100B: $B500:     p$20 -> r16
$100C: $9300:     r16 -> [$0760]
$100D: $0760:  
$100E: $D099:  F: rcall $10A8 (_ms_visConditionsTest_)
$100F: $930F:  F: r16 -> (r16 ->)
               C: if (r16 = TRUE) then goto $1015 ...
$1010: $3001:     r16 = $01
$1011: $F419:     if (Z=0) then goto $1015
$1012: $940E:  F: CALL $756 (_print_string_)
$1013: $0756:  
$1014: $03 $00
$1015: $910F:  F: -> r16 (-> r16)
               C: if (r16=FALSE) then goto $101F ...
$1016: $3000:     r16 = $00
$1017: $F039:     if (Z=1) then goto $101F
$1018: $940E:  F: CALL $756 (_print_string_)
$1019: $0756:  
$101A: $2D $57 $6F $72 $6B $73 $20 $00
$101E: $C006:  J: goto $1025 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$101F: $940E:  F: CALL $756 (_print_string_)
$1020: $0756:  
$1021: $2D $49 $64 $6C $65 $20 $00 $00
-----          L: 
$1025: $940E:  F: CALL $756 (_print_string_)
$1026: $0756:  
$1027: $50 $52 $4F $47 $52 $41 $4D $2D $33 $01 $00 $00
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
$102D: $940E:  F: CALL $355 (_ssd_clrRestLine)
$102E: $0355:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$102F: $DB82:  F: rcall $BB2 (_ms_posFrameTest)
$1030: $F410:  C: if ( >= ) then goto $1033 (<)
$1031: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1032: $0355:  
$1033: $DB7E:  F: rcall $BB2 (_ms_posFrameTest)
$1034: $F410:  C: if ( >= ) then goto $1037 (<)
$1035: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1036: $0355:  
$1037: $DB7A:  F: rcall $BB2 (_ms_posFrameTest)
$1038: $F410:  C: if ( >= ) then goto $103B (<)
$1039: $940E:  F: CALL $355 (_ssd_clrRestLine)
$103A: $0355:  
-----          L: 
$103B: $9508:  F: RET (RET)
-----          V: _ms_visConditionsSourceWorkLine_
-----          L: 
               C: if (ms_sourceProg -= 0) then goto $1049 ...
$103C: $9100:     [$075E] -> r16
$103D: $075E:  
$103E: $3000:     r16 = $00
$103F: $F449:     if (Z=0) then goto $1049
$1040: $940E:  F: CALL $756 (_print_string_)
$1041: $0756:  
$1042: $41 $6C $77 $61 $79 $73 $01 $00
$1046: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1047: $0355:  
$1048: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_sourceProg < SOURCENUMB+1) then goto $1056 ...
$1049: $9100:     [$075E] -> r16
$104A: $075E:  
$104B: $3003:     r16 = $03
$104C: $F048:     if ( < ) then goto $1056
$104D: $940E:  F: CALL $756 (_print_string_)
$104E: $0756:  
$104F: $4E $65 $76 $65 $72 $01 $00 $00
$1053: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1054: $0355:  
$1055: $9508:  F: RET (RET)
-----          L: 
-----          L: 
$1056: $940E:  F: CALL $756 (_print_string_)
$1057: $0756:  
$1058: $49 $6E $2D $00
-----          L: 
$105A: $9100:  F: [$075E] -> r16 (ms_sourceProg -> r16)
$105B: $075E:  
$105C: $5D00:  F: r16 - $D0 (r16 + "0")
$105D: $940E:  F: CALL $38A (_ssd_Parse_r16)
$105E: $038A:  
$105F: $940E:  F: CALL $756 (_print_string_)
$1060: $0756:  
$1061: $01 $20 $3D $20 $00 $00
-----          L: 
               F: Z ->  ...
$1064: $93EF:     r30 ->
$1065: $93FF:     r31 ->
               F: @ADC_Level -> Z  ...
$1066: $E6E2:     $62 -> r30
$1067: $E0F7:     $07 -> r31
$1068: $9100:  F: [$075E] -> r16 (ms_sourceProg -> r16)
$1069: $075E:  
$106A: $950A:  F: r16 -- (r16--)
               F: Z + r16  ...
$106B: $0FE0:     r30 + r16
$106C: $E010:     $00 -> r17
$106D: $1FF1:     r31 + r17 +
               F: Z ->  ...
$106E: $93EF:     r30 ->
$106F: $93FF:     r31 ->
               F: [Z] -> Z  ...
$1070: $81E0:     [Z+$00] -> r30
$1071: $E0F0:     $00 -> r31
$1072: $940E:  F: CALL $774 (_print_DECV2_)
$1073: $0774:  
               F: -> Z  ...
$1074: $91FF:     -> r31
$1075: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          L: 
               F: -> Z  ...
$1076: $91FF:     -> r31
$1077: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
$1078: $940E:  F: CALL $756 (_print_string_)
$1079: $0756:  
$107A: $01 $20 $28 $00
               F: Z ->  ...
$107C: $93EF:     r30 ->
$107D: $93FF:     r31 ->
               F: ms_sourceProg_down -> Z  ...
$107E: $91E0:     [$0760] -> r30
$107F: $0760:  
$1080: $E0F0:     $00 -> r31
$1081: $940E:  F: CALL $774 (_print_DECV2_)
$1082: $0774:  
               F: -> Z  ...
$1083: $91FF:     -> r31
$1084: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          L: 
$1085: $940E:  F: CALL $756 (_print_string_)
$1086: $0756:  
$1087: $01 $2D $00 $00
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
               F: Z ->  ...
$1089: $93EF:     r30 ->
$108A: $93FF:     r31 ->
               F: ms_sourceProg_up -> Z  ...
$108B: $91E0:     [$075F] -> r30
$108C: $075F:  
$108D: $E0F0:     $00 -> r31
$108E: $940E:  F: CALL $774 (_print_DECV2_)
$108F: $0774:  
               F: -> Z  ...
$1090: $91FF:     -> r31
$1091: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          L: 
$1092: $940E:  F: CALL $756 (_print_string_)
$1093: $0756:  
$1094: $01 $00
$1095: $940E:  F: CALL $756 (_print_string_)
$1096: $0756:  
$1097: $01 $29 $00 $00
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
$1099: $940E:  F: CALL $355 (_ssd_clrRestLine)
$109A: $0355:  
$109B: $9508:  F: RET (RET)
-----          V: 
$109C: $940E:  F: CALL $756 (_print_string_)
$109D: $0756:  
$109E: $01 $2D $49 $64 $6C $65 $20 $50 $52 $4F $47 $52 $41 $4D $2D $32
$10A6: $00 $00
$10A7: $CEEC:  J: goto $F94 (RJMP)
-----          V: _ms_visConditionsTest_
-----          L: 
               C: if (ms_sourceProg = 0) then goto $10CD ...
$10A8: $9100:     [$075E] -> r16
$10A9: $075E:  
$10AA: $3000:     r16 = $00
$10AB: $F109:     if (Z=1) then goto $10CD
               C: if (ms_sourceProg >= SOURCENUMB+1) then goto $10CB ...
$10AC: $9100:     [$075E] -> r16
$10AD: $075E:  
$10AE: $3003:     r16 = $03
$10AF: $F4D8:     if ( >= ) then goto $10CB
-----          L: 
               F: Z ->  ...
$10B0: $93EF:     r30 ->
$10B1: $93FF:     r31 ->
               F: @ADC_Level -> Z  ...
$10B2: $E6E2:     $62 -> r30
$10B3: $E0F7:     $07 -> r31
$10B4: $9100:  F: [$075E] -> r16 (ms_sourceProg -> r16)
$10B5: $075E:  
$10B6: $5F0B:  F: r16 - $FB (r16 + SOURCESTART-1)
               F: Z + r16  ...
$10B7: $0FE0:     r30 + r16
$10B8: $E010:     $00 -> r17
$10B9: $1FF1:     r31 + r17 +
$10BA: $8110:  F: [Z] -> r17 ([Z] -> r17)
               F: -> Z  ...
$10BB: $91FF:     -> r31
$10BC: $91EF:     -> r30
-----          L: 
               C: if (ms_sourceProg_down = r17) then goto $10CD ...
$10BD: $9100:     [$0760] -> r16
$10BE: $0760:  
$10BF: $1701:     r16 = r17
$10C0: $F061:     if (Z=1) then goto $10CD
               C: if (ms_sourceProg_down >= r17) then goto $10CB ...
$10C1: $9100:     [$0760] -> r16
$10C2: $0760:  
$10C3: $1701:     r16 = r17
$10C4: $F430:     if ( >= ) then goto $10CB
               C: if (ms_sourceProg_up < r17) then goto $10CB ...
$10C5: $9100:     [$075F] -> r16
$10C6: $075F:  
$10C7: $1701:     r16 = r17
$10C8: $F010:     if ( < ) then goto $10CB
-----          L: 
$10C9: $E001:  F: $01 -> r16 (TRUE -> r16)
$10CA: $9508:  F: RET (RET)
-----          V: 
$10CB: $E000:  F: $00 -> r16 (FALSE -> r16)
$10CC: $9508:  F: RET (RET)
-----          V: 
$10CD: $E001:  F: $01 -> r16 (TRUE -> r16)
$10CE: $9508:  F: RET (RET)
-----          V: 
$10CF: $940E:  F: CALL $756 (_print_string_)
$10D0: $0756:  
$10D1: $01 $2D $49 $64 $6C $65 $20 $50 $52 $4F $47 $52 $41 $4D $2D $33
$10D9: $00 $00
$10DA: $CF52:  J: goto $102D (RJMP)
-----          V: _ms_naviConditionsEdit
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $10EA ...
$10DB: $9100:     [$010A] -> r16
$10DC: $010A:  
$10DD: $3001:     r16 = $01
$10DE: $F059:     if (Z=1) then goto $10EA
               C: if (ms_posConditions < 7) then goto $10E8 ...
$10DF: $9100:     [$0759] -> r16
$10E0: $0759:  
$10E1: $3007:     r16 = $07
$10E2: $F428:     if ( >= ) then goto $10E8
               F: ms_posConditions++  ...
$10E3: $9100:     [$0759] -> r16
$10E4: $0759:  
$10E5: $9503:     r16 ++
$10E6: $9300:     r16 -> [$0759]
$10E7: $0759:  
$10E8: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$10E9: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posConditions >= 1) then goto $10F3 ...
$10EA: $9100:     [$0759] -> r16
$10EB: $0759:  
$10EC: $3001:     r16 = $01
$10ED: $F028:     if ( < ) then goto $10F3
               F: ms_posConditions--  ...
$10EE: $9100:     [$0759] -> r16
$10EF: $0759:  
$10F0: $950A:     r16 --
$10F1: $9300:     r16 -> [$0759]
$10F2: $0759:  
$10F3: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$10F4: $9508:  F: RET (RET)
-----          V: _ms_visConditionsEdit
-----          L: 
$10F5: $940E:  F: CALL $8DD (_ms_printMessage)
$10F6: $08DD:  
-----          L: 
$10F7: $940E:  F: CALL $756 (_print_string_)
$10F8: $0756:  
$10F9: $45 $44 $49 $54 $20 $43 $4F $4E $44 $49 $54 $49 $4F $4E $53 $01
$1101: $00 $00
$1102: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1103: $0355:  
-----          L: 
$1104: $9100:  F: [$0759] -> r16 (ms_posConditions -> r16)
$1105: $0759:  
$1106: $9503:  F: r16 ++ (r16++)
$1107: $9501:  F: - r16 (-r16)
$1108: $9300:  F: r16 -> [$0757] (r16 -> ms_posFrame)
$1109: $0757:  
-----          L: 
$110A: $DAA7:  F: rcall $BB2 (_ms_posFrameTest)
$110B: $F410:  C: if ( >= ) then goto $110E (<)
$110C: $940E:  F: CALL $355 (_ssd_clrRestLine)
$110D: $0355:  
$110E: $DAA3:  F: rcall $BB2 (_ms_posFrameTest)
$110F: $F410:  C: if ( >= ) then goto $1112 (<)
$1110: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1111: $0355:  
-----          L: 
-----          L: 
$1112: $DA9F:  F: rcall $BB2 (_ms_posFrameTest)
$1113: $F4F8:  C: if ( >= ) then goto $1133 (>=)
$1114: $2F01:  F: r17 -> r16 (r17 -> r16)
$1115: $940E:  F: CALL $38A (_ssd_Parse_r16)
$1116: $038A:  
               F: ee_ms_sourceProg1 -> ms_sourceProg  ...
$1117: $E615:     $65 -> r17
$1118: $BD11:     r17 -> p$21
$1119: $E013:     $03 -> r17
$111A: $BD12:     r17 -> p$22
$111B: $9AF8:     1 -> p$1F.0
$111C: $B500:     p$20 -> r16
$111D: $9300:     r16 -> [$075E]
$111E: $075E:  
               F: ee_ms_sourceProg1_up -> ms_sourceProg_up  ...
$111F: $E616:     $66 -> r17
$1120: $BD11:     r17 -> p$21
$1121: $E013:     $03 -> r17
$1122: $BD12:     r17 -> p$22
$1123: $9AF8:     1 -> p$1F.0
$1124: $B500:     p$20 -> r16
$1125: $9300:     r16 -> [$075F]
$1126: $075F:  
               F: ee_ms_sourceProg1_down -> ms_sourceProg_down  ...
$1127: $E617:     $67 -> r17
$1128: $BD11:     r17 -> p$21
$1129: $E013:     $03 -> r17
$112A: $BD12:     r17 -> p$22
$112B: $9AF8:     1 -> p$1F.0
$112C: $B500:     p$20 -> r16
$112D: $9300:     r16 -> [$0760]
$112E: $0760:  
-----          L: 
               F: 255 -> ms_posConditionsIF  ...
$112F: $EF0F:     $FF -> r16
$1130: $9300:     r16 -> [$075A]
$1131: $075A:  
$1132: $D09F:  F: rcall $11D2 (_ms_visConditionsLine_)
-----          L: 
$1133: $DA7E:  F: rcall $BB2 (_ms_posFrameTest)
$1134: $F478:  C: if ( >= ) then goto $1144 (>=)
$1135: $E200:  F: $20 -> r16 (" " -> r16)
$1136: $940E:  F: CALL $38A (_ssd_Parse_r16)
$1137: $038A:  
$1138: $940E:  F: CALL $756 (_print_string_)
$1139: $0756:  
$113A: $52 $75 $6E $20 $50 $52 $4F $47 $52 $41 $4D $2D $31 $01 $00 $00
$1142: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1143: $0355:  
-----          L: 
-----          L: 
$1144: $DA6D:  F: rcall $BB2 (_ms_posFrameTest)
$1145: $F410:  C: if ( >= ) then goto $1148 (<)
$1146: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1147: $0355:  
-----          L: 
$1148: $DA69:  F: rcall $BB2 (_ms_posFrameTest)
$1149: $F4F8:  C: if ( >= ) then goto $1169 (>=)
$114A: $2F01:  F: r17 -> r16 (r17 -> r16)
$114B: $940E:  F: CALL $38A (_ssd_Parse_r16)
$114C: $038A:  
               F: ee_ms_sourceProg2 -> ms_sourceProg  ...
$114D: $E618:     $68 -> r17
$114E: $BD11:     r17 -> p$21
$114F: $E013:     $03 -> r17
$1150: $BD12:     r17 -> p$22
$1151: $9AF8:     1 -> p$1F.0
$1152: $B500:     p$20 -> r16
$1153: $9300:     r16 -> [$075E]
$1154: $075E:  
               F: ee_ms_sourceProg2_up -> ms_sourceProg_up  ...
$1155: $E619:     $69 -> r17
$1156: $BD11:     r17 -> p$21
$1157: $E013:     $03 -> r17
$1158: $BD12:     r17 -> p$22
$1159: $9AF8:     1 -> p$1F.0
$115A: $B500:     p$20 -> r16
$115B: $9300:     r16 -> [$075F]
$115C: $075F:  
               F: ee_ms_sourceProg2_down -> ms_sourceProg_down  ...
$115D: $E61A:     $6A -> r17
$115E: $BD11:     r17 -> p$21
$115F: $E013:     $03 -> r17
$1160: $BD12:     r17 -> p$22
$1161: $9AF8:     1 -> p$1F.0
$1162: $B500:     p$20 -> r16
$1163: $9300:     r16 -> [$0760]
$1164: $0760:  
-----          L: 
               F: 255 -> ms_posConditionsIF  ...
$1165: $EF0F:     $FF -> r16
$1166: $9300:     r16 -> [$075A]
$1167: $075A:  
$1168: $D069:  F: rcall $11D2 (_ms_visConditionsLine_)
-----          L: 
$1169: $DA48:  F: rcall $BB2 (_ms_posFrameTest)
$116A: $F478:  C: if ( >= ) then goto $117A (>=)
$116B: $E200:  F: $20 -> r16 (" " -> r16)
$116C: $940E:  F: CALL $38A (_ssd_Parse_r16)
$116D: $038A:  
$116E: $940E:  F: CALL $756 (_print_string_)
$116F: $0756:  
$1170: $52 $75 $6E $20 $50 $52 $4F $47 $52 $41 $4D $2D $32 $01 $00 $00
$1178: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1179: $0355:  
-----          L: 
-----          L: 
$117A: $DA37:  F: rcall $BB2 (_ms_posFrameTest)
$117B: $F410:  C: if ( >= ) then goto $117E (<)
$117C: $940E:  F: CALL $355 (_ssd_clrRestLine)
$117D: $0355:  
-----          L: 
$117E: $DA33:  F: rcall $BB2 (_ms_posFrameTest)
$117F: $F4F8:  C: if ( >= ) then goto $119F (>=)
$1180: $2F01:  F: r17 -> r16 (r17 -> r16)
$1181: $940E:  F: CALL $38A (_ssd_Parse_r16)
$1182: $038A:  
               F: ee_ms_sourceProg3 -> ms_sourceProg  ...
$1183: $E61B:     $6B -> r17
$1184: $BD11:     r17 -> p$21
$1185: $E013:     $03 -> r17
$1186: $BD12:     r17 -> p$22
$1187: $9AF8:     1 -> p$1F.0
$1188: $B500:     p$20 -> r16
$1189: $9300:     r16 -> [$075E]
$118A: $075E:  
               F: ee_ms_sourceProg3_up -> ms_sourceProg_up  ...
$118B: $E61C:     $6C -> r17
$118C: $BD11:     r17 -> p$21
$118D: $E013:     $03 -> r17
$118E: $BD12:     r17 -> p$22
$118F: $9AF8:     1 -> p$1F.0
$1190: $B500:     p$20 -> r16
$1191: $9300:     r16 -> [$075F]
$1192: $075F:  
               F: ee_ms_sourceProg3_down -> ms_sourceProg_down  ...
$1193: $E61D:     $6D -> r17
$1194: $BD11:     r17 -> p$21
$1195: $E013:     $03 -> r17
$1196: $BD12:     r17 -> p$22
$1197: $9AF8:     1 -> p$1F.0
$1198: $B500:     p$20 -> r16
$1199: $9300:     r16 -> [$0760]
$119A: $0760:  
-----          L: 
               F: 255 -> ms_posConditionsIF  ...
$119B: $EF0F:     $FF -> r16
$119C: $9300:     r16 -> [$075A]
$119D: $075A:  
$119E: $D033:  F: rcall $11D2 (_ms_visConditionsLine_)
-----          L: 
$119F: $DA12:  F: rcall $BB2 (_ms_posFrameTest)
$11A0: $F478:  C: if ( >= ) then goto $11B0 (>=)
$11A1: $E200:  F: $20 -> r16 (" " -> r16)
$11A2: $940E:  F: CALL $38A (_ssd_Parse_r16)
$11A3: $038A:  
$11A4: $940E:  F: CALL $756 (_print_string_)
$11A5: $0756:  
$11A6: $52 $75 $6E $20 $50 $52 $4F $47 $52 $41 $4D $2D $33 $01 $00 $00
$11AE: $940E:  F: CALL $355 (_ssd_clrRestLine)
$11AF: $0355:  
-----          L: 
-----          L: 
$11B0: $DA01:  F: rcall $BB2 (_ms_posFrameTest)
$11B1: $F410:  C: if ( >= ) then goto $11B4 (<)
$11B2: $940E:  F: CALL $355 (_ssd_clrRestLine)
$11B3: $0355:  
$11B4: $D9FD:  F: rcall $BB2 (_ms_posFrameTest)
$11B5: $F410:  C: if ( >= ) then goto $11B8 (<)
$11B6: $940E:  F: CALL $355 (_ssd_clrRestLine)
$11B7: $0355:  
$11B8: $D9F9:  F: rcall $BB2 (_ms_posFrameTest)
$11B9: $F410:  C: if ( >= ) then goto $11BC (<)
$11BA: $940E:  F: CALL $355 (_ssd_clrRestLine)
$11BB: $0355:  
-----          L: 
$11BC: $9508:  F: RET (RET)
-----          V: _ms_clickConditionsEdit
-----          L: 
               C: if (ms_posConditions = 0) then goto $11C9 ...
$11BD: $9100:     [$0759] -> r16
$11BE: $0759:  
$11BF: $3000:     r16 = $00
$11C0: $F041:     if (Z=1) then goto $11C9
               C: if (ms_posConditions = 3) then goto $11C9 ...
$11C1: $9100:     [$0759] -> r16
$11C2: $0759:  
$11C3: $3003:     r16 = $03
$11C4: $F021:     if (Z=1) then goto $11C9
               C: if (ms_posConditions -= 6) then goto $11D1 ...
$11C5: $9100:     [$0759] -> r16
$11C6: $0759:  
$11C7: $3006:     r16 = $06
$11C8: $F441:     if (Z=0) then goto $11D1
-----          L: 
$11C9: $D1AA:  F: rcall $1374 (_ms_eeLoadConditionsEditIF)
               F: 0 -> ms_posConditionsIF  ...
$11CA: $E000:     $00 -> r16
$11CB: $9300:     r16 -> [$075A]
$11CC: $075A:  
               F: MS_MODE_CONDITIONS_EDIT_IF -> ms_mode  ...
$11CD: $E00B:     $0B -> r16
$11CE: $9300:     r16 -> [$0530]
$11CF: $0530:  
$11D0: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$11D1: $9508:  F: RET (RET)
-----          V: _ms_visConditionsLine_
-----          L: 
               C: if (ms_blink -= 0) then goto $11DD ...
$11D2: $9100:     [$0532] -> r16
$11D3: $0532:  
$11D4: $3000:     r16 = $00
$11D5: $F439:     if (Z=0) then goto $11DD
               C: if (ms_posConditionsIF = 0) then goto $11DD ...
$11D6: $9100:     [$075A] -> r16
$11D7: $075A:  
$11D8: $3000:     r16 = $00
$11D9: $F419:     if (Z=0) then goto $11DD
$11DA: $940E:  F: CALL $756 (_print_string_)
$11DB: $0756:  
$11DC: $03 $00
-----          L: 
               C: if (ms_sourceProg -= 0) then goto $11EA ...
$11DD: $9100:     [$075E] -> r16
$11DE: $075E:  
$11DF: $3000:     r16 = $00
$11E0: $F449:     if (Z=0) then goto $11EA
$11E1: $940E:  F: CALL $756 (_print_string_)
$11E2: $0756:  
$11E3: $41 $6C $77 $61 $79 $73 $01 $00
$11E7: $940E:  F: CALL $355 (_ssd_clrRestLine)
$11E8: $0355:  
$11E9: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_sourceProg < SOURCENUMB+1) then goto $11F7 ...
$11EA: $9100:     [$075E] -> r16
$11EB: $075E:  
$11EC: $3003:     r16 = $03
$11ED: $F048:     if ( < ) then goto $11F7
$11EE: $940E:  F: CALL $756 (_print_string_)
$11EF: $0756:  
$11F0: $4E $65 $76 $65 $72 $01 $00 $00
$11F4: $940E:  F: CALL $355 (_ssd_clrRestLine)
$11F5: $0355:  
$11F6: $9508:  F: RET (RET)
-----          L: 
-----          L: 
$11F7: $940E:  F: CALL $756 (_print_string_)
$11F8: $0756:  
$11F9: $01 $49 $46 $20 $00 $00
               C: if (ms_blink -= 0) then goto $1207 ...
$11FC: $9100:     [$0532] -> r16
$11FD: $0532:  
$11FE: $3000:     r16 = $00
$11FF: $F439:     if (Z=0) then goto $1207
               C: if (ms_posConditionsIF = 0) then goto $1207 ...
$1200: $9100:     [$075A] -> r16
$1201: $075A:  
$1202: $3000:     r16 = $00
$1203: $F419:     if (Z=0) then goto $1207
$1204: $940E:  F: CALL $756 (_print_string_)
$1205: $0756:  
$1206: $03 $00
-----          L: 
$1207: $940E:  F: CALL $756 (_print_string_)
$1208: $0756:  
$1209: $49 $6E $2D $00
-----          L: 
$120B: $9100:  F: [$075E] -> r16 (ms_sourceProg -> r16)
$120C: $075E:  
$120D: $5D00:  F: r16 - $D0 (r16 + "0")
$120E: $940E:  F: CALL $38A (_ssd_Parse_r16)
$120F: $038A:  
$1210: $940E:  F: CALL $756 (_print_string_)
$1211: $0756:  
$1212: $01 $20 $3D $20 $00 $00
-----          L: 
               C: if (ms_blink -= 0) then goto $1220 ...
$1215: $9100:     [$0532] -> r16
$1216: $0532:  
$1217: $3000:     r16 = $00
$1218: $F439:     if (Z=0) then goto $1220
               C: if (ms_posConditionsIF = 1) then goto $1220 ...
$1219: $9100:     [$075A] -> r16
$121A: $075A:  
$121B: $3001:     r16 = $01
$121C: $F419:     if (Z=0) then goto $1220
$121D: $940E:  F: CALL $756 (_print_string_)
$121E: $0756:  
$121F: $03 $00
-----          L: 
               F: Z ->  ...
$1220: $93EF:     r30 ->
$1221: $93FF:     r31 ->
               F: ms_sourceProg_down -> Z  ...
$1222: $91E0:     [$0760] -> r30
$1223: $0760:  
$1224: $E0F0:     $00 -> r31
$1225: $940E:  F: CALL $774 (_print_DECV2_)
$1226: $0774:  
               F: -> Z  ...
$1227: $91FF:     -> r31
$1228: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          L: 
$1229: $940E:  F: CALL $756 (_print_string_)
$122A: $0756:  
$122B: $01 $2D $00 $00
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
               C: if (ms_blink -= 0) then goto $1238 ...
$122D: $9100:     [$0532] -> r16
$122E: $0532:  
$122F: $3000:     r16 = $00
$1230: $F439:     if (Z=0) then goto $1238
               C: if (ms_posConditionsIF = 2) then goto $1238 ...
$1231: $9100:     [$075A] -> r16
$1232: $075A:  
$1233: $3002:     r16 = $02
$1234: $F419:     if (Z=0) then goto $1238
$1235: $940E:  F: CALL $756 (_print_string_)
$1236: $0756:  
$1237: $03 $00
-----          L: 
               F: Z ->  ...
$1238: $93EF:     r30 ->
$1239: $93FF:     r31 ->
               F: ms_sourceProg_up -> Z  ...
$123A: $91E0:     [$075F] -> r30
$123B: $075F:  
$123C: $E0F0:     $00 -> r31
$123D: $940E:  F: CALL $774 (_print_DECV2_)
$123E: $0774:  
               F: -> Z  ...
$123F: $91FF:     -> r31
$1240: $91EF:     -> r30
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Print.alg    ***********
-----          L: 
$1241: $940E:  F: CALL $756 (_print_string_)
$1242: $0756:  
$1243: $01 $00
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
$1244: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1245: $0355:  
$1246: $9508:  F: RET (RET)
-----          V: _ms_naviConditionsEditIF
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $1287 ...
$1247: $9100:     [$010A] -> r16
$1248: $010A:  
$1249: $3001:     r16 = $01
$124A: $F1E1:     if (Z=1) then goto $1287
-----          L: 
               C: if (ms_posConditionsIF -= 0) then goto $125B ...
$124B: $9100:     [$075A] -> r16
$124C: $075A:  
$124D: $3000:     r16 = $00
$124E: $F461:     if (Z=0) then goto $125B
               F: ms_sourceProg++  ...
$124F: $9100:     [$075E] -> r16
$1250: $075E:  
$1251: $9503:     r16 ++
$1252: $9300:     r16 -> [$075E]
$1253: $075E:  
               C: if (ms_sourceProg >= SOURCENUMB+1) then goto $125B ...
$1254: $9100:     [$075E] -> r16
$1255: $075E:  
$1256: $3003:     r16 = $03
$1257: $F018:     if ( < ) then goto $125B
               F: SOURCENUMB+1 -> ms_sourceProg  ...
$1258: $E003:     $03 -> r16
$1259: $9300:     r16 -> [$075E]
$125A: $075E:  
-----          L: 
               C: if (ms_posConditionsIF -= 1) then goto $1275 ...
$125B: $9100:     [$075A] -> r16
$125C: $075A:  
$125D: $3001:     r16 = $01
$125E: $F4B1:     if (Z=0) then goto $1275
               F: ms_sourceProg_down++  ...
$125F: $9100:     [$0760] -> r16
$1260: $0760:  
$1261: $9503:     r16 ++
$1262: $9300:     r16 -> [$0760]
$1263: $0760:  
               C: if (ms_sourceProg_down >= ADC_MAX) then goto $126B ...
$1264: $9100:     [$0760] -> r16
$1265: $0760:  
$1266: $3302:     r16 = $32
$1267: $F018:     if ( < ) then goto $126B
               F: ADC_MAX -> ms_sourceProg_down  ...
$1268: $E302:     $32 -> r16
$1269: $9300:     r16 -> [$0760]
$126A: $0760:  
               C: if (ms_sourceProg_down > ms_sourceProg_up) then goto $1275 ...
$126B: $9100:     [$075F] -> r16
$126C: $075F:  
$126D: $9110:     [$0760] -> r17
$126E: $0760:  
$126F: $1701:     r16 = r17
$1270: $F420:     if ( >= ) then goto $1275
               F: ms_sourceProg_down -> ms_sourceProg_up  ...
$1271: $9100:     [$0760] -> r16
$1272: $0760:  
$1273: $9300:     r16 -> [$075F]
$1274: $075F:  
-----          L: 
               C: if (ms_posConditionsIF -= 2) then goto $1285 ...
$1275: $9100:     [$075A] -> r16
$1276: $075A:  
$1277: $3002:     r16 = $02
$1278: $F461:     if (Z=0) then goto $1285
               F: ms_sourceProg_up++  ...
$1279: $9100:     [$075F] -> r16
$127A: $075F:  
$127B: $9503:     r16 ++
$127C: $9300:     r16 -> [$075F]
$127D: $075F:  
               C: if (ms_sourceProg_up >= ADC_MAX) then goto $1285 ...
$127E: $9100:     [$075F] -> r16
$127F: $075F:  
$1280: $3302:     r16 = $32
$1281: $F018:     if ( < ) then goto $1285
               F: ADC_MAX -> ms_sourceProg_up  ...
$1282: $E302:     $32 -> r16
$1283: $9300:     r16 -> [$075F]
$1284: $075F:  
-----          L: 
-----          L: 
$1285: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1286: $9508:  F: RET (RET)
-----          L: 
-----          L: 
               C: if (ms_posConditionsIF -= 0) then goto $129B ...
$1287: $9100:     [$075A] -> r16
$1288: $075A:  
$1289: $3000:     r16 = $00
$128A: $F481:     if (Z=0) then goto $129B
               C: if (ms_sourceProg >= 1) then goto $1294 ...
$128B: $9100:     [$075E] -> r16
$128C: $075E:  
$128D: $3001:     r16 = $01
$128E: $F028:     if ( < ) then goto $1294
               F: ms_sourceProg--  ...
$128F: $9100:     [$075E] -> r16
$1290: $075E:  
$1291: $950A:     r16 --
$1292: $9300:     r16 -> [$075E]
$1293: $075E:  
               C: if (ms_sourceProg > SOURCENUMB+1) then goto $129B ...
$1294: $E003:     $03 -> r16
$1295: $9110:     [$075E] -> r17
$1296: $075E:  
$1297: $1701:     r16 = r17
$1298: $F410:     if ( >= ) then goto $129B
               F: SOURCENUMB+1 -> ms_sourceProg  ...
$1299: $9300:     r16 -> [$075E]
$129A: $075E:  
-----          L: 
               C: if (ms_posConditionsIF -= 1) then goto $12AF ...
$129B: $9100:     [$075A] -> r16
$129C: $075A:  
$129D: $3001:     r16 = $01
$129E: $F481:     if (Z=0) then goto $12AF
               C: if (ms_sourceProg_down >= 1) then goto $12A8 ...
$129F: $9100:     [$0760] -> r16
$12A0: $0760:  
$12A1: $3001:     r16 = $01
$12A2: $F028:     if ( < ) then goto $12A8
               F: ms_sourceProg_down--  ...
$12A3: $9100:     [$0760] -> r16
$12A4: $0760:  
$12A5: $950A:     r16 --
$12A6: $9300:     r16 -> [$0760]
$12A7: $0760:  
               C: if (ms_sourceProg_down > ADC_MAX) then goto $12AF ...
$12A8: $E302:     $32 -> r16
$12A9: $9110:     [$0760] -> r17
$12AA: $0760:  
$12AB: $1701:     r16 = r17
$12AC: $F410:     if ( >= ) then goto $12AF
               F: ADC_MAX -> ms_sourceProg_down  ...
$12AD: $9300:     r16 -> [$0760]
$12AE: $0760:  
-----          L: 
               C: if (ms_posConditionsIF -= 2) then goto $12CD ...
$12AF: $9100:     [$075A] -> r16
$12B0: $075A:  
$12B1: $3002:     r16 = $02
$12B2: $F4D1:     if (Z=0) then goto $12CD
               C: if (ms_sourceProg_up >= 1) then goto $12BC ...
$12B3: $9100:     [$075F] -> r16
$12B4: $075F:  
$12B5: $3001:     r16 = $01
$12B6: $F028:     if ( < ) then goto $12BC
               F: ms_sourceProg_up--  ...
$12B7: $9100:     [$075F] -> r16
$12B8: $075F:  
$12B9: $950A:     r16 --
$12BA: $9300:     r16 -> [$075F]
$12BB: $075F:  
               C: if (ms_sourceProg_up > ADC_MAX) then goto $12C3 ...
$12BC: $E302:     $32 -> r16
$12BD: $9110:     [$075F] -> r17
$12BE: $075F:  
$12BF: $1701:     r16 = r17
$12C0: $F410:     if ( >= ) then goto $12C3
               F: ADC_MAX -> ms_sourceProg_up  ...
$12C1: $9300:     r16 -> [$075F]
$12C2: $075F:  
               C: if (ms_sourceProg_down > ms_sourceProg_up) then goto $12CD ...
$12C3: $9100:     [$075F] -> r16
$12C4: $075F:  
$12C5: $9110:     [$0760] -> r17
$12C6: $0760:  
$12C7: $1701:     r16 = r17
$12C8: $F420:     if ( >= ) then goto $12CD
               F: ms_sourceProg_up -> ms_sourceProg_down  ...
$12C9: $9100:     [$075F] -> r16
$12CA: $075F:  
$12CB: $9300:     r16 -> [$0760]
$12CC: $0760:  
-----          L: 
-----          L: 
$12CD: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$12CE: $9508:  F: RET (RET)
-----          V: _ms_visConditionsEditIF
-----          L: 
$12CF: $940E:  F: CALL $8DD (_ms_printMessage)
$12D0: $08DD:  
-----          L: 
$12D1: $940E:  F: CALL $756 (_print_string_)
$12D2: $0756:  
$12D3: $45 $44 $49 $54 $20 $4C $49 $4E $45 $01 $00 $00
$12D9: $940E:  F: CALL $355 (_ssd_clrRestLine)
$12DA: $0355:  
-----          L: 
$12DB: $E000:  F: $00 -> r16 (0 -> r16)
$12DC: $E014:  F: $04 -> r17 (4 -> r17)
$12DD: $940E:  F: CALL $362 (_ssd_Pos_)
$12DE: $0362:  
               C: if (ms_blink-=0) then goto $12E8 ...
$12DF: $9100:     [$0532] -> r16
$12E0: $0532:  
$12E1: $3000:     r16 = $00
$12E2: $F429:     if (Z=0) then goto $12E8
$12E3: $940E:  F: CALL $756 (_print_string_)
$12E4: $0756:  
$12E5: $6F $01 $00 $00
$12E7: $C004:  J: goto $12EC (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$12E8: $940E:  F: CALL $756 (_print_string_)
$12E9: $0756:  
$12EA: $2E $01 $00 $00
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_CondWork.alg    ***********
-----          L: 
$12EC: $DEE5:  F: rcall $11D2 (_ms_visConditionsLine_)
-----          L: 
$12ED: $9508:  F: RET (RET)
-----          V: _ms_clickConditionsEditIF
-----          L: 
               C: if (ms_sourceProg = 0) then goto $12FF ...
$12EE: $9100:     [$075E] -> r16
$12EF: $075E:  
$12F0: $3000:     r16 = $00
$12F1: $F069:     if (Z=1) then goto $12FF
               C: if (ms_sourceProg >= SOURCENUMB+1) then goto $12FF ...
$12F2: $9100:     [$075E] -> r16
$12F3: $075E:  
$12F4: $3003:     r16 = $03
$12F5: $F448:     if ( >= ) then goto $12FF
-----          L: 
               F: ms_posConditionsIF ++  ...
$12F6: $9100:     [$075A] -> r16
$12F7: $075A:  
$12F8: $9503:     r16 ++
$12F9: $9300:     r16 -> [$075A]
$12FA: $075A:  
               C: if (ms_posConditionsIF < 3) then goto $1304 ...
$12FB: $9100:     [$075A] -> r16
$12FC: $075A:  
$12FD: $3003:     r16 = $03
$12FE: $F028:     if ( < ) then goto $1304
-----          L: 
$12FF: $D006:  F: rcall $1306 (_ms_eeSaveConditionsEditIF)
               F: MS_MODE_CONDITIONS_EDIT -> ms_mode  ...
$1300: $E009:     $09 -> r16
$1301: $9300:     r16 -> [$0530]
$1302: $0530:  
$1303: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$1304: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1305: $9508:  F: RET (RET)
-----          V: _ms_eeSaveConditionsEditIF
               C: if (ms_posConditions -= 0) then goto $132C ...
$1306: $9100:     [$0759] -> r16
$1307: $0759:  
$1308: $3000:     r16 = $00
$1309: $F511:     if (Z=0) then goto $132C
               F: ms_sourceProg -> ee_ms_sourceProg1  ...
$130A: $9100:     [$075E] -> r16
$130B: $075E:  
$130C: $E615:     $65 -> r17
$130D: $BD11:     r17 -> p$21
$130E: $E013:     $03 -> r17
$130F: $BD12:     r17 -> p$22
$1310: $BD00:     r16 -> p$20
$1311: $9AFA:     1 -> p$1F.2
$1312: $9AF9:     1 -> p$1F.1
$1313: $99F9:     if (p$1F.1=0 then SKIP
$1314: $CFFE:     goto $1313 (RJMP)
               F: ms_sourceProg_up -> ee_ms_sourceProg1_up  ...
$1315: $9100:     [$075F] -> r16
$1316: $075F:  
$1317: $E616:     $66 -> r17
$1318: $BD11:     r17 -> p$21
$1319: $E013:     $03 -> r17
$131A: $BD12:     r17 -> p$22
$131B: $BD00:     r16 -> p$20
$131C: $9AFA:     1 -> p$1F.2
$131D: $9AF9:     1 -> p$1F.1
$131E: $99F9:     if (p$1F.1=0 then SKIP
$131F: $CFFE:     goto $131E (RJMP)
               F: ms_sourceProg_down -> ee_ms_sourceProg1_down  ...
$1320: $9100:     [$0760] -> r16
$1321: $0760:  
$1322: $E617:     $67 -> r17
$1323: $BD11:     r17 -> p$21
$1324: $E013:     $03 -> r17
$1325: $BD12:     r17 -> p$22
$1326: $BD00:     r16 -> p$20
$1327: $9AFA:     1 -> p$1F.2
$1328: $9AF9:     1 -> p$1F.1
$1329: $99F9:     if (p$1F.1=0 then SKIP
$132A: $CFFE:     goto $1329 (RJMP)
$132B: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posConditions -= 3) then goto $1352 ...
$132C: $9100:     [$0759] -> r16
$132D: $0759:  
$132E: $3003:     r16 = $03
$132F: $F511:     if (Z=0) then goto $1352
               F: ms_sourceProg -> ee_ms_sourceProg2  ...
$1330: $9100:     [$075E] -> r16
$1331: $075E:  
$1332: $E618:     $68 -> r17
$1333: $BD11:     r17 -> p$21
$1334: $E013:     $03 -> r17
$1335: $BD12:     r17 -> p$22
$1336: $BD00:     r16 -> p$20
$1337: $9AFA:     1 -> p$1F.2
$1338: $9AF9:     1 -> p$1F.1
$1339: $99F9:     if (p$1F.1=0 then SKIP
$133A: $CFFE:     goto $1339 (RJMP)
               F: ms_sourceProg_up -> ee_ms_sourceProg2_up  ...
$133B: $9100:     [$075F] -> r16
$133C: $075F:  
$133D: $E619:     $69 -> r17
$133E: $BD11:     r17 -> p$21
$133F: $E013:     $03 -> r17
$1340: $BD12:     r17 -> p$22
$1341: $BD00:     r16 -> p$20
$1342: $9AFA:     1 -> p$1F.2
$1343: $9AF9:     1 -> p$1F.1
$1344: $99F9:     if (p$1F.1=0 then SKIP
$1345: $CFFE:     goto $1344 (RJMP)
               F: ms_sourceProg_down -> ee_ms_sourceProg2_down  ...
$1346: $9100:     [$0760] -> r16
$1347: $0760:  
$1348: $E61A:     $6A -> r17
$1349: $BD11:     r17 -> p$21
$134A: $E013:     $03 -> r17
$134B: $BD12:     r17 -> p$22
$134C: $BD00:     r16 -> p$20
$134D: $9AFA:     1 -> p$1F.2
$134E: $9AF9:     1 -> p$1F.1
$134F: $99F9:     if (p$1F.1=0 then SKIP
$1350: $CFFE:     goto $134F (RJMP)
$1351: $9508:  F: RET (RET)
-----          L: 
               F: ms_sourceProg -> ee_ms_sourceProg3  ...
$1352: $9100:     [$075E] -> r16
$1353: $075E:  
$1354: $E61B:     $6B -> r17
$1355: $BD11:     r17 -> p$21
$1356: $E013:     $03 -> r17
$1357: $BD12:     r17 -> p$22
$1358: $BD00:     r16 -> p$20
$1359: $9AFA:     1 -> p$1F.2
$135A: $9AF9:     1 -> p$1F.1
$135B: $99F9:     if (p$1F.1=0 then SKIP
$135C: $CFFE:     goto $135B (RJMP)
               F: ms_sourceProg_up -> ee_ms_sourceProg3_up  ...
$135D: $9100:     [$075F] -> r16
$135E: $075F:  
$135F: $E61C:     $6C -> r17
$1360: $BD11:     r17 -> p$21
$1361: $E013:     $03 -> r17
$1362: $BD12:     r17 -> p$22
$1363: $BD00:     r16 -> p$20
$1364: $9AFA:     1 -> p$1F.2
$1365: $9AF9:     1 -> p$1F.1
$1366: $99F9:     if (p$1F.1=0 then SKIP
$1367: $CFFE:     goto $1366 (RJMP)
               F: ms_sourceProg_down -> ee_ms_sourceProg3_down  ...
$1368: $9100:     [$0760] -> r16
$1369: $0760:  
$136A: $E61D:     $6D -> r17
$136B: $BD11:     r17 -> p$21
$136C: $E013:     $03 -> r17
$136D: $BD12:     r17 -> p$22
$136E: $BD00:     r16 -> p$20
$136F: $9AFA:     1 -> p$1F.2
$1370: $9AF9:     1 -> p$1F.1
$1371: $99F9:     if (p$1F.1=0 then SKIP
$1372: $CFFE:     goto $1371 (RJMP)
$1373: $9508:  F: RET (RET)
-----          V: _ms_eeLoadConditionsEditIF
               C: if (ms_posConditions -= 0) then goto $1391 ...
$1374: $9100:     [$0759] -> r16
$1375: $0759:  
$1376: $3000:     r16 = $00
$1377: $F4C9:     if (Z=0) then goto $1391
               F: ee_ms_sourceProg1 -> ms_sourceProg  ...
$1378: $E615:     $65 -> r17
$1379: $BD11:     r17 -> p$21
$137A: $E013:     $03 -> r17
$137B: $BD12:     r17 -> p$22
$137C: $9AF8:     1 -> p$1F.0
$137D: $B500:     p$20 -> r16
$137E: $9300:     r16 -> [$075E]
$137F: $075E:  
               F: ee_ms_sourceProg1_up -> ms_sourceProg_up  ...
$1380: $E616:     $66 -> r17
$1381: $BD11:     r17 -> p$21
$1382: $E013:     $03 -> r17
$1383: $BD12:     r17 -> p$22
$1384: $9AF8:     1 -> p$1F.0
$1385: $B500:     p$20 -> r16
$1386: $9300:     r16 -> [$075F]
$1387: $075F:  
               F: ee_ms_sourceProg1_down -> ms_sourceProg_down  ...
$1388: $E617:     $67 -> r17
$1389: $BD11:     r17 -> p$21
$138A: $E013:     $03 -> r17
$138B: $BD12:     r17 -> p$22
$138C: $9AF8:     1 -> p$1F.0
$138D: $B500:     p$20 -> r16
$138E: $9300:     r16 -> [$0760]
$138F: $0760:  
$1390: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posConditions -= 3) then goto $13AE ...
$1391: $9100:     [$0759] -> r16
$1392: $0759:  
$1393: $3003:     r16 = $03
$1394: $F4C9:     if (Z=0) then goto $13AE
               F: ee_ms_sourceProg2 -> ms_sourceProg  ...
$1395: $E618:     $68 -> r17
$1396: $BD11:     r17 -> p$21
$1397: $E013:     $03 -> r17
$1398: $BD12:     r17 -> p$22
$1399: $9AF8:     1 -> p$1F.0
$139A: $B500:     p$20 -> r16
$139B: $9300:     r16 -> [$075E]
$139C: $075E:  
               F: ee_ms_sourceProg2_up -> ms_sourceProg_up  ...
$139D: $E619:     $69 -> r17
$139E: $BD11:     r17 -> p$21
$139F: $E013:     $03 -> r17
$13A0: $BD12:     r17 -> p$22
$13A1: $9AF8:     1 -> p$1F.0
$13A2: $B500:     p$20 -> r16
$13A3: $9300:     r16 -> [$075F]
$13A4: $075F:  
               F: ee_ms_sourceProg2_down -> ms_sourceProg_down  ...
$13A5: $E61A:     $6A -> r17
$13A6: $BD11:     r17 -> p$21
$13A7: $E013:     $03 -> r17
$13A8: $BD12:     r17 -> p$22
$13A9: $9AF8:     1 -> p$1F.0
$13AA: $B500:     p$20 -> r16
$13AB: $9300:     r16 -> [$0760]
$13AC: $0760:  
$13AD: $9508:  F: RET (RET)
-----          L: 
               F: ee_ms_sourceProg3 -> ms_sourceProg  ...
$13AE: $E61B:     $6B -> r17
$13AF: $BD11:     r17 -> p$21
$13B0: $E013:     $03 -> r17
$13B1: $BD12:     r17 -> p$22
$13B2: $9AF8:     1 -> p$1F.0
$13B3: $B500:     p$20 -> r16
$13B4: $9300:     r16 -> [$075E]
$13B5: $075E:  
               F: ee_ms_sourceProg3_up -> ms_sourceProg_up  ...
$13B6: $E61C:     $6C -> r17
$13B7: $BD11:     r17 -> p$21
$13B8: $E013:     $03 -> r17
$13B9: $BD12:     r17 -> p$22
$13BA: $9AF8:     1 -> p$1F.0
$13BB: $B500:     p$20 -> r16
$13BC: $9300:     r16 -> [$075F]
$13BD: $075F:  
               F: ee_ms_sourceProg3_down -> ms_sourceProg_down  ...
$13BE: $E61D:     $6D -> r17
$13BF: $BD11:     r17 -> p$21
$13C0: $E013:     $03 -> r17
$13C1: $BD12:     r17 -> p$22
$13C2: $9AF8:     1 -> p$1F.0
$13C3: $B500:     p$20 -> r16
$13C4: $9300:     r16 -> [$0760]
$13C5: $0760:  
$13C6: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_ProgWork.alg    ***********
-----          V: _ms_visOnceCycle
-----          L: 
$13C7: $940E:  F: CALL $8DD (_ms_printMessage)
$13C8: $08DD:  
-----          L: 
$13C9: $940E:  F: CALL $756 (_print_string_)
$13CA: $0756:  
$13CB: $01 $00
$13CC: $940E:  F: CALL $756 (_print_string_)
$13CD: $0756:  
$13CE: $50 $52 $4F $47 $52 $41 $4D $2D $00 $00
-----          L: 
$13D3: $9100:  F: [$052E] -> r16 (ms_currentProg -> r16)
$13D4: $052E:  
$13D5: $5C0F:  F: r16 - $CF (r16 + "1")
$13D6: $940E:  F: CALL $38A (_ssd_Parse_r16)
$13D7: $038A:  
-----          L: 
               C: if (ms_pauseOnceCycle=0) then goto $13E3 ...
$13D8: $9100:     [$075D] -> r16
$13D9: $075D:  
$13DA: $3000:     r16 = $00
$13DB: $F039:     if (Z=1) then goto $13E3
$13DC: $940E:  F: CALL $756 (_print_string_)
$13DD: $0756:  
$13DE: $20 $50 $61 $75 $73 $65 $00 $00
$13E2: $C006:  J: goto $13E9 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$13E3: $940E:  F: CALL $756 (_print_string_)
$13E4: $0756:  
$13E5: $20 $57 $6F $72 $6B $73 $00 $00
-----          L: 
$13E9: $940E:  F: CALL $355 (_ssd_clrRestLine)
$13EA: $0355:  
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_ProgWork.alg    ***********
-----          L: 
$13EB: $D037:  F: rcall $1423 (_ms_visProgWorks)
$13EC: $9508:  F: RET (RET)
-----          V: _ms_naviOnceCycle
$13ED: $D800:  F: rcall $BEE (_ms_get_visAllObjNumber)
               C: if (ms_objNumber -= 0) then goto $13F7 ...
$13EE: $9100:     [$0750] -> r16
$13EF: $0750:  
$13F0: $3000:     r16 = $00
$13F1: $F029:     if (Z=1) then goto $13F7
               F: ms_objNumber--  ...
$13F2: $9100:     [$0750] -> r16
$13F3: $0750:  
$13F4: $950A:     r16 --
$13F5: $9300:     r16 -> [$0750]
$13F6: $0750:  
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $1408 ...
$13F7: $9100:     [$010A] -> r16
$13F8: $010A:  
$13F9: $3001:     r16 = $01
$13FA: $F069:     if (Z=1) then goto $1408
               C: if (ms_posOnceCycle < ms_objNumber) then goto $1406 ...
$13FB: $9100:     [$0758] -> r16
$13FC: $0758:  
$13FD: $9110:     [$0750] -> r17
$13FE: $0750:  
$13FF: $1701:     r16 = r17
$1400: $F428:     if ( >= ) then goto $1406
               F: ms_posOnceCycle++  ...
$1401: $9100:     [$0758] -> r16
$1402: $0758:  
$1403: $9503:     r16 ++
$1404: $9300:     r16 -> [$0758]
$1405: $0758:  
-----          L: 
$1406: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1407: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posOnceCycle >= 1) then goto $1411 ...
$1408: $9100:     [$0758] -> r16
$1409: $0758:  
$140A: $3001:     r16 = $01
$140B: $F028:     if ( < ) then goto $1411
               F: ms_posOnceCycle--  ...
$140C: $9100:     [$0758] -> r16
$140D: $0758:  
$140E: $950A:     r16 --
$140F: $9300:     r16 -> [$0758]
$1410: $0758:  
$1411: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1412: $9508:  F: RET (RET)
-----          V: _ms_clicOnceCycle
               C: if (ms_pauseOnceCycle-=0) then goto $141D ...
$1413: $9100:     [$075D] -> r16
$1414: $075D:  
$1415: $3000:     r16 = $00
$1416: $F431:     if (Z=0) then goto $141D
-----          L: 
               F: 1 -> ms_pauseOnceCycle  ...
$1417: $E001:     $01 -> r16
$1418: $9300:     r16 -> [$075D]
$1419: $075D:  
$141A: $6038:  F: r19 ! $08 (1 -> f_resetAllRelay)
$141B: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$141C: $9508:  F: RET (RET)
-----          L: 
-----          L: 
$141D: $D896:  F: rcall $CB4 (_ms_do_statusReset)
               F: 0 -> ms_pauseOnceCycle  ...
$141E: $E000:     $00 -> r16
$141F: $9300:     r16 -> [$075D]
$1420: $075D:  
$1421: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1422: $9508:  F: RET (RET)
-----          V: _ms_visProgWorks
               F: Y ->  ...
$1423: $93CF:     r28 ->
$1424: $93DF:     r29 ->
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$1425: $E4C0:     $40 -> r28
$1426: $E0D5:     $05 -> r29
               F: -1 -> ms_posFrame  ...
$1427: $EF0F:     $FF -> r16
$1428: $9300:     r16 -> [$0757]
$1429: $0757:  
               F: -1 -> ms_objCurrentScan  ...
$142A: $9300:     r16 -> [$0751]
$142B: $0751:  
-----          L: 
               F: ms_posFrame++  ...
$142C: $9100:     [$0757] -> r16
$142D: $0757:  
$142E: $9503:     r16 ++
$142F: $9300:     r16 -> [$0757]
$1430: $0757:  
-----          L: 
               F: ms_objCurrentScan++  ...
$1431: $9100:     [$0751] -> r16
$1432: $0751:  
$1433: $9503:     r16 ++
$1434: $9300:     r16 -> [$0751]
$1435: $0751:  
-----          L: 
$1436: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if (ms_posFrame >= 6) then goto $1477 ...
$1437: $9100:     [$0757] -> r16
$1438: $0757:  
$1439: $3006:     r16 = $06
$143A: $F5E0:     if ( >= ) then goto $1477
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $1477 ...
$143B: $8108:     [Y+$00] -> r 16
$143C: $3F0F:     r16 = $FF
$143D: $F1C9:     if (Z=1) then goto $1477
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $1436 ...
$143E: $8108:     [Y+$00] -> r 16
$143F: $3001:     r16 = $01
$1440: $F7A9:     if (Z=0) then goto $1436
-----          L: 
$1441: $9100:  F: [$0751] -> r16 (ms_objCurrentScan -> r16)
$1442: $0751:  
$1443: $5F0E:  F: r16 - $FE (r16 + 2)
               F: r16 - ms_posOnceCycle  ...
$1444: $9110:     [$0758] -> r17
$1445: $0758:  
$1446: $1B01:     r16 - r17
               C: if (r16 >= 6) then goto $1431 ...
$1447: $3006:     r16 = $06
$1448: $F740:     if ( >= ) then goto $1431
-----          L: 
-----          L: 
$1449: $9100:  F: [$0757] -> r16 (ms_posFrame -> r16)
$144A: $0757:  
               F: r16 + ms_posOnceCycle  ...
$144B: $9110:     [$0758] -> r17
$144C: $0758:  
$144D: $0F01:     r16 + r17
               C: if (r16 >= 2) then goto $1458 ...
$144E: $3002:     r16 = $02
$144F: $F440:     if ( >= ) then goto $1458
$1450: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1451: $0355:  
               F: ms_posFrame++  ...
$1452: $9100:     [$0757] -> r16
$1453: $0757:  
$1454: $9503:     r16 ++
$1455: $9300:     r16 -> [$0757]
$1456: $0757:  
$1457: $CFF1:  J: goto $1449 (RJMP)
-----          L: 
-----          L: 
-----          L: 
$1458: $940E:  F: CALL $756 (_print_string_)
$1459: $0756:  
$145A: $20 $00
-----          L: 
$145B: $940E:  F: CALL $A7C (_ms_printAddress)
$145C: $0A7C:  
-----          L: 
$145D: $940E:  F: CALL $AB4 (_ms_printKey)
$145E: $0AB4:  
-----          L: 
$145F: $940E:  F: CALL $AE9 (_ms_printIdle_m)
$1460: $0AE9:  
$1461: $940E:  F: CALL $756 (_print_string_)
$1462: $0756:  
$1463: $3A $00
$1464: $940E:  F: CALL $ABF (_ms_printIdle_s)
$1465: $0ABF:  
$1466: $940E:  F: CALL $756 (_print_string_)
$1467: $0756:  
$1468: $20 $00
-----          L: 
$1469: $8109:  F: [Y+$01] -> r 16 ([Y+MS_OBJ_ADDR] -> r16)
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $1474 ...
$146A: $8109:     [Y+$01] -> r 16
$146B: $3000:     r16 = $00
$146C: $F039:     if (Z=1) then goto $1474
$146D: $940E:  F: CALL $B11 (_ms_printWork_m)
$146E: $0B11:  
$146F: $940E:  F: CALL $756 (_print_string_)
$1470: $0756:  
$1471: $3A $00
$1472: $940E:  F: CALL $AFD (_ms_printWork_s)
$1473: $0AFD:  
-----          L: 
-----          L: 
$1474: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1475: $0355:  
$1476: $CFB5:  J: goto $142C (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_posFrame >= 6) then goto $1483 ...
$1477: $9100:     [$0757] -> r16
$1478: $0757:  
$1479: $3006:     r16 = $06
$147A: $F440:     if ( >= ) then goto $1483
$147B: $940E:  F: CALL $355 (_ssd_clrRestLine)
$147C: $0355:  
               F: ms_posFrame++  ...
$147D: $9100:     [$0757] -> r16
$147E: $0757:  
$147F: $9503:     r16 ++
$1480: $9300:     r16 -> [$0757]
$1481: $0757:  
$1482: $CFF4:  J: goto $1477 (RJMP)
-----          L: 
-----          L: 
               F: -> Y  ...
$1483: $91DF:     -> r29
$1484: $91CF:     -> r28
$1485: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Menu.alg    ***********
-----          V: _ms_visMenu
-----          L: 
$1486: $940E:  F: CALL $8DD (_ms_printMessage)
$1487: $08DD:  
-----          L: 
$1488: $940E:  F: CALL $756 (_print_string_)
$1489: $0756:  
$148A: $4D $45 $4E $55 $01 $00
$148D: $940E:  F: CALL $355 (_ssd_clrRestLine)
$148E: $0355:  
-----          L: 
$148F: $9100:  F: [$0752] -> r16 (ms_posMenu -> r16)
$1490: $0752:  
$1491: $9503:  F: r16 ++ (r16++)
$1492: $9501:  F: - r16 (-r16)
$1493: $9300:  F: r16 -> [$0757] (r16 -> ms_posFrame)
$1494: $0757:  
-----          L: 
$1495: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$1496: $0BB2:  
$1497: $F410:  C: if ( >= ) then goto $149A (<)
$1498: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1499: $0355:  
$149A: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$149B: $0BB2:  
$149C: $F410:  C: if ( >= ) then goto $149F (<)
$149D: $940E:  F: CALL $355 (_ssd_clrRestLine)
$149E: $0355:  
-----          L: 
$149F: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$14A0: $0BB2:  
$14A1: $F488:  C: if ( >= ) then goto $14B3 (>=)
$14A2: $2F01:  F: r17 -> r16 (r17 -> r16)
$14A3: $940E:  F: CALL $38A (_ssd_Parse_r16)
$14A4: $038A:  
$14A5: $940E:  F: CALL $756 (_print_string_)
$14A6: $0756:  
$14A7: $50 $52 $4F $47 $52 $41 $4D $2D $01 $00
$14AC: $9100:  F: [$052E] -> r16 (ms_currentProg -> r16)
$14AD: $052E:  
$14AE: $5C0F:  F: r16 - $CF (r16 + "1")
$14AF: $940E:  F: CALL $38A (_ssd_Parse_r16)
$14B0: $038A:  
$14B1: $940E:  F: CALL $355 (_ssd_clrRestLine)
$14B2: $0355:  
-----          L: 
$14B3: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$14B4: $0BB2:  
$14B5: $F450:  C: if ( >= ) then goto $14C0 (>=)
$14B6: $2F01:  F: r17 -> r16 (r17 -> r16)
$14B7: $940E:  F: CALL $38A (_ssd_Parse_r16)
$14B8: $038A:  
$14B9: $940E:  F: CALL $756 (_print_string_)
$14BA: $0756:  
$14BB: $20 $52 $75 $6E $01 $00
$14BE: $940E:  F: CALL $355 (_ssd_clrRestLine)
$14BF: $0355:  
-----          L: 
$14C0: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$14C1: $0BB2:  
$14C2: $F458:  C: if ( >= ) then goto $14CE (>=)
$14C3: $2F01:  F: r17 -> r16 (r17 -> r16)
$14C4: $940E:  F: CALL $38A (_ssd_Parse_r16)
$14C5: $038A:  
$14C6: $940E:  F: CALL $756 (_print_string_)
$14C7: $0756:  
$14C8: $20 $45 $64 $69 $74 $01 $00 $00
$14CC: $940E:  F: CALL $355 (_ssd_clrRestLine)
$14CD: $0355:  
-----          L: 
$14CE: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$14CF: $0BB2:  
$14D0: $F458:  C: if ( >= ) then goto $14DC (>=)
$14D1: $2F01:  F: r17 -> r16 (r17 -> r16)
$14D2: $940E:  F: CALL $38A (_ssd_Parse_r16)
$14D3: $038A:  
$14D4: $940E:  F: CALL $756 (_print_string_)
$14D5: $0756:  
$14D6: $20 $43 $6C $65 $61 $72 $01 $00
$14DA: $940E:  F: CALL $355 (_ssd_clrRestLine)
$14DB: $0355:  
-----          L: 
$14DC: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$14DD: $0BB2:  
$14DE: $F478:  C: if ( >= ) then goto $14EE (>=)
$14DF: $2F01:  F: r17 -> r16 (r17 -> r16)
$14E0: $940E:  F: CALL $38A (_ssd_Parse_r16)
$14E1: $038A:  
$14E2: $940E:  F: CALL $756 (_print_string_)
$14E3: $0756:  
$14E4: $4D $61 $6E $75 $61 $6C $20 $63 $6F $6E $74 $72 $6F $6C $01 $00
$14EC: $940E:  F: CALL $355 (_ssd_clrRestLine)
$14ED: $0355:  
-----          L: 
-----          L: 
$14EE: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$14EF: $0BB2:  
$14F0: $F410:  C: if ( >= ) then goto $14F3 (<)
$14F1: $940E:  F: CALL $355 (_ssd_clrRestLine)
$14F2: $0355:  
-----          L: 
$14F3: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$14F4: $0BB2:  
$14F5: $F458:  C: if ( >= ) then goto $1501 (>=)
$14F6: $940E:  F: CALL $756 (_print_string_)
$14F7: $0756:  
$14F8: $20 $43 $4F $4E $44 $49 $54 $49 $4F $4E $53 $01 $00 $00
$14FF: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1500: $0355:  
-----          L: 
$1501: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$1502: $0BB2:  
$1503: $F450:  C: if ( >= ) then goto $150E (>=)
$1504: $2F01:  F: r17 -> r16 (r17 -> r16)
$1505: $940E:  F: CALL $38A (_ssd_Parse_r16)
$1506: $038A:  
$1507: $940E:  F: CALL $756 (_print_string_)
$1508: $0756:  
$1509: $20 $52 $75 $6E $01 $00
$150C: $940E:  F: CALL $355 (_ssd_clrRestLine)
$150D: $0355:  
-----          L: 
$150E: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$150F: $0BB2:  
$1510: $F458:  C: if ( >= ) then goto $151C (>=)
$1511: $2F01:  F: r17 -> r16 (r17 -> r16)
$1512: $940E:  F: CALL $38A (_ssd_Parse_r16)
$1513: $038A:  
$1514: $940E:  F: CALL $756 (_print_string_)
$1515: $0756:  
$1516: $20 $45 $64 $69 $74 $01 $00 $00
$151A: $940E:  F: CALL $355 (_ssd_clrRestLine)
$151B: $0355:  
-----          L: 
$151C: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$151D: $0BB2:  
$151E: $F458:  C: if ( >= ) then goto $152A (>=)
$151F: $2F01:  F: r17 -> r16 (r17 -> r16)
$1520: $940E:  F: CALL $38A (_ssd_Parse_r16)
$1521: $038A:  
$1522: $940E:  F: CALL $756 (_print_string_)
$1523: $0756:  
$1524: $20 $43 $6C $65 $61 $72 $01 $00
$1528: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1529: $0355:  
-----          L: 
$152A: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$152B: $0BB2:  
$152C: $F460:  C: if ( >= ) then goto $1539 (>=)
$152D: $2F01:  F: r17 -> r16 (r17 -> r16)
$152E: $940E:  F: CALL $38A (_ssd_Parse_r16)
$152F: $038A:  
$1530: $940E:  F: CALL $756 (_print_string_)
$1531: $0756:  
$1532: $20 $53 $74 $61 $74 $75 $73 $01 $00 $00
$1537: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1538: $0355:  
-----          L: 
-----          L: 
$1539: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$153A: $0BB2:  
$153B: $F410:  C: if ( >= ) then goto $153E (<)
$153C: $940E:  F: CALL $355 (_ssd_clrRestLine)
$153D: $0355:  
-----          L: 
$153E: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$153F: $0BB2:  
$1540: $F590:  C: if ( >= ) then goto $1573 (>=)
$1541: $2F01:  F: r17 -> r16 (r17 -> r16)
$1542: $940E:  F: CALL $38A (_ssd_Parse_r16)
$1543: $038A:  
$1544: $940E:  F: CALL $756 (_print_string_)
$1545: $0756:  
$1546: $41 $46 $54 $45 $52 $20 $52 $45 $53 $45 $54 $3A $20 $01 $00 $00
               C: if (ms_afterReset=0) then goto $1554 ...
$154E: $9100:     [$052F] -> r16
$154F: $052F:  
$1550: $3000:     r16 = $00
$1551: $F011:     if (Z=1) then goto $1554
$1552: $0000:  F: NOP (NOP)
$1553: $C006:  J: goto $155A (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$1554: $940E:  F: CALL $756 (_print_string_)
$1555: $0756:  
$1556: $50 $72 $6F $67 $72 $61 $6D $00
-----          L: 
               C: if (ms_afterReset=1) then goto $1560 ...
$155A: $9100:     [$052F] -> r16
$155B: $052F:  
$155C: $3001:     r16 = $01
$155D: $F011:     if (Z=1) then goto $1560
$155E: $0000:  F: NOP (NOP)
$155F: $C006:  J: goto $1566 (RJMP)
-----          L: 
$1560: $940E:  F: CALL $756 (_print_string_)
$1561: $0756:  
$1562: $43 $6F $6E $64 $69 $74 $2E $00
-----          L: 
               C: if (ms_afterReset=255) then goto $156C ...
$1566: $9100:     [$052F] -> r16
$1567: $052F:  
$1568: $3F0F:     r16 = $FF
$1569: $F011:     if (Z=1) then goto $156C
$156A: $0000:  F: NOP (NOP)
$156B: $C005:  J: goto $1571 (RJMP)
-----          L: 
$156C: $940E:  F: CALL $756 (_print_string_)
$156D: $0756:  
$156E: $4D $65 $6E $75 $00 $00
-----          L: 
$1571: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1572: $0355:  
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Menu.alg    ***********
-----          L: 
-----          L: 
$1573: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$1574: $0BB2:  
$1575: $F410:  C: if ( >= ) then goto $1578 (<)
$1576: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1577: $0355:  
$1578: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$1579: $0BB2:  
$157A: $F410:  C: if ( >= ) then goto $157D (<)
$157B: $940E:  F: CALL $355 (_ssd_clrRestLine)
$157C: $0355:  
$157D: $940E:  F: CALL $BB2 (_ms_posFrameTest)
$157E: $0BB2:  
$157F: $F410:  C: if ( >= ) then goto $1582 (<)
$1580: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1581: $0355:  
-----          L: 
$1582: $9508:  F: RET (RET)
-----          V: _ms_naviMenu
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $1592 ...
$1583: $9100:     [$010A] -> r16
$1584: $010A:  
$1585: $3001:     r16 = $01
$1586: $F059:     if (Z=1) then goto $1592
               C: if (ms_posMenu < 12) then goto $1590 ...
$1587: $9100:     [$0752] -> r16
$1588: $0752:  
$1589: $300C:     r16 = $0C
$158A: $F428:     if ( >= ) then goto $1590
               F: ms_posMenu++  ...
$158B: $9100:     [$0752] -> r16
$158C: $0752:  
$158D: $9503:     r16 ++
$158E: $9300:     r16 -> [$0752]
$158F: $0752:  
$1590: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1591: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posMenu >= 1) then goto $159B ...
$1592: $9100:     [$0752] -> r16
$1593: $0752:  
$1594: $3001:     r16 = $01
$1595: $F028:     if ( < ) then goto $159B
               F: ms_posMenu--  ...
$1596: $9100:     [$0752] -> r16
$1597: $0752:  
$1598: $950A:     r16 --
$1599: $9300:     r16 -> [$0752]
$159A: $0752:  
$159B: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$159C: $9508:  F: RET (RET)
-----          V: _ms_clickMenu
-----          L: 
$159D: $9100:  F: [$0752] -> r16 (ms_posMenu -> r16)
$159E: $0752:  
-----          L: 
               C: if (r16 -= 0) then goto $15C1 ...
$159F: $3000:     r16 = $00
$15A0: $F501:     if (Z=0) then goto $15C1
$15A1: $9100:  F: [$052E] -> r16 (ms_currentProg -> r16)
$15A2: $052E:  
$15A3: $9503:  F: r16 ++ (r16++)
               C: if (r16 >= 3) then goto $15A7 ...
$15A4: $3003:     r16 = $03
$15A5: $F008:     if ( < ) then goto $15A7
$15A6: $E000:  F: $00 -> r16 (0 -> r16)
$15A7: $9300:  F: r16 -> [$052E] (r16 -> ms_currentProg)
$15A8: $052E:  
               F: r16 -> ee_ms_currentProg  ...
$15A9: $E014:     $04 -> r17
$15AA: $BD11:     r17 -> p$21
$15AB: $E010:     $00 -> r17
$15AC: $BD12:     r17 -> p$22
$15AD: $BD00:     r16 -> p$20
$15AE: $9AFA:     1 -> p$1F.2
$15AF: $9AF9:     1 -> p$1F.1
$15B0: $99F9:     if (p$1F.1=0 then SKIP
$15B1: $CFFE:     goto $15B0 (RJMP)
$15B2: $940E:  F: CALL $897 (_ms_eeRestore)
$15B3: $0897:  
$15B4: $940E:  F: CALL $8E9 (_ms_message_)
$15B5: $08E9:  
$15B6: $20 $2A $20 $6E $65 $77 $20 $70 $72 $6F $67 $72 $61 $6D $20 $73
$15BE: $65 $74 $00 $00
$15C0: $9508:  F: RET (RET)
-----          L: 
               C: if (r16 -= 1) then goto $15CE ...
$15C1: $3001:     r16 = $01
$15C2: $F459:     if (Z=0) then goto $15CE
$15C3: $940E:  F: CALL $897 (_ms_eeRestore)
$15C4: $0897:  
               F: 0 -> ms_pauseOnceCycle  ...
$15C5: $E000:     $00 -> r16
$15C6: $9300:     r16 -> [$075D]
$15C7: $075D:  
               F: MS_MODE_WORK_CYCLE -> ms_mode  ...
$15C8: $E003:     $03 -> r16
$15C9: $9300:     r16 -> [$0530]
$15CA: $0530:  
$15CB: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$15CC: $6038:  F: r19 ! $08 (1 -> f_resetAllRelay)
$15CD: $9508:  F: RET (RET)
-----          L: 
               C: if (r16 -= 2) then goto $15D8 ...
$15CE: $3002:     r16 = $02
$15CF: $F441:     if (Z=0) then goto $15D8
$15D0: $940E:  F: CALL $897 (_ms_eeRestore)
$15D1: $0897:  
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$15D2: $E001:     $01 -> r16
$15D3: $9300:     r16 -> [$0530]
$15D4: $0530:  
$15D5: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$15D6: $6038:  F: r19 ! $08 (1 -> f_resetAllRelay)
$15D7: $9508:  F: RET (RET)
-----          L: 
               C: if (r16 -= 3) then goto $15F7 ...
$15D8: $3003:     r16 = $03
$15D9: $F4E9:     if (Z=0) then goto $15F7
               F: Y ->  ...
$15DA: $93CF:     r28 ->
$15DB: $93DF:     r29 ->
               F: @ms_objTable -> Y  ...
$15DC: $E5C0:     $50 -> r28
$15DD: $E0D5:     $05 -> r29
$15DE: $940E:  F: CALL $C5C (_ms_do_objBlank)
$15DF: $0C5C:  
               F: MS_TYPE_LIST_END -> [Y + MS_OBJ_TYPE + MS_OBJ_SIZE]  ...
$15E0: $EF0F:     $FF -> r16
$15E1: $8B08:     r16 -> [Y+$10]
               F: -> Y  ...
$15E2: $91DF:     -> r29
$15E3: $91CF:     -> r28
               F: 0 -> ms_posManual  ...
$15E4: $E000:     $00 -> r16
$15E5: $9300:     r16 -> [$0756]
$15E6: $0756:  
               F: 0 -> ms_posBuild  ...
$15E7: $9300:     r16 -> [$0753]
$15E8: $0753:  
$15E9: $940E:  F: CALL $B73 (_ms_eeSave)
$15EA: $0B73:  
$15EB: $940E:  F: CALL $8E9 (_ms_message_)
$15EC: $08E9:  
$15ED: $20 $2A $20 $70 $72 $6F $67 $72 $61 $6D $20 $63 $6C $65 $61 $72
$15F5: $65 $64 $00 $00
-----          L: 
               C: if (r16 -= 4) then goto $15FE ...
$15F7: $3004:     r16 = $04
$15F8: $F429:     if (Z=0) then goto $15FE
               F: MS_MODE_STOP_MANUAL -> ms_mode  ...
$15F9: $E002:     $02 -> r16
$15FA: $9300:     r16 -> [$0530]
$15FB: $0530:  
$15FC: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$15FD: $9508:  F: RET (RET)
-----          L: 
-----          L: 
               C: if (r16 -= 7) then goto $1608 ...
$15FE: $3007:     r16 = $07
$15FF: $F441:     if (Z=0) then goto $1608
               F: 0 -> ms_posConditionsClick  ...
$1600: $E000:     $00 -> r16
$1601: $9300:     r16 -> [$075C]
$1602: $075C:  
               F: MS_MODE_CONDITIONS_WORK -> ms_mode  ...
$1603: $E008:     $08 -> r16
$1604: $9300:     r16 -> [$0530]
$1605: $0530:  
$1606: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1607: $9508:  F: RET (RET)
-----          L: 
               C: if (r16 -= 8) then goto $160F ...
$1608: $3008:     r16 = $08
$1609: $F429:     if (Z=0) then goto $160F
               F: MS_MODE_CONDITIONS_EDIT -> ms_mode  ...
$160A: $E009:     $09 -> r16
$160B: $9300:     r16 -> [$0530]
$160C: $0530:  
$160D: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$160E: $9508:  F: RET (RET)
-----          L: 
               C: if (r16 -= 9) then goto $1620 ...
$160F: $3009:     r16 = $09
$1610: $F479:     if (Z=0) then goto $1620
$1611: $D032:  F: rcall $1644 (_ms_clearConditions)
$1612: $940E:  F: CALL $8E9 (_ms_message_)
$1613: $08E9:  
$1614: $20 $2A $20 $63 $6F $6E $64 $69 $74 $69 $6F $6E $73 $20 $63 $6C
$161C: $65 $61 $72 $65 $64 $00
$161F: $9508:  F: RET (RET)
-----          L: 
               C: if (r16 -= 10) then goto $1627 ...
$1620: $300A:     r16 = $0A
$1621: $F429:     if (Z=0) then goto $1627
               F: MS_MODE_SOURCES_VIEWER -> ms_mode  ...
$1622: $E007:     $07 -> r16
$1623: $9300:     r16 -> [$0530]
$1624: $0530:  
$1625: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1626: $9508:  F: RET (RET)
-----          L: 
-----          L: 
               C: if (r16 -= 12) then goto $1643 ...
$1627: $300C:     r16 = $0C
$1628: $F4D1:     if (Z=0) then goto $1643
$1629: $EF1F:  F: $FF -> r17 (255 -> r17)
               C: if (ms_afterReset = 0) then goto $162F ...
$162A: $9100:     [$052F] -> r16
$162B: $052F:  
$162C: $3000:     r16 = $00
$162D: $F409:     if (Z=0) then goto $162F
$162E: $E011:  F: $01 -> r17 (1 -> r17)
               C: if (ms_afterReset = 255) then goto $1634 ...
$162F: $9100:     [$052F] -> r16
$1630: $052F:  
$1631: $3F0F:     r16 = $FF
$1632: $F409:     if (Z=0) then goto $1634
$1633: $E010:  F: $00 -> r17 (0 -> r17)
$1634: $9310:  F: r17 -> [$052F] (r17 -> ms_afterReset)
$1635: $052F:  
               F: ms_afterReset -> ee_ms_afterReset  ...
$1636: $9100:     [$052F] -> r16
$1637: $052F:  
$1638: $E013:     $03 -> r17
$1639: $BD11:     r17 -> p$21
$163A: $E010:     $00 -> r17
$163B: $BD12:     r17 -> p$22
$163C: $BD00:     r16 -> p$20
$163D: $9AFA:     1 -> p$1F.2
$163E: $9AF9:     1 -> p$1F.1
$163F: $99F9:     if (p$1F.1=0 then SKIP
$1640: $CFFE:     goto $163F (RJMP)
$1641: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1642: $9508:  F: RET (RET)
-----          L: 
$1643: $9508:  F: RET (RET)
-----          V: _ms_clearConditions
               F: 255 -> ee_ms_sourceProg1  ...
$1644: $EF0F:     $FF -> r16
$1645: $E615:     $65 -> r17
$1646: $BD11:     r17 -> p$21
$1647: $E013:     $03 -> r17
$1648: $BD12:     r17 -> p$22
$1649: $BD00:     r16 -> p$20
$164A: $9AFA:     1 -> p$1F.2
$164B: $9AF9:     1 -> p$1F.1
$164C: $99F9:     if (p$1F.1=0 then SKIP
$164D: $CFFE:     goto $164C (RJMP)
               F: 20 -> ee_ms_sourceProg1_down  ...
$164E: $E104:     $14 -> r16
$164F: $E617:     $67 -> r17
$1650: $BD11:     r17 -> p$21
$1651: $E013:     $03 -> r17
$1652: $BD12:     r17 -> p$22
$1653: $BD00:     r16 -> p$20
$1654: $9AFA:     1 -> p$1F.2
$1655: $9AF9:     1 -> p$1F.1
$1656: $99F9:     if (p$1F.1=0 then SKIP
$1657: $CFFE:     goto $1656 (RJMP)
               F: 20 -> ee_ms_sourceProg1_up  ...
$1658: $E104:     $14 -> r16
$1659: $E616:     $66 -> r17
$165A: $BD11:     r17 -> p$21
$165B: $E013:     $03 -> r17
$165C: $BD12:     r17 -> p$22
$165D: $BD00:     r16 -> p$20
$165E: $9AFA:     1 -> p$1F.2
$165F: $9AF9:     1 -> p$1F.1
$1660: $99F9:     if (p$1F.1=0 then SKIP
$1661: $CFFE:     goto $1660 (RJMP)
               F: 255 -> ee_ms_sourceProg2  ...
$1662: $EF0F:     $FF -> r16
$1663: $E618:     $68 -> r17
$1664: $BD11:     r17 -> p$21
$1665: $E013:     $03 -> r17
$1666: $BD12:     r17 -> p$22
$1667: $BD00:     r16 -> p$20
$1668: $9AFA:     1 -> p$1F.2
$1669: $9AF9:     1 -> p$1F.1
$166A: $99F9:     if (p$1F.1=0 then SKIP
$166B: $CFFE:     goto $166A (RJMP)
               F: 20 -> ee_ms_sourceProg2_down  ...
$166C: $E104:     $14 -> r16
$166D: $E61A:     $6A -> r17
$166E: $BD11:     r17 -> p$21
$166F: $E013:     $03 -> r17
$1670: $BD12:     r17 -> p$22
$1671: $BD00:     r16 -> p$20
$1672: $9AFA:     1 -> p$1F.2
$1673: $9AF9:     1 -> p$1F.1
$1674: $99F9:     if (p$1F.1=0 then SKIP
$1675: $CFFE:     goto $1674 (RJMP)
               F: 20 -> ee_ms_sourceProg2_up  ...
$1676: $E104:     $14 -> r16
$1677: $E619:     $69 -> r17
$1678: $BD11:     r17 -> p$21
$1679: $E013:     $03 -> r17
$167A: $BD12:     r17 -> p$22
$167B: $BD00:     r16 -> p$20
$167C: $9AFA:     1 -> p$1F.2
$167D: $9AF9:     1 -> p$1F.1
$167E: $99F9:     if (p$1F.1=0 then SKIP
$167F: $CFFE:     goto $167E (RJMP)
               F: 255 -> ee_ms_sourceProg3  ...
$1680: $EF0F:     $FF -> r16
$1681: $E61B:     $6B -> r17
$1682: $BD11:     r17 -> p$21
$1683: $E013:     $03 -> r17
$1684: $BD12:     r17 -> p$22
$1685: $BD00:     r16 -> p$20
$1686: $9AFA:     1 -> p$1F.2
$1687: $9AF9:     1 -> p$1F.1
$1688: $99F9:     if (p$1F.1=0 then SKIP
$1689: $CFFE:     goto $1688 (RJMP)
               F: 20 -> ee_ms_sourceProg3_down  ...
$168A: $E104:     $14 -> r16
$168B: $E61D:     $6D -> r17
$168C: $BD11:     r17 -> p$21
$168D: $E013:     $03 -> r17
$168E: $BD12:     r17 -> p$22
$168F: $BD00:     r16 -> p$20
$1690: $9AFA:     1 -> p$1F.2
$1691: $9AF9:     1 -> p$1F.1
$1692: $99F9:     if (p$1F.1=0 then SKIP
$1693: $CFFE:     goto $1692 (RJMP)
               F: 20 -> ee_ms_sourceProg3_up  ...
$1694: $E104:     $14 -> r16
$1695: $E61C:     $6C -> r17
$1696: $BD11:     r17 -> p$21
$1697: $E013:     $03 -> r17
$1698: $BD12:     r17 -> p$22
$1699: $BD00:     r16 -> p$20
$169A: $9AFA:     1 -> p$1F.2
$169B: $9AF9:     1 -> p$1F.1
$169C: $99F9:     if (p$1F.1=0 then SKIP
$169D: $CFFE:     goto $169C (RJMP)
$169E: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Edit.alg    ***********
-----          V: _ms_visBuild
               F: Y ->  ...
$169F: $93CF:     r28 ->
$16A0: $93DF:     r29 ->
-----          L: 
$16A1: $940E:  F: CALL $8DD (_ms_printMessage)
$16A2: $08DD:  
-----          L: 
$16A3: $940E:  F: CALL $756 (_print_string_)
$16A4: $0756:  
$16A5: $45 $44 $49 $54 $20 $50 $52 $4F $47 $52 $41 $4D $2D $01 $00 $00
$16AD: $9100:  F: [$052E] -> r16 (ms_currentProg -> r16)
$16AE: $052E:  
$16AF: $5C0F:  F: r16 - $CF (r16 + "1")
$16B0: $940E:  F: CALL $38A (_ssd_Parse_r16)
$16B1: $038A:  
$16B2: $940E:  F: CALL $355 (_ssd_clrRestLine)
$16B3: $0355:  
-----          L: _ms_visBuild_in
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$16B4: $E4C0:     $40 -> r28
$16B5: $E0D5:     $05 -> r29
               F: -1 -> ms_posFrame  ...
$16B6: $EF0F:     $FF -> r16
$16B7: $9300:     r16 -> [$0757]
$16B8: $0757:  
               F: -1 -> ms_objCurrentScan  ...
$16B9: $9300:     r16 -> [$0751]
$16BA: $0751:  
-----          L: 
               F: ms_posFrame++  ...
$16BB: $9100:     [$0757] -> r16
$16BC: $0757:  
$16BD: $9503:     r16 ++
$16BE: $9300:     r16 -> [$0757]
$16BF: $0757:  
-----          L: 
               F: ms_objCurrentScan++  ...
$16C0: $9100:     [$0751] -> r16
$16C1: $0751:  
$16C2: $9503:     r16 ++
$16C3: $9300:     r16 -> [$0751]
$16C4: $0751:  
-----          L: 
$16C5: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if (ms_posFrame >= 6) then goto $171F ...
$16C6: $9100:     [$0757] -> r16
$16C7: $0757:  
$16C8: $3006:     r16 = $06
$16C9: $F008:     if ( < ) then goto $16CB
$16CA: $C054:     goto $171F (RJMP)
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $171F ...
$16CB: $8108:     [Y+$00] -> r 16
$16CC: $3F0F:     r16 = $FF
$16CD: $F409:     if (Z=0) then goto $16CF
$16CE: $C050:     goto $171F (RJMP)
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $16C5 ...
$16CF: $8108:     [Y+$00] -> r 16
$16D0: $3001:     r16 = $01
$16D1: $F799:     if (Z=0) then goto $16C5
-----          L: 
$16D2: $9100:  F: [$0751] -> r16 (ms_objCurrentScan -> r16)
$16D3: $0751:  
$16D4: $5F0E:  F: r16 - $FE (r16 + 2)
               F: r16 - ms_posBuild  ...
$16D5: $9110:     [$0753] -> r17
$16D6: $0753:  
$16D7: $1B01:     r16 - r17
               C: if (r16 >= 6) then goto $16C0 ...
$16D8: $3006:     r16 = $06
$16D9: $F730:     if ( >= ) then goto $16C0
-----          L: 
-----          L: 
$16DA: $9100:  F: [$0757] -> r16 (ms_posFrame -> r16)
$16DB: $0757:  
               F: r16 + ms_posBuild  ...
$16DC: $9110:     [$0753] -> r17
$16DD: $0753:  
$16DE: $0F01:     r16 + r17
               C: if (r16 >= 2) then goto $16E9 ...
$16DF: $3002:     r16 = $02
$16E0: $F440:     if ( >= ) then goto $16E9
$16E1: $940E:  F: CALL $355 (_ssd_clrRestLine)
$16E2: $0355:  
               F: ms_posFrame++  ...
$16E3: $9100:     [$0757] -> r16
$16E4: $0757:  
$16E5: $9503:     r16 ++
$16E6: $9300:     r16 -> [$0757]
$16E7: $0757:  
$16E8: $CFF1:  J: goto $16DA (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_mode = MS_MODE_STOP_BUILD_ACTION_MOVE) then goto $16F9 ...
$16E9: $9100:     [$0530] -> r16
$16EA: $0530:  
$16EB: $3606:     r16 = $66
$16EC: $F061:     if (Z=1) then goto $16F9
               C: if (ms_posFrame=2) then goto $16F5 ...
$16ED: $9100:     [$0757] -> r16
$16EE: $0757:  
$16EF: $3002:     r16 = $02
$16F0: $F021:     if (Z=1) then goto $16F5
$16F1: $940E:  F: CALL $756 (_print_string_)
$16F2: $0756:  
$16F3: $20 $00
$16F4: $C003:  J: goto $16F8 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$16F5: $940E:  F: CALL $756 (_print_string_)
$16F6: $0756:  
$16F7: $3E $00
-----          L: 
$16F8: $C00B:  J: goto $1704 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Edit.alg    ***********
-----          L: 
               C: if (ms_posFrame=2) then goto $1701 ...
$16F9: $9100:     [$0757] -> r16
$16FA: $0757:  
$16FB: $3002:     r16 = $02
$16FC: $F021:     if (Z=1) then goto $1701
$16FD: $940E:  F: CALL $756 (_print_string_)
$16FE: $0756:  
$16FF: $20 $00
$1700: $C003:  J: goto $1704 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$1701: $940E:  F: CALL $756 (_print_string_)
$1702: $0756:  
$1703: $3D $00
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Edit.alg    ***********
-----          L: 
-----          L: 
$1704: $940E:  F: CALL $A7C (_ms_printAddress)
$1705: $0A7C:  
-----          L: 
$1706: $940E:  F: CALL $AB4 (_ms_printKey)
$1707: $0AB4:  
-----          L: 
$1708: $940E:  F: CALL $AE9 (_ms_printIdle_m)
$1709: $0AE9:  
$170A: $940E:  F: CALL $756 (_print_string_)
$170B: $0756:  
$170C: $3A $00
$170D: $940E:  F: CALL $ABF (_ms_printIdle_s)
$170E: $0ABF:  
$170F: $940E:  F: CALL $756 (_print_string_)
$1710: $0756:  
$1711: $20 $00
-----          L: 
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $171C ...
$1712: $8109:     [Y+$01] -> r 16
$1713: $3000:     r16 = $00
$1714: $F039:     if (Z=1) then goto $171C
$1715: $940E:  F: CALL $B11 (_ms_printWork_m)
$1716: $0B11:  
$1717: $940E:  F: CALL $756 (_print_string_)
$1718: $0756:  
$1719: $3A $00
$171A: $940E:  F: CALL $AFD (_ms_printWork_s)
$171B: $0AFD:  
-----          L: 
-----          L: 
$171C: $940E:  F: CALL $355 (_ssd_clrRestLine)
$171D: $0355:  
$171E: $CF9C:  J: goto $16BB (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_posFrame >= 6) then goto $172B ...
$171F: $9100:     [$0757] -> r16
$1720: $0757:  
$1721: $3006:     r16 = $06
$1722: $F440:     if ( >= ) then goto $172B
$1723: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1724: $0355:  
               F: ms_posFrame++  ...
$1725: $9100:     [$0757] -> r16
$1726: $0757:  
$1727: $9503:     r16 ++
$1728: $9300:     r16 -> [$0757]
$1729: $0757:  
$172A: $CFF4:  J: goto $171F (RJMP)
-----          L: 
-----          L: 
               F: -> Y  ...
$172B: $91DF:     -> r29
$172C: $91CF:     -> r28
$172D: $9508:  F: RET (RET)
-----          V: _ms_naviBuild
$172E: $940E:  F: CALL $BEE (_ms_get_visAllObjNumber)
$172F: $0BEE:  
               C: if (ms_objNumber -= 0) then goto $1739 ...
$1730: $9100:     [$0750] -> r16
$1731: $0750:  
$1732: $3000:     r16 = $00
$1733: $F029:     if (Z=1) then goto $1739
               F: ms_objNumber--  ...
$1734: $9100:     [$0750] -> r16
$1735: $0750:  
$1736: $950A:     r16 --
$1737: $9300:     r16 -> [$0750]
$1738: $0750:  
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $174A ...
$1739: $9100:     [$010A] -> r16
$173A: $010A:  
$173B: $3001:     r16 = $01
$173C: $F069:     if (Z=1) then goto $174A
               C: if (ms_posBuild < ms_objNumber) then goto $1748 ...
$173D: $9100:     [$0753] -> r16
$173E: $0753:  
$173F: $9110:     [$0750] -> r17
$1740: $0750:  
$1741: $1701:     r16 = r17
$1742: $F428:     if ( >= ) then goto $1748
               F: ms_posBuild++  ...
$1743: $9100:     [$0753] -> r16
$1744: $0753:  
$1745: $9503:     r16 ++
$1746: $9300:     r16 -> [$0753]
$1747: $0753:  
-----          L: 
$1748: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1749: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posBuild >= 1) then goto $1753 ...
$174A: $9100:     [$0753] -> r16
$174B: $0753:  
$174C: $3001:     r16 = $01
$174D: $F028:     if ( < ) then goto $1753
               F: ms_posBuild--  ...
$174E: $9100:     [$0753] -> r16
$174F: $0753:  
$1750: $950A:     r16 --
$1751: $9300:     r16 -> [$0753]
$1752: $0753:  
$1753: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1754: $9508:  F: RET (RET)
-----          V: _ms_clickBuild
-----          L: 
               F: 0 -> ms_posBuildAction  ...
$1755: $E000:     $00 -> r16
$1756: $9300:     r16 -> [$0754]
$1757: $0754:  
               F: MS_MODE_STOP_BUILD_ACTION -> ms_mode  ...
$1758: $E00A:     $0A -> r16
$1759: $9300:     r16 -> [$0530]
$175A: $0530:  
$175B: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$175C: $9508:  F: RET (RET)
-----          V: _ms_visBuildAction
-----          L: 
$175D: $940E:  F: CALL $8DD (_ms_printMessage)
$175E: $08DD:  
-----          L: 
$175F: $940E:  F: CALL $756 (_print_string_)
$1760: $0756:  
$1761: $53 $45 $4C $45 $43 $54 $20 $41 $43 $54 $49 $4F $4E $01 $00 $00
$1769: $940E:  F: CALL $355 (_ssd_clrRestLine)
$176A: $0355:  
-----          L: 
$176B: $E000:  F: $00 -> r16 (0 -> r16)
$176C: $E014:  F: $04 -> r17 (4 -> r17)
$176D: $940E:  F: CALL $362 (_ssd_Pos_)
$176E: $0362:  
$176F: $9100:  F: [$0754] -> r16 (ms_posBuildAction -> r16)
$1770: $0754:  
               C: if (r16 -= 0) then goto $177F ...
$1771: $3000:     r16 = $00
$1772: $F461:     if (Z=0) then goto $177F
$1773: $940E:  F: CALL $756 (_print_string_)
$1774: $0756:  
$1775: $20 $20 $20 $20 $20 $20 $45 $64 $69 $74 $20 $2E $2E $2E $2E $01
$177D: $00 $00
$177E: $C037:  J: goto $17B6 (RJMP)
-----          L: 
               C: if (r16 -= 1) then goto $178D ...
$177F: $3001:     r16 = $01
$1780: $F461:     if (Z=0) then goto $178D
$1781: $940E:  F: CALL $756 (_print_string_)
$1782: $0756:  
$1783: $20 $20 $20 $20 $20 $2E $20 $44 $65 $6C $20 $20 $2E $2E $2E $01
$178B: $00 $00
$178C: $C029:  J: goto $17B6 (RJMP)
-----          L: 
               C: if (r16 -= 2) then goto $179B ...
$178D: $3002:     r16 = $02
$178E: $F461:     if (Z=0) then goto $179B
$178F: $940E:  F: CALL $756 (_print_string_)
$1790: $0756:  
$1791: $20 $20 $20 $20 $20 $2E $2E $20 $4D $6F $76 $65 $20 $2E $2E $01
$1799: $00 $00
$179A: $C01B:  J: goto $17B6 (RJMP)
-----          L: 
               C: if (r16 -= 3) then goto $17A9 ...
$179B: $3003:     r16 = $03
$179C: $F461:     if (Z=0) then goto $17A9
$179D: $940E:  F: CALL $756 (_print_string_)
$179E: $0756:  
$179F: $20 $20 $20 $20 $20 $2E $2E $2E $20 $41 $64 $64 $20 $20 $2E $01
$17A7: $00 $00
$17A8: $C00D:  J: goto $17B6 (RJMP)
-----          L: 
               C: if (r16 -= 4) then goto $17B6 ...
$17A9: $3004:     r16 = $04
$17AA: $F459:     if (Z=0) then goto $17B6
$17AB: $940E:  F: CALL $756 (_print_string_)
$17AC: $0756:  
$17AD: $20 $20 $20 $20 $20 $2E $2E $2E $2E $20 $42 $61 $63 $6B $01 $00
$17B5: $C000:  J: goto $17B6 (RJMP)
-----          L: 
-----          L: 
-----          L: _ms_visBuildAction_end
$17B6: $940E:  F: CALL $355 (_ssd_clrRestLine)
$17B7: $0355:  
-----          L: 
$17B8: $9508:  F: RET (RET)
-----          V: _ms_naviBuildAction
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $17C8 ...
$17B9: $9100:     [$010A] -> r16
$17BA: $010A:  
$17BB: $3001:     r16 = $01
$17BC: $F059:     if (Z=1) then goto $17C8
               C: if (ms_posBuildAction < 4) then goto $17C6 ...
$17BD: $9100:     [$0754] -> r16
$17BE: $0754:  
$17BF: $3004:     r16 = $04
$17C0: $F428:     if ( >= ) then goto $17C6
               F: ms_posBuildAction++  ...
$17C1: $9100:     [$0754] -> r16
$17C2: $0754:  
$17C3: $9503:     r16 ++
$17C4: $9300:     r16 -> [$0754]
$17C5: $0754:  
$17C6: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$17C7: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posBuildAction >= 1) then goto $17D1 ...
$17C8: $9100:     [$0754] -> r16
$17C9: $0754:  
$17CA: $3001:     r16 = $01
$17CB: $F028:     if ( < ) then goto $17D1
               F: ms_posBuildAction--  ...
$17CC: $9100:     [$0754] -> r16
$17CD: $0754:  
$17CE: $950A:     r16 --
$17CF: $9300:     r16 -> [$0754]
$17D0: $0754:  
$17D1: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$17D2: $9508:  F: RET (RET)
-----          V: _ms_clickBuildAction
               F: Y ->  ...
$17D3: $93CF:     r28 ->
$17D4: $93DF:     r29 ->
$17D5: $940E:  F: CALL $C05 (_ms_get_ObjPointerY)
$17D6: $0C05:  
-----          L: 
$17D7: $9100:  F: [$0754] -> r16 (ms_posBuildAction -> r16)
$17D8: $0754:  
               C: if (r16 -= 0) then goto $17E3 ...
$17D9: $3000:     r16 = $00
$17DA: $F441:     if (Z=0) then goto $17E3
               F: 0 -> ms_posBuildActionEdit  ...
$17DB: $E000:     $00 -> r16
$17DC: $9300:     r16 -> [$0755]
$17DD: $0755:  
               F: MS_MODE_STOP_BUILD_ACTION_EDIT -> ms_mode  ...
$17DE: $E604:     $64 -> r16
$17DF: $9300:     r16 -> [$0530]
$17E0: $0530:  
$17E1: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$17E2: $C053:  J: goto $1836 (RJMP)
-----          L: 
               C: if (r16 -= 1) then goto $17FC ...
$17E3: $3001:     r16 = $01
$17E4: $F4B9:     if (Z=0) then goto $17FC
$17E5: $940E:  F: CALL $C1D (_ms_do_ObjNumberTest)
$17E6: $0C1D:  
               C: if (ms_objNumber < 2) then goto $17F7 ...
$17E7: $9100:     [$0750] -> r16
$17E8: $0750:  
$17E9: $3002:     r16 = $02
$17EA: $F060:     if ( < ) then goto $17F7
               C: if ([Y+MS_OBJ_TYPE + MS_OBJ_SIZE] -= MS_TYPE_LIST_END) then goto $17F3 ...
$17EB: $8908:     [Y+$10] -> r 16
$17EC: $3F0F:     r16 = $FF
$17ED: $F429:     if (Z=0) then goto $17F3
               F: ms_posBuild--  ...
$17EE: $9100:     [$0753] -> r16
$17EF: $0753:  
$17F0: $950A:     r16 --
$17F1: $9300:     r16 -> [$0753]
$17F2: $0753:  
-----          L: 
               F: MS_TYPE_NUL -> [Y+MS_OBJ_TYPE]  ...
$17F3: $E000:     $00 -> r16
$17F4: $8308:     r16 -> [Y+$00]
$17F5: $940E:  F: CALL $C45 (_ms_do_ObjClean)
$17F6: $0C45:  
-----          L: 
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$17F7: $E001:     $01 -> r16
$17F8: $9300:     r16 -> [$0530]
$17F9: $0530:  
$17FA: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$17FB: $C03A:  J: goto $1836 (RJMP)
-----          L: 
               C: if (r16 -= 2) then goto $1803 ...
$17FC: $3002:     r16 = $02
$17FD: $F429:     if (Z=0) then goto $1803
               F: MS_MODE_STOP_BUILD_ACTION_MOVE -> ms_mode  ...
$17FE: $E606:     $66 -> r16
$17FF: $9300:     r16 -> [$0530]
$1800: $0530:  
$1801: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1802: $C033:  J: goto $1836 (RJMP)
-----          L: 
               C: if (r16 -= 3) then goto $182F ...
$1803: $3003:     r16 = $03
$1804: $F551:     if (Z=0) then goto $182F
$1805: $940E:  F: CALL $C31 (_ms_do_ObjTest)
$1806: $0C31:  
               C: if (ms_objNumber = 0) then goto $181E ...
$1807: $9100:     [$0750] -> r16
$1808: $0750:  
$1809: $3000:     r16 = $00
$180A: $F099:     if (Z=1) then goto $181E
$180B: $940E:  F: CALL $C6D (_ms_do_ObjSpace)
$180C: $0C6D:  
$180D: $940E:  F: CALL $C5C (_ms_do_ObjBlank)
$180E: $0C5C:  
               F: ms_posBuild++  ...
$180F: $9100:     [$0753] -> r16
$1810: $0753:  
$1811: $9503:     r16 ++
$1812: $9300:     r16 -> [$0753]
$1813: $0753:  
-----          L: 
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$1814: $E001:     $01 -> r16
$1815: $9300:     r16 -> [$0530]
$1816: $0530:  
$1817: $6031:  F: r19 ! $01 (1 -> f_displayVis)
               F: 100/STIMER_PERIOD_CALL -> [@STimer_Counter + DO_EDIT]  ...
$1818: $E00A:     $0A -> r16
$1819: $9300:     r16 -> [$0518]
$181A: $0518:  
               F: 100/STIMER_PERIOD_CALL -> [@STimer_Counter_Stop + DO_EDIT]  ...
$181B: $9300:     r16 -> [$051C]
$181C: $051C:  
$181D: $C018:  J: goto $1836 (RJMP)
-----          L: 
$181E: $940E:  F: CALL $8E9 (_ms_message_)
$181F: $08E9:  
$1820: $20 $2A $20 $6E $6F $74 $20 $61 $64 $64 $65 $64 $20 $2D $20 $66
$1828: $75 $6C $6C $00
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$182A: $E001:     $01 -> r16
$182B: $9300:     r16 -> [$0530]
$182C: $0530:  
$182D: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$182E: $C007:  J: goto $1836 (RJMP)
-----          L: 
               C: if (r16 -= 4) then goto $1836 ...
$182F: $3004:     r16 = $04
$1830: $F429:     if (Z=0) then goto $1836
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$1831: $E001:     $01 -> r16
$1832: $9300:     r16 -> [$0530]
$1833: $0530:  
$1834: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1835: $C000:  J: goto $1836 (RJMP)
-----          L: 
-----          L: _ms_clickBuildAction_end
               F: -> Y  ...
$1836: $91DF:     -> r29
$1837: $91CF:     -> r28
$1838: $9508:  F: RET (RET)
-----          V: _ms_visBuildActionEdit
               F: Y ->  ...
$1839: $93CF:     r28 ->
$183A: $93DF:     r29 ->
$183B: $940E:  F: CALL $C05 (_ms_get_ObjPointerY)
$183C: $0C05:  
-----          L: 
$183D: $940E:  F: CALL $8DD (_ms_printMessage)
$183E: $08DD:  
-----          L: 
$183F: $940E:  F: CALL $756 (_print_string_)
$1840: $0756:  
$1841: $45 $44 $49 $54 $20 $4C $49 $4E $45 $01 $00 $00
$1847: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1848: $0355:  
-----          L: 
$1849: $E000:  F: $00 -> r16 (0 -> r16)
$184A: $E014:  F: $04 -> r17 (4 -> r17)
$184B: $940E:  F: CALL $362 (_ssd_Pos_)
$184C: $0362:  
               C: if (ms_blink-=0) then goto $1856 ...
$184D: $9100:     [$0532] -> r16
$184E: $0532:  
$184F: $3000:     r16 = $00
$1850: $F429:     if (Z=0) then goto $1856
$1851: $940E:  F: CALL $756 (_print_string_)
$1852: $0756:  
$1853: $6F $01 $00 $00
$1855: $C004:  J: goto $185A (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$1856: $940E:  F: CALL $756 (_print_string_)
$1857: $0756:  
$1858: $2E $01 $00 $00
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Edit.alg    ***********
-----          L: 
               C: if (ms_blink -= 0) then goto $1865 ...
$185A: $9100:     [$0532] -> r16
$185B: $0532:  
$185C: $3000:     r16 = $00
$185D: $F439:     if (Z=0) then goto $1865
               C: if (ms_posBuildActionEdit = 0) then goto $1865 ...
$185E: $9100:     [$0755] -> r16
$185F: $0755:  
$1860: $3000:     r16 = $00
$1861: $F419:     if (Z=0) then goto $1865
$1862: $940E:  F: CALL $756 (_print_string_)
$1863: $0756:  
$1864: $03 $00
-----          L: 
$1865: $940E:  F: CALL $A7C (_ms_printAddress)
$1866: $0A7C:  
-----          L: 
               C: if (ms_blink -= 0) then goto $1872 ...
$1867: $9100:     [$0532] -> r16
$1868: $0532:  
$1869: $3000:     r16 = $00
$186A: $F439:     if (Z=0) then goto $1872
               C: if (ms_posBuildActionEdit = 1) then goto $1872 ...
$186B: $9100:     [$0755] -> r16
$186C: $0755:  
$186D: $3001:     r16 = $01
$186E: $F419:     if (Z=0) then goto $1872
$186F: $940E:  F: CALL $756 (_print_string_)
$1870: $0756:  
$1871: $03 $00
-----          L: 
$1872: $940E:  F: CALL $AB4 (_ms_printKey)
$1873: $0AB4:  
-----          L: 
               C: if (ms_blink -= 0) then goto $187F ...
$1874: $9100:     [$0532] -> r16
$1875: $0532:  
$1876: $3000:     r16 = $00
$1877: $F439:     if (Z=0) then goto $187F
               C: if (ms_posBuildActionEdit = 2) then goto $187F ...
$1878: $9100:     [$0755] -> r16
$1879: $0755:  
$187A: $3002:     r16 = $02
$187B: $F419:     if (Z=0) then goto $187F
$187C: $940E:  F: CALL $756 (_print_string_)
$187D: $0756:  
$187E: $03 $00
-----          L: 
$187F: $940E:  F: CALL $AE9 (_ms_printIdle_m)
$1880: $0AE9:  
$1881: $940E:  F: CALL $756 (_print_string_)
$1882: $0756:  
$1883: $01 $3A $00 $00
-----          L: 
               C: if (ms_blink -= 0) then goto $1890 ...
$1885: $9100:     [$0532] -> r16
$1886: $0532:  
$1887: $3000:     r16 = $00
$1888: $F439:     if (Z=0) then goto $1890
               C: if (ms_posBuildActionEdit = 3) then goto $1890 ...
$1889: $9100:     [$0755] -> r16
$188A: $0755:  
$188B: $3003:     r16 = $03
$188C: $F419:     if (Z=0) then goto $1890
$188D: $940E:  F: CALL $756 (_print_string_)
$188E: $0756:  
$188F: $03 $00
-----          L: 
$1890: $940E:  F: CALL $ABF (_ms_printIdle_s)
$1891: $0ABF:  
$1892: $940E:  F: CALL $756 (_print_string_)
$1893: $0756:  
$1894: $01 $20 $00 $00
-----          L: 
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $18B7 ...
$1896: $8109:     [Y+$01] -> r 16
$1897: $3000:     r16 = $00
$1898: $F0F1:     if (Z=1) then goto $18B7
-----          L: 
               C: if (ms_blink -= 0) then goto $18A4 ...
$1899: $9100:     [$0532] -> r16
$189A: $0532:  
$189B: $3000:     r16 = $00
$189C: $F439:     if (Z=0) then goto $18A4
               C: if (ms_posBuildActionEdit = 4) then goto $18A4 ...
$189D: $9100:     [$0755] -> r16
$189E: $0755:  
$189F: $3004:     r16 = $04
$18A0: $F419:     if (Z=0) then goto $18A4
$18A1: $940E:  F: CALL $756 (_print_string_)
$18A2: $0756:  
$18A3: $03 $00
-----          L: 
$18A4: $940E:  F: CALL $B11 (_ms_printWork_m)
$18A5: $0B11:  
$18A6: $940E:  F: CALL $756 (_print_string_)
$18A7: $0756:  
$18A8: $01 $3A $00 $00
-----          L: 
               C: if (ms_blink -= 0) then goto $18B5 ...
$18AA: $9100:     [$0532] -> r16
$18AB: $0532:  
$18AC: $3000:     r16 = $00
$18AD: $F439:     if (Z=0) then goto $18B5
               C: if (ms_posBuildActionEdit = 5) then goto $18B5 ...
$18AE: $9100:     [$0755] -> r16
$18AF: $0755:  
$18B0: $3005:     r16 = $05
$18B1: $F419:     if (Z=0) then goto $18B5
$18B2: $940E:  F: CALL $756 (_print_string_)
$18B3: $0756:  
$18B4: $03 $00
-----          L: 
$18B5: $940E:  F: CALL $AFD (_ms_printWork_s)
$18B6: $0AFD:  
-----          L: 
-----          L: 
$18B7: $940E:  F: CALL $756 (_print_string_)
$18B8: $0756:  
$18B9: $01 $00
$18BA: $940E:  F: CALL $355 (_ssd_clrRestLine)
$18BB: $0355:  
-----          L: 
               F: -> Y  ...
$18BC: $91DF:     -> r29
$18BD: $91CF:     -> r28
$18BE: $9508:  F: RET (RET)
-----          V: _ms_naviBuildActionEdit
-----          L: 
               F: Y ->  ...
$18BF: $93CF:     r28 ->
$18C0: $93DF:     r29 ->
$18C1: $940E:  F: CALL $C05 (_ms_get_ObjPointerY)
$18C2: $0C05:  
-----          L: 
-----          L: 
$18C3: $9100:  F: [$0755] -> r16 (ms_posBuildActionEdit -> r16)
$18C4: $0755:  
               C: if (r16 -= 0) then goto $18F5 ...
$18C5: $3000:     r16 = $00
$18C6: $F571:     if (Z=0) then goto $18F5
               C: if (EX_Enc_Pos = 1) then goto $18E1 ...
$18C7: $9100:     [$010A] -> r16
$18C8: $010A:  
$18C9: $3001:     r16 = $01
$18CA: $F0B1:     if (Z=1) then goto $18E1
$18CB: $8109:  F: [Y+$01] -> r 16 ([Y+MS_OBJ_ADDR] -> r16)
               C: if (r16 = 0) then goto $18DE ...
$18CC: $3000:     r16 = $00
$18CD: $F081:     if (Z=1) then goto $18DE
$18CE: $700F:  F: r16 & $0F (r16 & #b00001111)
$18CF: $8119:  F: [Y+$01] -> r 17 ([Y+MS_OBJ_ADDR] -> r17)
$18D0: $7F10:  F: r17 & $F0 (r17 & #b11110000)
-----          L: 
$18D1: $9503:  F: r16 ++ (r16++)
               C: if (r16 < 8) then goto $18DB ...
$18D2: $3008:     r16 = $08
$18D3: $F038:     if ( < ) then goto $18DB
               C: if (r17 >= 7*16) then goto $18D9 ...
$18D4: $3710:     r17 = $70
$18D5: $F418:     if ( >= ) then goto $18D9
$18D6: $E000:  F: $00 -> r16 (0 -> r16)
$18D7: $5F10:  F: r17 - $F0 (r17 + 16)
$18D8: $C002:  J: goto $18DB (RJMP)
-----          L: 
$18D9: $E007:  F: $07 -> r16 (7 -> r16)
$18DA: $E710:  F: $70 -> r17 (7*16 -> r17)
-----          L: 
$18DB: $2B01:  F: r16 ! r17 (r16 ! r17)
$18DC: $8309:  F: r16 -> [Y+$01] (r16 -> [Y+MS_OBJ_ADDR])
$18DD: $C087:  J: goto $1965 (RJMP)
-----          L: 
               F: 1*16 + 0 -> [Y+MS_OBJ_ADDR]  ...
$18DE: $E100:     $10 -> r16
$18DF: $8309:     r16 -> [Y+$01]
$18E0: $C084:  J: goto $1965 (RJMP)
-----          L: 
$18E1: $8109:  F: [Y+$01] -> r 16 ([Y+MS_OBJ_ADDR] -> r16)
               C: if (r16 = 1*16 + 0) then goto $18F2 ...
$18E2: $3100:     r16 = $10
$18E3: $F071:     if (Z=1) then goto $18F2
               C: if (r16 = 0) then goto $1965 ...
$18E4: $3000:     r16 = $00
$18E5: $F409:     if (Z=0) then goto $18E7
$18E6: $C07E:     goto $1965 (RJMP)
$18E7: $700F:  F: r16 & $0F (r16 & #b00001111)
$18E8: $8119:  F: [Y+$01] -> r 17 ([Y+MS_OBJ_ADDR] -> r17)
$18E9: $7F10:  F: r17 & $F0 (r17 & #b11110000)
-----          L: 
$18EA: $950A:  F: r16 -- (r16--)
               C: if (r16 < 9) then goto $18EF ...
$18EB: $3009:     r16 = $09
$18EC: $F010:     if ( < ) then goto $18EF
$18ED: $E007:  F: $07 -> r16 (7 -> r16)
$18EE: $5110:  F: r17 - $10 (r17 - 16)
-----          L: 
$18EF: $2B01:  F: r16 ! r17 (r16 ! r17)
$18F0: $8309:  F: r16 -> [Y+$01] (r16 -> [Y+MS_OBJ_ADDR])
$18F1: $C073:  J: goto $1965 (RJMP)
-----          L: 
               F: 0 -> [Y+MS_OBJ_ADDR]  ...
$18F2: $E000:     $00 -> r16
$18F3: $8309:     r16 -> [Y+$01]
$18F4: $C070:  J: goto $1965 (RJMP)
-----          L: 
               C: if (r16 -= 1) then goto $1901 ...
$18F5: $3001:     r16 = $01
$18F6: $F451:     if (Z=0) then goto $1901
               C: if (EX_Enc_Pos=1) then goto $18FE ...
$18F7: $9100:     [$010A] -> r16
$18F8: $010A:  
$18F9: $3001:     r16 = $01
$18FA: $F019:     if (Z=1) then goto $18FE
               F: 1->[Y+MS_OBJ_KEY]  ...
$18FB: $E001:     $01 -> r16
$18FC: $830A:     r16 -> [Y+$02]
$18FD: $C002:  J: goto $1900 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
               F: 0->[Y+MS_OBJ_KEY]  ...
$18FE: $E000:     $00 -> r16
$18FF: $830A:     r16 -> [Y+$02]
-----          L: 
$1900: $C064:  J: goto $1965 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Edit.alg    ***********
-----          L: 
               C: if (r16 -= 2) then goto $191F ...
$1901: $3002:     r16 = $02
$1902: $F4E1:     if (Z=0) then goto $191F
               C: if (EX_Enc_Pos = 1) then goto $1913 ...
$1903: $9100:     [$010A] -> r16
$1904: $010A:  
$1905: $3001:     r16 = $01
$1906: $F061:     if (Z=1) then goto $1913
               C: if ([Y+MS_OBJ_TIME_IDLE_M]:Word < 99) then goto $1912 ...
$1907: $810C:     [Y+$04] -> r 16
$1908: $3603:     r16 = $63
$1909: $810D:     [Y+$05] -> r 16
$190A: $4000:     r16 - $00 -
$190B: $F430:     if ( >= ) then goto $1912
               F: [Y+MS_OBJ_TIME_IDLE_M]:Word++  ...
$190C: $810C:     [Y+$04] -> r 16
$190D: $5F0F:     r16 - $FF
$190E: $830C:     r16 -> [Y+$04]
$190F: $810D:     [Y+$05] -> r 16
$1910: $4F0F:     r16 - $FF -
$1911: $830D:     r16 -> [Y+$05]
$1912: $C052:  J: goto $1965 (RJMP)
-----          L: 
               C: if ([Y+MS_OBJ_TIME_IDLE_M]:Word -= 0) then goto $191E ...
$1913: $810C:     [Y+$04] -> r 16
$1914: $3000:     r16 = $00
$1915: $810D:     [Y+$05] -> r 16
$1916: $4000:     r16 - $00 -
$1917: $F031:     if (Z=1) then goto $191E
               F: [Y+MS_OBJ_TIME_IDLE_M]:Word--  ...
$1918: $810C:     [Y+$04] -> r 16
$1919: $5001:     r16 - $01
$191A: $830C:     r16 -> [Y+$04]
$191B: $810D:     [Y+$05] -> r 16
$191C: $4000:     r16 - $00 -
$191D: $830D:     r16 -> [Y+$05]
$191E: $C046:  J: goto $1965 (RJMP)
-----          L: 
               C: if (r16 -= 3) then goto $1933 ...
$191F: $3003:     r16 = $03
$1920: $F491:     if (Z=0) then goto $1933
               C: if (EX_Enc_Pos = 1) then goto $192C ...
$1921: $9100:     [$010A] -> r16
$1922: $010A:  
$1923: $3001:     r16 = $01
$1924: $F039:     if (Z=1) then goto $192C
               C: if ([Y+MS_OBJ_TIME_IDLE_S] < 59) then goto $192B ...
$1925: $810B:     [Y+$03] -> r 16
$1926: $330B:     r16 = $3B
$1927: $F418:     if ( >= ) then goto $192B
               F: [Y+MS_OBJ_TIME_IDLE_S]++  ...
$1928: $810B:     [Y+$03] -> r 16
$1929: $9503:     r16 ++
$192A: $830B:     r16 -> [Y+$03]
$192B: $C039:  J: goto $1965 (RJMP)
-----          L: 
               C: if ([Y+MS_OBJ_TIME_IDLE_S] -= 0) then goto $1932 ...
$192C: $810B:     [Y+$03] -> r 16
$192D: $3000:     r16 = $00
$192E: $F019:     if (Z=1) then goto $1932
               F: [Y+MS_OBJ_TIME_IDLE_S]--  ...
$192F: $810B:     [Y+$03] -> r 16
$1930: $950A:     r16 --
$1931: $830B:     r16 -> [Y+$03]
$1932: $C032:  J: goto $1965 (RJMP)
-----          L: 
               C: if (r16 -= 4) then goto $1951 ...
$1933: $3004:     r16 = $04
$1934: $F4E1:     if (Z=0) then goto $1951
               C: if (EX_Enc_Pos = 1) then goto $1945 ...
$1935: $9100:     [$010A] -> r16
$1936: $010A:  
$1937: $3001:     r16 = $01
$1938: $F061:     if (Z=1) then goto $1945
               C: if ([Y+MS_OBJ_TIME_WORK_M]:Word < 99) then goto $1944 ...
$1939: $810F:     [Y+$07] -> r 16
$193A: $3603:     r16 = $63
$193B: $8508:     [Y+$08] -> r 16
$193C: $4000:     r16 - $00 -
$193D: $F430:     if ( >= ) then goto $1944
               F: [Y+MS_OBJ_TIME_WORK_M]:Word++  ...
$193E: $810F:     [Y+$07] -> r 16
$193F: $5F0F:     r16 - $FF
$1940: $830F:     r16 -> [Y+$07]
$1941: $8508:     [Y+$08] -> r 16
$1942: $4F0F:     r16 - $FF -
$1943: $8708:     r16 -> [Y+$08]
$1944: $C020:  J: goto $1965 (RJMP)
-----          L: 
               C: if ([Y+MS_OBJ_TIME_WORK_M]:Word -= 0) then goto $1950 ...
$1945: $810F:     [Y+$07] -> r 16
$1946: $3000:     r16 = $00
$1947: $8508:     [Y+$08] -> r 16
$1948: $4000:     r16 - $00 -
$1949: $F031:     if (Z=1) then goto $1950
               F: [Y+MS_OBJ_TIME_WORK_M]:Word--  ...
$194A: $810F:     [Y+$07] -> r 16
$194B: $5001:     r16 - $01
$194C: $830F:     r16 -> [Y+$07]
$194D: $8508:     [Y+$08] -> r 16
$194E: $4000:     r16 - $00 -
$194F: $8708:     r16 -> [Y+$08]
$1950: $C014:  J: goto $1965 (RJMP)
-----          L: 
               C: if (r16 -= 5) then goto $1965 ...
$1951: $3005:     r16 = $05
$1952: $F491:     if (Z=0) then goto $1965
               C: if (EX_Enc_Pos = 1) then goto $195E ...
$1953: $9100:     [$010A] -> r16
$1954: $010A:  
$1955: $3001:     r16 = $01
$1956: $F039:     if (Z=1) then goto $195E
               C: if ([Y+MS_OBJ_TIME_WORK_S] < 59) then goto $195D ...
$1957: $810E:     [Y+$06] -> r 16
$1958: $330B:     r16 = $3B
$1959: $F418:     if ( >= ) then goto $195D
               F: [Y+MS_OBJ_TIME_WORK_S]++  ...
$195A: $810E:     [Y+$06] -> r 16
$195B: $9503:     r16 ++
$195C: $830E:     r16 -> [Y+$06]
$195D: $C007:  J: goto $1965 (RJMP)
-----          L: 
               C: if ([Y+MS_OBJ_TIME_WORK_S] -= 0) then goto $1964 ...
$195E: $810E:     [Y+$06] -> r 16
$195F: $3000:     r16 = $00
$1960: $F019:     if (Z=1) then goto $1964
               F: [Y+MS_OBJ_TIME_WORK_S]--  ...
$1961: $810E:     [Y+$06] -> r 16
$1962: $950A:     r16 --
$1963: $830E:     r16 -> [Y+$06]
$1964: $C000:  J: goto $1965 (RJMP)
-----          L: 
-----          L: 
-----          L: _ms_naviBuildActionEdit_end
$1965: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
               F: -> Y  ...
$1966: $91DF:     -> r29
$1967: $91CF:     -> r28
$1968: $9508:  F: RET (RET)
-----          V: _ms_clickBuildActionEdit
-----          L: 
               F: Y ->  ...
$1969: $93CF:     r28 ->
$196A: $93DF:     r29 ->
$196B: $940E:  F: CALL $C05 (_ms_get_ObjPointerY)
$196C: $0C05:  
-----          L: 
-----          L: 
               F: ms_posBuildActionEdit++  ...
$196D: $9100:     [$0755] -> r16
$196E: $0755:  
$196F: $9503:     r16 ++
$1970: $9300:     r16 -> [$0755]
$1971: $0755:  
-----          L: 
               C: if ([Y+MS_OBJ_ADDR] -= 0) then goto $197E ...
$1972: $8109:     [Y+$01] -> r 16
$1973: $3000:     r16 = $00
$1974: $F449:     if (Z=0) then goto $197E
               C: if (ms_posBuildActionEdit >= 4) then goto $197D ...
$1975: $9100:     [$0755] -> r16
$1976: $0755:  
$1977: $3004:     r16 = $04
$1978: $F020:     if ( < ) then goto $197D
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$1979: $E001:     $01 -> r16
$197A: $9300:     r16 -> [$0530]
$197B: $0530:  
$197C: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$197D: $C008:  J: goto $1986 (RJMP)
-----          L: 
               C: if (ms_posBuildActionEdit >= 6) then goto $1986 ...
$197E: $9100:     [$0755] -> r16
$197F: $0755:  
$1980: $3006:     r16 = $06
$1981: $F020:     if ( < ) then goto $1986
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$1982: $E001:     $01 -> r16
$1983: $9300:     r16 -> [$0530]
$1984: $0530:  
$1985: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
-----          L: 
$1986: $6031:  F: r19 ! $01 (1 -> f_displayVis)
               F: -> Y  ...
$1987: $91DF:     -> r29
$1988: $91CF:     -> r28
$1989: $9508:  F: RET (RET)
-----          V: _ms_visBuildActionMove
               F: Y ->  ...
$198A: $93CF:     r28 ->
$198B: $93DF:     r29 ->
$198C: $940E:  F: CALL $C05 (_ms_get_ObjPointerY)
$198D: $0C05:  
-----          L: 
$198E: $940E:  F: CALL $8DD (_ms_printMessage)
$198F: $08DD:  
-----          L: 
$1990: $940E:  F: CALL $756 (_print_string_)
$1991: $0756:  
$1992: $4D $4F $56 $45 $20 $4C $49 $4E $45 $01 $00 $00
$1998: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1999: $0355:  
$199A: $CD19:  J: goto $16B4 (RJMP)
-----          V: _ms_naviBuildActionMove
               F: Y ->  ...
$199B: $93CF:     r28 ->
$199C: $93DF:     r29 ->
$199D: $940E:  F: CALL $C05 (_ms_get_ObjPointerY)
$199E: $0C05:  
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $19A6 ...
$199F: $9100:     [$010A] -> r16
$19A0: $010A:  
$19A1: $3001:     r16 = $01
$19A2: $F019:     if (Z=1) then goto $19A6
$19A3: $940E:  F: CALL $C9A (_ms_do_ObjSwitchUp)
$19A4: $0C9A:  
$19A5: $C002:  J: goto $19A8 (RJMP)
-----          L: 
$19A6: $940E:  F: CALL $C81 (_ms_do_ObjSwitchDown)
$19A7: $0C81:  
-----          L: 
$19A8: $6031:  F: r19 ! $01 (1 -> f_displayVis)
               F: -> Y  ...
$19A9: $91DF:     -> r29
$19AA: $91CF:     -> r28
$19AB: $9508:  F: RET (RET)
-----          V: _ms_clickBuildActionMove
-----          L: 
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$19AC: $E001:     $01 -> r16
$19AD: $9300:     r16 -> [$0530]
$19AE: $0530:  
$19AF: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$19B0: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Manual.alg    ***********
-----          V: _ms_visManual
               F: Y ->  ...
$19B1: $93CF:     r28 ->
$19B2: $93DF:     r29 ->
-----          L: 
$19B3: $940E:  F: CALL $8DD (_ms_printMessage)
$19B4: $08DD:  
-----          L: 
$19B5: $940E:  F: CALL $756 (_print_string_)
$19B6: $0756:  
$19B7: $4D $41 $4E $55 $41 $4C $20 $43 $4F $4E $54 $52 $4F $4C $01 $00
$19BF: $940E:  F: CALL $355 (_ssd_clrRestLine)
$19C0: $0355:  
-----          L: 
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$19C1: $E4C0:     $40 -> r28
$19C2: $E0D5:     $05 -> r29
               F: -1 -> ms_posFrame  ...
$19C3: $EF0F:     $FF -> r16
$19C4: $9300:     r16 -> [$0757]
$19C5: $0757:  
               F: -1 -> ms_objCurrentScan  ...
$19C6: $9300:     r16 -> [$0751]
$19C7: $0751:  
-----          L: 
               F: ms_posFrame++  ...
$19C8: $9100:     [$0757] -> r16
$19C9: $0757:  
$19CA: $9503:     r16 ++
$19CB: $9300:     r16 -> [$0757]
$19CC: $0757:  
-----          L: 
               F: ms_objCurrentScan++  ...
$19CD: $9100:     [$0751] -> r16
$19CE: $0751:  
$19CF: $9503:     r16 ++
$19D0: $9300:     r16 -> [$0751]
$19D1: $0751:  
-----          L: 
$19D2: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if (ms_posFrame >= 6) then goto $1A07 ...
$19D3: $9100:     [$0757] -> r16
$19D4: $0757:  
$19D5: $3006:     r16 = $06
$19D6: $F580:     if ( >= ) then goto $1A07
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $1A07 ...
$19D7: $8108:     [Y+$00] -> r 16
$19D8: $3F0F:     r16 = $FF
$19D9: $F169:     if (Z=1) then goto $1A07
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $19D2 ...
$19DA: $8108:     [Y+$00] -> r 16
$19DB: $3001:     r16 = $01
$19DC: $F7A9:     if (Z=0) then goto $19D2
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $19D2 ...
$19DD: $8109:     [Y+$01] -> r 16
$19DE: $3000:     r16 = $00
$19DF: $F391:     if (Z=1) then goto $19D2
-----          L: 
$19E0: $9100:  F: [$0751] -> r16 (ms_objCurrentScan -> r16)
$19E1: $0751:  
$19E2: $5F0E:  F: r16 - $FE (r16 + 2)
               F: r16 - ms_posManual  ...
$19E3: $9110:     [$0756] -> r17
$19E4: $0756:  
$19E5: $1B01:     r16 - r17
               C: if (r16 >= 6) then goto $19CD ...
$19E6: $3006:     r16 = $06
$19E7: $F728:     if ( >= ) then goto $19CD
-----          L: 
-----          L: 
$19E8: $9100:  F: [$0757] -> r16 (ms_posFrame -> r16)
$19E9: $0757:  
               F: r16 + ms_posManual  ...
$19EA: $9110:     [$0756] -> r17
$19EB: $0756:  
$19EC: $0F01:     r16 + r17
               C: if (r16 >= 2) then goto $19F7 ...
$19ED: $3002:     r16 = $02
$19EE: $F440:     if ( >= ) then goto $19F7
$19EF: $940E:  F: CALL $355 (_ssd_clrRestLine)
$19F0: $0355:  
               F: ms_posFrame++  ...
$19F1: $9100:     [$0757] -> r16
$19F2: $0757:  
$19F3: $9503:     r16 ++
$19F4: $9300:     r16 -> [$0757]
$19F5: $0757:  
$19F6: $CFF1:  J: goto $19E8 (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_posFrame=2) then goto $19FF ...
$19F7: $9100:     [$0757] -> r16
$19F8: $0757:  
$19F9: $3002:     r16 = $02
$19FA: $F021:     if (Z=1) then goto $19FF
$19FB: $940E:  F: CALL $756 (_print_string_)
$19FC: $0756:  
$19FD: $20 $00
$19FE: $C003:  J: goto $1A02 (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$19FF: $940E:  F: CALL $756 (_print_string_)
$1A00: $0756:  
$1A01: $3E $00
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Manual.alg    ***********
-----          L: 
$1A02: $940E:  F: CALL $A7C (_ms_printAddress)
$1A03: $0A7C:  
-----          L: 
$1A04: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1A05: $0355:  
$1A06: $CFC1:  J: goto $19C8 (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_posFrame >= 6) then goto $1A13 ...
$1A07: $9100:     [$0757] -> r16
$1A08: $0757:  
$1A09: $3006:     r16 = $06
$1A0A: $F440:     if ( >= ) then goto $1A13
$1A0B: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1A0C: $0355:  
               F: ms_posFrame++  ...
$1A0D: $9100:     [$0757] -> r16
$1A0E: $0757:  
$1A0F: $9503:     r16 ++
$1A10: $9300:     r16 -> [$0757]
$1A11: $0757:  
$1A12: $CFF4:  J: goto $1A07 (RJMP)
-----          L: 
-----          L: 
               F: -> Y  ...
$1A13: $91DF:     -> r29
$1A14: $91CF:     -> r28
$1A15: $9508:  F: RET (RET)
-----          V: _ms_visManual_alt
               F: Y ->  ...
$1A16: $93CF:     r28 ->
$1A17: $93DF:     r29 ->
-----          L: 
$1A18: $940E:  F: CALL $8DD (_ms_printMessage)
$1A19: $08DD:  
-----          L: 
$1A1A: $940E:  F: CALL $756 (_print_string_)
$1A1B: $0756:  
$1A1C: $4D $41 $4E $55 $41 $4C $20 $43 $4F $4E $54 $52 $4F $4C $01 $00
$1A24: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1A25: $0355:  
-----          L: 
$1A26: $E000:  F: $00 -> r16 (0 -> r16)
$1A27: $9110:  F: [$0761] -> r17 (ms_preScan -> r17)
$1A28: $0761:  
-----          L: 
$1A29: $9516:  F: r17 >> (r17>>)
$1A2A: $F408:  C: if (C=0) then goto $1A2C (C = 1)
$1A2B: $5F08:  F: r16 - $F8 (r16 + 8)
               C: if (r17 -= 0) then goto $1A29 ...
$1A2C: $3010:     r17 = $00
$1A2D: $F7D9:     if (Z=0) then goto $1A29
-----          L: 
-----          L: 
               F: -1 -> ms_posFrame  ...
$1A2E: $EF0F:     $FF -> r16
$1A2F: $9300:     r16 -> [$0757]
$1A30: $0757:  
               F: -1 -> ms_objCurrentScan  ...
$1A31: $9300:     r16 -> [$0751]
$1A32: $0751:  
-----          L: 
               F: ms_posFrame++  ...
$1A33: $9100:     [$0757] -> r16
$1A34: $0757:  
$1A35: $9503:     r16 ++
$1A36: $9300:     r16 -> [$0757]
$1A37: $0757:  
-----          L: 
               F: ms_objCurrentScan++  ...
$1A38: $9100:     [$0751] -> r16
$1A39: $0751:  
$1A3A: $9503:     r16 ++
$1A3B: $9300:     r16 -> [$0751]
$1A3C: $0751:  
-----          L: 
-----          L: 
$1A3D: $9100:  F: [$0751] -> r16 (ms_objCurrentScan -> r16)
$1A3E: $0751:  
$1A3F: $5F0E:  F: r16 - $FE (r16 + 2)
               F: r16 - ms_posManual  ...
$1A40: $9110:     [$0756] -> r17
$1A41: $0756:  
$1A42: $1B01:     r16 - r17
               C: if (r16 >= 6) then goto $1A38 ...
$1A43: $3006:     r16 = $06
$1A44: $F798:     if ( >= ) then goto $1A38
-----          L: 
-----          L: 
$1A45: $9100:  F: [$0757] -> r16 (ms_posFrame -> r16)
$1A46: $0757:  
               F: r16 + ms_posManual  ...
$1A47: $9110:     [$0756] -> r17
$1A48: $0756:  
$1A49: $0F01:     r16 + r17
               C: if (r16 >= 2) then goto $1A54 ...
$1A4A: $3002:     r16 = $02
$1A4B: $F440:     if ( >= ) then goto $1A54
$1A4C: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1A4D: $0355:  
               F: ms_posFrame++  ...
$1A4E: $9100:     [$0757] -> r16
$1A4F: $0757:  
$1A50: $9503:     r16 ++
$1A51: $9300:     r16 -> [$0757]
$1A52: $0757:  
$1A53: $CFF1:  J: goto $1A45 (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_posFrame=2) then goto $1A5C ...
$1A54: $9100:     [$0757] -> r16
$1A55: $0757:  
$1A56: $3002:     r16 = $02
$1A57: $F021:     if (Z=1) then goto $1A5C
$1A58: $940E:  F: CALL $756 (_print_string_)
$1A59: $0756:  
$1A5A: $20 $00
$1A5B: $C003:  J: goto $1A5F (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
$1A5C: $940E:  F: CALL $756 (_print_string_)
$1A5D: $0756:  
$1A5E: $3E $00
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Manual.alg    ***********
-----          L: 
$1A5F: $940E:  F: CALL $A7C (_ms_printAddress)
$1A60: $0A7C:  
-----          L: 
$1A61: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1A62: $0355:  
$1A63: $CFCF:  J: goto $1A33 (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_posFrame >= 6) then goto $1A70 ...
$1A64: $9100:     [$0757] -> r16
$1A65: $0757:  
$1A66: $3006:     r16 = $06
$1A67: $F440:     if ( >= ) then goto $1A70
$1A68: $940E:  F: CALL $355 (_ssd_clrRestLine)
$1A69: $0355:  
               F: ms_posFrame++  ...
$1A6A: $9100:     [$0757] -> r16
$1A6B: $0757:  
$1A6C: $9503:     r16 ++
$1A6D: $9300:     r16 -> [$0757]
$1A6E: $0757:  
$1A6F: $CFF4:  J: goto $1A64 (RJMP)
-----          L: 
-----          L: 
               F: -> Y  ...
$1A70: $91DF:     -> r29
$1A71: $91CF:     -> r28
$1A72: $9508:  F: RET (RET)
-----          V: _ms_naviManual_alt
$1A73: $940E:  F: CALL $BBD (_ms_get_visRelayNumber)
$1A74: $0BBD:  
               C: if (ms_objNumber -= 0) then goto $1A7E ...
$1A75: $9100:     [$0750] -> r16
$1A76: $0750:  
$1A77: $3000:     r16 = $00
$1A78: $F029:     if (Z=1) then goto $1A7E
               F: ms_objNumber--  ...
$1A79: $9100:     [$0750] -> r16
$1A7A: $0750:  
$1A7B: $950A:     r16 --
$1A7C: $9300:     r16 -> [$0750]
$1A7D: $0750:  
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $1A8F ...
$1A7E: $9100:     [$010A] -> r16
$1A7F: $010A:  
$1A80: $3001:     r16 = $01
$1A81: $F069:     if (Z=1) then goto $1A8F
               C: if (ms_posManual < ms_objNumber) then goto $1A8D ...
$1A82: $9100:     [$0756] -> r16
$1A83: $0756:  
$1A84: $9110:     [$0750] -> r17
$1A85: $0750:  
$1A86: $1701:     r16 = r17
$1A87: $F428:     if ( >= ) then goto $1A8D
               F: ms_posManual++  ...
$1A88: $9100:     [$0756] -> r16
$1A89: $0756:  
$1A8A: $9503:     r16 ++
$1A8B: $9300:     r16 -> [$0756]
$1A8C: $0756:  
-----          L: 
$1A8D: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1A8E: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posManual >= 1) then goto $1A98 ...
$1A8F: $9100:     [$0756] -> r16
$1A90: $0756:  
$1A91: $3001:     r16 = $01
$1A92: $F028:     if ( < ) then goto $1A98
               F: ms_posManual--  ...
$1A93: $9100:     [$0756] -> r16
$1A94: $0756:  
$1A95: $950A:     r16 --
$1A96: $9300:     r16 -> [$0756]
$1A97: $0756:  
$1A98: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1A99: $9508:  F: RET (RET)
-----          V: _ms_clickManual_alt
               F: Y ->  ...
$1A9A: $93CF:     r28 ->
$1A9B: $93DF:     r29 ->
-----          L: 
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$1A9C: $E4C0:     $40 -> r28
$1A9D: $E0D5:     $05 -> r29
               F: -1 -> ms_objCurrentScan  ...
$1A9E: $EF0F:     $FF -> r16
$1A9F: $9300:     r16 -> [$0751]
$1AA0: $0751:  
-----          L: 
-----          L: 
               F: ms_objCurrentScan++  ...
$1AA1: $9100:     [$0751] -> r16
$1AA2: $0751:  
$1AA3: $9503:     r16 ++
$1AA4: $9300:     r16 -> [$0751]
$1AA5: $0751:  
-----          L: 
$1AA6: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $1AC0 ...
$1AA7: $8108:     [Y+$00] -> r 16
$1AA8: $3F0F:     r16 = $FF
$1AA9: $F0B1:     if (Z=1) then goto $1AC0
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $1AA6 ...
$1AAA: $8108:     [Y+$00] -> r 16
$1AAB: $3001:     r16 = $01
$1AAC: $F7C9:     if (Z=0) then goto $1AA6
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $1AA6 ...
$1AAD: $8109:     [Y+$01] -> r 16
$1AAE: $3000:     r16 = $00
$1AAF: $F3B1:     if (Z=1) then goto $1AA6
               C: if (ms_objCurrentScan -= ms_posManual) then goto $1AA1 ...
$1AB0: $9100:     [$0751] -> r16
$1AB1: $0751:  
$1AB2: $9110:     [$0756] -> r17
$1AB3: $0756:  
$1AB4: $1701:     r16 = r17
$1AB5: $F759:     if (Z=0) then goto $1AA1
               C: if ([Y+MS_OBJ_ORDER]=0) then goto $1ABC ...
$1AB6: $8509:     [Y+$09] -> r 16
$1AB7: $3000:     r16 = $00
$1AB8: $F019:     if (Z=1) then goto $1ABC
               F: 0->[Y+MS_OBJ_ORDER]  ...
$1AB9: $E000:     $00 -> r16
$1ABA: $8709:     r16 -> [Y+$09]
$1ABB: $C002:  J: goto $1ABE (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
               F: 255->[Y+MS_OBJ_ORDER]  ...
$1ABC: $EF0F:     $FF -> r16
$1ABD: $8709:     r16 -> [Y+$09]
-----          L: 
               F: 128->[Y+MS_OBJ_STATUS]  ...
$1ABE: $E800:     $80 -> r16
$1ABF: $870A:     r16 -> [Y+$0A]
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Manual.alg    ***********
-----          L: 
-----          L: 
$1AC0: $6031:  F: r19 ! $01 (1 -> f_displayVis)
               F: -> Y  ...
$1AC1: $91DF:     -> r29
$1AC2: $91CF:     -> r28
$1AC3: $9508:  F: RET (RET)
-----          V: _ms_naviManual
$1AC4: $940E:  F: CALL $BBD (_ms_get_visRelayNumber)
$1AC5: $0BBD:  
               C: if (ms_objNumber -= 0) then goto $1ACF ...
$1AC6: $9100:     [$0750] -> r16
$1AC7: $0750:  
$1AC8: $3000:     r16 = $00
$1AC9: $F029:     if (Z=1) then goto $1ACF
               F: ms_objNumber--  ...
$1ACA: $9100:     [$0750] -> r16
$1ACB: $0750:  
$1ACC: $950A:     r16 --
$1ACD: $9300:     r16 -> [$0750]
$1ACE: $0750:  
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $1AE0 ...
$1ACF: $9100:     [$010A] -> r16
$1AD0: $010A:  
$1AD1: $3001:     r16 = $01
$1AD2: $F069:     if (Z=1) then goto $1AE0
               C: if (ms_posManual < ms_objNumber) then goto $1ADE ...
$1AD3: $9100:     [$0756] -> r16
$1AD4: $0756:  
$1AD5: $9110:     [$0750] -> r17
$1AD6: $0750:  
$1AD7: $1701:     r16 = r17
$1AD8: $F428:     if ( >= ) then goto $1ADE
               F: ms_posManual++  ...
$1AD9: $9100:     [$0756] -> r16
$1ADA: $0756:  
$1ADB: $9503:     r16 ++
$1ADC: $9300:     r16 -> [$0756]
$1ADD: $0756:  
-----          L: 
$1ADE: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1ADF: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posManual >= 1) then goto $1AE9 ...
$1AE0: $9100:     [$0756] -> r16
$1AE1: $0756:  
$1AE2: $3001:     r16 = $01
$1AE3: $F028:     if ( < ) then goto $1AE9
               F: ms_posManual--  ...
$1AE4: $9100:     [$0756] -> r16
$1AE5: $0756:  
$1AE6: $950A:     r16 --
$1AE7: $9300:     r16 -> [$0756]
$1AE8: $0756:  
$1AE9: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1AEA: $9508:  F: RET (RET)
-----          V: _ms_clickManual
               F: Y ->  ...
$1AEB: $93CF:     r28 ->
$1AEC: $93DF:     r29 ->
-----          L: 
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$1AED: $E4C0:     $40 -> r28
$1AEE: $E0D5:     $05 -> r29
               F: -1 -> ms_objCurrentScan  ...
$1AEF: $EF0F:     $FF -> r16
$1AF0: $9300:     r16 -> [$0751]
$1AF1: $0751:  
-----          L: 
-----          L: 
               F: ms_objCurrentScan++  ...
$1AF2: $9100:     [$0751] -> r16
$1AF3: $0751:  
$1AF4: $9503:     r16 ++
$1AF5: $9300:     r16 -> [$0751]
$1AF6: $0751:  
-----          L: 
$1AF7: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $1B11 ...
$1AF8: $8108:     [Y+$00] -> r 16
$1AF9: $3F0F:     r16 = $FF
$1AFA: $F0B1:     if (Z=1) then goto $1B11
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $1AF7 ...
$1AFB: $8108:     [Y+$00] -> r 16
$1AFC: $3001:     r16 = $01
$1AFD: $F7C9:     if (Z=0) then goto $1AF7
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $1AF7 ...
$1AFE: $8109:     [Y+$01] -> r 16
$1AFF: $3000:     r16 = $00
$1B00: $F3B1:     if (Z=1) then goto $1AF7
               C: if (ms_objCurrentScan -= ms_posManual) then goto $1AF2 ...
$1B01: $9100:     [$0751] -> r16
$1B02: $0751:  
$1B03: $9110:     [$0756] -> r17
$1B04: $0756:  
$1B05: $1701:     r16 = r17
$1B06: $F759:     if (Z=0) then goto $1AF2
               C: if ([Y+MS_OBJ_ORDER]=0) then goto $1B0D ...
$1B07: $8509:     [Y+$09] -> r 16
$1B08: $3000:     r16 = $00
$1B09: $F019:     if (Z=1) then goto $1B0D
               F: 0->[Y+MS_OBJ_ORDER]  ...
$1B0A: $E000:     $00 -> r16
$1B0B: $8709:     r16 -> [Y+$09]
$1B0C: $C002:  J: goto $1B0F (RJMP)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
               F: 255->[Y+MS_OBJ_ORDER]  ...
$1B0D: $EF0F:     $FF -> r16
$1B0E: $8709:     r16 -> [Y+$09]
-----          L: 
               F: 128->[Y+MS_OBJ_STATUS]  ...
$1B0F: $E800:     $80 -> r16
$1B10: $870A:     r16 -> [Y+$0A]
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Manual.alg    ***********
-----          L: 
-----          L: 
$1B11: $6031:  F: r19 ! $01 (1 -> f_displayVis)
               F: -> Y  ...
$1B12: $91DF:     -> r29
$1B13: $91CF:     -> r28
$1B14: $9508:  F: RET (RET)
-----          V: _ms_do_preScan
-----          L: 
               F: 7 -> ms_objCurrentScan  ...
$1B15: $E007:     $07 -> r16
$1B16: $9300:     r16 -> [$0751]
$1B17: $0751:  
-----          L: 
$1B18: $7F3D:  F: r19 & $FD (0 -> f_arbitrationLost)
$1B19: $940E:  F: CALL $24D (_iic_start)
$1B1A: $024D:  
$1B1B: $9100:  F: [$0751] -> r16 (ms_objCurrentScan -> r16)
$1B1C: $0751:  
$1B1D: $0F00:  F: << r16 (<< r16)
$1B1E: $6400:  F: r16 ! $40 (r16 ! #b01000000)
$1B1F: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$1B20: $C004:  C: goto $1B25 (RJMP) (f_arbitrationLost = 1)
$1B21: $9300:  F: r16 -> [$00BB] (r16 -> TWDR)
$1B22: $00BB:  
$1B23: $940E:  F: CALL $25D (_iic_send_)
$1B24: $025D:  
*********   D:\work\MultiSwitch\Firmwares\Base_v2\iic.alg    ***********
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Manual.alg    ***********
-----          L: 
               C: if (iic_status -= MT_SLA_ACK) then goto $1B2C ...
$1B25: $3148:     r20 = $18
$1B26: $F429:     if (Z=0) then goto $1B2C
               F: 1 -> ms_preScan.0  ...
$1B27: $9100:     [$0761] -> r16
$1B28: $0761:  
$1B29: $6001:     r16 ! $01
$1B2A: $9300:     r16 -> [$0761]
$1B2B: $0761:  
-----          L: 
$1B2C: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$1B2D: $C005:  C: goto $1B33 (RJMP) (f_arbitrationLost = 1)
               F: 128+0 -> TWDR  ...
$1B2E: $E800:     $80 -> r16
$1B2F: $9300:     r16 -> [$00BB]
$1B30: $00BB:  
$1B31: $940E:  F: CALL $25D (_iic_send_)
$1B32: $025D:  
*********   D:\work\MultiSwitch\Firmwares\Base_v2\iic.alg    ***********
-----          L: 
$1B33: $940E:  F: CALL $26F (_iic_stop)
$1B34: $026F:  
$1B35: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$1B36: $CFE1:  C: goto $1B18 (RJMP) (f_arbitrationLost = 1)
               F: << ms_preScan  ...
$1B37: $9100:     [$0761] -> r16
$1B38: $0761:  
$1B39: $0F00:     << r16
$1B3A: $9300:     r16 -> [$0761]
$1B3B: $0761:  
*********   D:\work\MultiSwitch\Firmwares\Base_v2\ms_Manual.alg    ***********
-----          L: 
               C: if (ms_objCurrentScan --) then goto $1B18 ...
$1B3C: $9100:     [$0751] -> r16
$1B3D: $0751:  
$1B3E: $5001:     r16 - $01
$1B3F: $9300:     r16 -> [$0751]
$1B40: $0751:  
$1B41: $F6B1:     if (Z=0) then goto $1B18
-----          L: 
$1B42: $9508:  F: RET (RET)
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          V: Reset
$1B43: $EF0F:  S: $FF -> r16 ($FF->r16)
$1B44: $BF0D:  S: r16 -> p$3D (r16->p61)
$1B45: $E008:  S: $08 -> r16 ($08->r16)
$1B46: $BF0E:  S: r16 -> p$3E (r16->p62)
-----          L: 
$1B47: $9100:  S: [$0060] -> r16 (WDTCSR->r16)
$1B48: $0060:  
$1B49: $6108:  S: r16 ! $18 (r16 ! $18)
$1B4A: $9300:  S: r16 -> [$0060] (r16->WDTCSR)
$1B4B: $0060:  
$1B4C: $E00E:  S: $0E -> r16 ($0E->r16)
$1B4D: $9300:  S: r16 -> [$0060] (r16->WDTCSR)
$1B4E: $0060:  
$1B4F: $95A8:  S: WDR (WDR)
-----          L: 
               F: 100-1 -> r16:Word  ...
$1B50: $E603:     $63 -> r16
$1B51: $E010:     $00 -> r17
$1B52: $940E:  F: CALL $34 (_Wait_ms_)
$1B53: $0034:  
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Wait.alg    ***********
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
               F: SRAM_Org -> Z  ...
$1B54: $E0E0:     $00 -> r30
$1B55: $E0F1:     $01 -> r31
$1B56: $E000:  F: $00 -> r16 (0 -> r16)
-----          L: 
$1B57: $9301:  F: r16 -> [Z++] (r16 -> [Z++])
               C: if (Z -= SRAM_Size) then goto $1B57 ...
$1B58: $30E0:     r30 = $00
$1B59: $E019:     $09 -> r17
$1B5A: $07F1:     r31 = r17=
$1B5B: $F7D9:     if (Z=0) then goto $1B57
-----          L: 
               F: 30 -> Z  ...
$1B5C: $E1EE:     $1E -> r30
$1B5D: $E0F0:     $00 -> r31
-----          L: 
$1B5E: $95EA:  F: r30 -- (ZL --)
$1B5F: $8300:  F: r16 -> [Z] (r16 -> [Z])
$1B60: $F7E9:  C: if (Z=0) then goto $1B5E (-=)
-----          L: 
-----          L: 
$1B61: $2733:  F: ^ r19 (^Flags)
-----          L: 
-----          L: 
$1B62: $940E:  F: CALL $55 (_PWM_Init)
$1B63: $0055:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1B64: $940E:  F: CALL $A5 (_EX_Key_Init)
$1B65: $00A5:  
-----          L: 
$1B66: $940E:  F: CALL $DD (_EX_Enc_Init)
$1B67: $00DD:  
-----          L: 
$1B68: $940E:  F: CALL $136 (_UART_Init)
$1B69: $0136:  
-----          L: 
$1B6A: $940E:  F: CALL $21B (_STimer_Init)
$1B6B: $021B:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1B6C: $940E:  F: CALL $23D (_iic_init)
$1B6D: $023D:  
-----          L: 
$1B6E: $940E:  F: CALL $5A9 (_ssd1306_Init)
$1B6F: $05A9:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1B70: $940E:  F: CALL $B3B (_ms_init)
$1B71: $0B3B:  
-----          L: 
$1B72: $940E:  F: CALL $D54 (_ADC_init)
$1B73: $0D54:  
-----          L: 
-----          L: 
$1B74: $9478:  F: 1 -> I (1 -> I)
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Programm.alg    ***********
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
               F: 1000/STIMER_PERIOD_CALL -> [@STimer_Counter + DO_SEC]  ...
$1B75: $E604:     $64 -> r16
$1B76: $9300:     r16 -> [$0515]
$1B77: $0515:  
               F: 1000/STIMER_PERIOD_CALL -> [@STimer_Counter_Stop + DO_SEC]  ...
$1B78: $9300:     r16 -> [$0519]
$1B79: $0519:  
               F: 500/STIMER_PERIOD_CALL -> [@STimer_Counter + DO_BLINK]  ...
$1B7A: $E302:     $32 -> r16
$1B7B: $9300:     r16 -> [$0517]
$1B7C: $0517:  
               F: 500/STIMER_PERIOD_CALL -> [@STimer_Counter_Stop + DO_BLINK]  ...
$1B7D: $9300:     r16 -> [$051B]
$1B7E: $051B:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1B7F: $6038:  F: r19 ! $08 (1 -> f_resetAllRelay)
-----          L: 
-----          L: 
               C: if (ms_mode-= MS_MODE_STOP_MANUAL) then goto $1B84 ...
$1B80: $9100:     [$0530] -> r16
$1B81: $0530:  
$1B82: $3002:     r16 = $02
$1B83: $F401:     if (Z=0) then goto $1B84
-----          L: 
-----          L: 
$1B84: $FF32:  C: if (r19.2=1 then SKIP (f_doSec = 0)
$1B85: $C005:  C: goto $1B8B (RJMP) (f_doSec = 0)
$1B86: $940E:  F: CALL $DBF (_ms_ConditionsSwitchProg)
$1B87: $0DBF:  
$1B88: $940E:  F: CALL $CC5 (_ms_timersWork)
$1B89: $0CC5:  
$1B8A: $7F3B:  F: r19 & $FB (0 -> f_doSec)
-----          L: 
-----          L: 
$1B8B: $FF30:  C: if (r19.0=1 then SKIP (f_displayVis = 0)
$1B8C: $C00E:  C: goto $1B9B (RJMP) (f_displayVis = 0)
$1B8D: $940E:  F: CALL $90E (_ms_do_order)
$1B8E: $090E:  
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Wait.alg    ***********
-----          L: 
               F: (100*CPU_Clock_Frequency/1000000-2)/4 -> r16:Word  ...
$1B8F: $E80F:     $8F -> r16
$1B90: $E011:     $01 -> r17
-----          L: 
               C: if (r16:Word --) then goto $1B91 ...
$1B91: $5001:     r16 - $01
$1B92: $4010:     r17 - $00 -
$1B93: $F7E9:     if (Z=0) then goto $1B91
$1B94: $0000:  F: NOP (NOP)
-----          L: 
-----          L: 
-----          L: 
$1B95: $0000:  F: NOP (NOP)
-----          L: 
$1B96: $0000:  F: NOP (NOP)
-----          L: 
$1B97: $7F3E:  F: r19 & $FE (0 -> f_displayVis)
$1B98: $7F3D:  F: r19 & $FD (0 -> f_arbitrationLost)
$1B99: $940E:  F: CALL $A0D (_ms_do_vis)
$1B9A: $0A0D:  
*********   D:\work\MultiSwitch\Firmwares\Base_v2\Programm.alg    ***********
-----          L: 
$1B9B: $95A8:  F: WDR (WDR)
-----          L: 
$1B9C: $FF33:  C: if (r19.3=1 then SKIP (f_resetAllRelay = 0)
$1B9D: $C003:  C: goto $1BA1 (RJMP) (f_resetAllRelay = 0)
$1B9E: $940E:  F: CALL $944 (_ms_resetAllRelay)
$1B9F: $0944:  
$1BA0: $7F37:  F: r19 & $F7 (0 -> f_resetAllRelay)
-----          L: 
$1BA1: $CFDE:  J: goto $1B80 (RJMP)
-----          L: 
*********   D:\work\MultiSwitch\Firmwares\Base_v2\main.alp    ***********
-----          L: 
-----          L: 
-----          L: 
$1BA2: $CFFF:  J: goto $1BA2 (RJMP)
