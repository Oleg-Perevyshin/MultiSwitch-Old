$0000: $940C:  C: goto $1AE8
$0001: $1AE8:  
$0002: $9518:  C: RETI
$0003: $0000:  C: NOP
$0004: $9518:  C: RETI
$0005: $0000:  C: NOP
$0006: $9518:  C: RETI
$0007: $0000:  C: NOP
$0008: $9518:  C: RETI
$0009: $0000:  C: NOP
$000A: $9518:  C: RETI
$000B: $0000:  C: NOP
$000C: $940C:  C: goto $2CF
$000D: $02CF:  
$000E: $9518:  C: RETI
$000F: $0000:  C: NOP
$0010: $9518:  C: RETI
$0011: $0000:  C: NOP
$0012: $9518:  C: RETI
$0013: $0000:  C: NOP
$0014: $9518:  C: RETI
$0015: $0000:  C: NOP
$0016: $9518:  C: RETI
$0017: $0000:  C: NOP
$0018: $9518:  C: RETI
$0019: $0000:  C: NOP
$001A: $9518:  C: RETI
$001B: $0000:  C: NOP
$001C: $9518:  C: RETI
$001D: $0000:  C: NOP
$001E: $9518:  C: RETI
$001F: $0000:  C: NOP
$0020: $940C:  C: goto $70
$0021: $0070:  
$0022: $9518:  C: RETI
$0023: $0000:  C: NOP
$0024: $940C:  C: goto $15B
$0025: $015B:  
$0026: $940C:  C: goto $1B6
$0027: $01B6:  
$0028: $9518:  C: RETI
$0029: $0000:  C: NOP
$002A: $940C:  C: goto $CE0
$002B: $0CE0:  
$002C: $9518:  C: RETI
$002D: $0000:  C: NOP
$002E: $9518:  C: RETI
$002F: $0000:  C: NOP
$0030: $940C:  C: goto $28A
$0031: $028A:  
$0032: $9518:  C: RETI
$0033: $0000:  C: NOP
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Wait.alg    ***********
-----          V: _Wait_ms_
               F: r16:Word ->  ...
$0034: $930F:     r16 ->
$0035: $931F:     r17 ->
-----          L: 
               F: (1000*CPU_Clock_Frequency/1000000-(9+8)-2)/4 -> r16:Word  ...
$0036: $E90B:     $9B -> r16
$0037: $E01F:     $0F -> r17
-----          L: 
               C: if (r16:Word --) then goto $0038 ...
$0038: $5001:     r16 - $01
$0039: $4010:     r17 - $00 -
$003A: $F7E9:     if (Z=0) then goto $38
$003B: $0000:  F: NOP (NOP)
-----          L: 
-----          L: 
-----          L: 
$003C: $0000:  F: NOP (NOP)
-----          L: 
               F: -> r16:Word  ...
$003D: $911F:     -> r17
$003E: $910F:     -> r16
-----          L: 
               F: r16:Word ->  ...
$003F: $930F:     r16 ->
$0040: $931F:     r17 ->
-----          L: 
               F: (1000*CPU_Clock_Frequency/1000000-(4+8)-2)/4 -> r16:Word  ...
$0041: $E90C:     $9C -> r16
$0042: $E01F:     $0F -> r17
-----          L: 
               C: if (r16:Word --) then goto $0043 ...
$0043: $5001:     r16 - $01
$0044: $4010:     r17 - $00 -
$0045: $F7E9:     if (Z=0) then goto $43
$0046: $0000:  F: NOP (NOP)
-----          L: 
-----          L: 
-----          L: 
$0047: $0000:  F: NOP (NOP)
-----          L: 
$0048: $0000:  F: NOP (NOP)
-----          L: 
               F: -> r16:Word  ...
$0049: $911F:     -> r17
$004A: $910F:     -> r16
               C: if (r16:Word --) then goto $003F ...
$004B: $5001:     r16 - $01
$004C: $4010:     r17 - $00 -
$004D: $F789:     if (Z=0) then goto $3F
$004E: $0000:  F: NOP (NOP)
$004F: $9508:  F: RET (ret)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\PWM.alg    ***********
-----          V: _PWM_Event_Cyclic_action
$0050: $932F:  F: r18 -> (Temp ->)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$0051: $D056:  F: rcall $A8 (_EX_Key_Cyclic_Call)
-----          L: 
-----          L: 
-----          L: 
$0052: $D1CC:  F: rcall $21F (_STimer_Cyclic_Call)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\PWM.alg    ***********
-----          L: 
-----          L: 
$0053: $912F:  F: -> r18 (-> Temp)
$0054: $9508:  F: RET (ret)
-----          V: _PWM_Init
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$0055: $E003:  S: $03 -> r16 ($03->r16)
$0056: $BD04:  S: r16 -> p$24 (r16->TCCR0A)
$0057: $E00A:  S: $0A -> r16 ($0A->r16)
$0058: $BD05:  S: r16 -> p$25 (r16->TCCR0B)
               F: CPU_Clock_Frequency/PWM_FREQUENCY/8/256 -> OCR0A  ...
$0059: $E40E:     $4E -> r16
$005A: $BD07:     r16 -> p$27
-----          L: 
$005B: $E001:  S: $01 -> r16 ($01->r16)
$005C: $9300:  S: r16 -> [$006E] (r16->TIMSK0)
$005D: $006E:  
               F: 1 -> TOIE0  ...
$005E: $9100:     [$006E] -> r16
$005F: $006E:  
$0060: $6001:     r16 ! $01
$0061: $9300:     r16 -> [$006E]
$0062: $006E:  
-----          L: 
$0063: $9508:  F: RET (ret)
-----          V: _PWM_All_Levels_Off
               F: Z ->  ...
$0064: $93EF:     r30 ->
$0065: $93FF:     r31 ->
$0066: $E000:  F: $00 -> r16 (0 -> r16)
$0067: $E010:  F: $00 -> r17 (PWM_LINE_NUMB -> r17)
               F: @PWM_Level -> Z  ...
$0068: $E0E0:     $00 -> r30
$0069: $E0F1:     $01 -> r31
-----          L: 
$006A: $9301:  F: r16 -> [Z++] (r16 -> [Z++])
               C: if (r17 --) then goto $006A ...
$006B: $951A:     r17 --
$006C: $F7E9:     if (Z=0) then goto $6A
               F: -> Z  ...
$006D: $91FF:     -> r31
$006E: $91EF:     -> r30
$006F: $9508:  F: RET (ret)
-----          V: Timer_0_Overflow
$0070: $930F:  F: r16 -> (r16 ->)
$0071: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$0072: $B70F:     p$3F -> r16
$0073: $930F:     r16 ->
-----          L: 
-----          L: 
$0074: $9110:  F: [$0100] -> r17 (PWM_Pos -> r17)
$0075: $0100:  
$0076: $9513:  F: r17 ++ (r17 ++)
$0077: $9310:  F: r17 -> [$0100] (r17 -> PWM_Pos)
$0078: $0100:  
               C: if (r17 = 255) then goto $0084 ...
$0079: $3F1F:     r17 = $FF
$007A: $F049:     if (Z=1) then goto $84
-----          L: 
$007B: $7013:  F: r17 & $03 (r17 & #b00000011)
               C: if (r17 = 0) then goto $007F ...
$007C: $3010:     r17 = $00
$007D: $F409:     if (Z=0) then goto $7F
$007E: $D061:  F: rcall $E0 (_EX_Enc_Cyclic_Call)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
               F: -> SREG  ...
$007F: $910F:     -> r16
$0080: $BF0F:     r16 -> p$3F
$0081: $911F:  F: -> r17 (-> r17)
$0082: $910F:  F: -> r16 (-> r16)
$0083: $9518:  F: RETI (reti)
-----          V: 
$0084: $DFCB:  F: rcall $50 (_PWM_Event_Cyclic_action)
-----          L: 
$0085: $CFF9:  J: goto $7F (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\RND.alg    ***********
-----          V: _RND_Next
$0086: $9100:  F: [$0103] -> r16 (RND -> r16)
$0087: $0103:  
$0088: $0F00:  F: << r16 (<<r16)
$0089: $F02B:  C: if (V=1) then goto $8F (V=1)
$008A: $F00D:  C: if (H=1) then goto $8C (H=1)
-----          L: 
$008B: $9503:  F: r16 ++ (r16++)
-----          L: 
$008C: $9300:  F: r16 -> [$0103] (r16 -> RND)
$008D: $0103:  
$008E: $9508:  F: RET (ret)
-----          V: 
$008F: $F3DD:  C: if (H=1) then goto $8B (H=1)
$0090: $CFFB:  J: goto $8C (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\EX_Key.alg    ***********
-----          V: _EX_Key_Event_Hold_0
-----          L: 
               C: if (EX_Key_Hold_Cnt < 70) then goto $009A ...
$0091: $9100:     [$0106] -> r16
$0092: $0106:  
$0093: $3406:     r16 = $46
$0094: $F428:     if ( >= ) then goto $9A
               F: EX_Key_Hold_Cnt++  ...
$0095: $9100:     [$0106] -> r16
$0096: $0106:  
$0097: $9503:     r16 ++
$0098: $9300:     r16 -> [$0106]
$0099: $0106:  
               C: if (EX_Key_Hold_Cnt -= 70) then goto $00A5 ...
$009A: $9100:     [$0106] -> r16
$009B: $0106:  
$009C: $3406:     r16 = $46
$009D: $F439:     if (Z=0) then goto $A5
               F: EX_Key_Hold_Cnt++  ...
$009E: $9100:     [$0106] -> r16
$009F: $0106:  
$00A0: $9503:     r16 ++
$00A1: $9300:     r16 -> [$0106]
$00A2: $0106:  
$00A3: $940E:  F: CALL $91F (_ms_hold)
$00A4: $091F:  
-----          L: 
-----          V: _EX_Key_Event_Hold_1
-----          L: 
-----          V: _EX_Key_Init
$00A5: $9A5D:  F: 1 -> p$0B.5 (1 -> Port_EX_Key_0)
-----          L: 
$00A6: $9A5C:  F: 1 -> p$0B.4 (1 -> Port_EX_Key_1)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$00A7: $9508:  F: RET (ret)
-----          V: _EX_Key_Cyclic_Call
$00A8: $9100:  F: [$0104] -> r16 (EX_Key_Dreb_Cnt[0] -> r16)
$00A9: $0104:  
$00AA: $994D:  C: if (p$09.5=0 then SKIP (Pin_EX_Key_0 = 1)
$00AB: $C00B:  C: goto $B7 (RJMP) (Pin_EX_Key_0 = 1)
               C: if (r16 = EX_KEY_DREB_ITER) then goto $00C5 ...
$00AC: $3004:     r16 = $04
$00AD: $F0B9:     if (Z=1) then goto $C5
$00AE: $9503:  F: r16 ++ (r16 ++)
$00AF: $9300:  F: r16 -> [$0104] (r16 -> EX_Key_Dreb_Cnt[0])
$00B0: $0104:  
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $00C6 ...
$00B1: $3004:     r16 = $04
$00B2: $F499:     if (Z=0) then goto $C6
-----          L: 
               F: 0 -> EX_Key_Hold_Cnt  ...
$00B3: $E000:     $00 -> r16
$00B4: $9300:     r16 -> [$0106]
$00B5: $0106:  
-----          L: 
-----          L: 
$00B6: $C00F:  J: goto $C6 (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $00C6 ...
$00B7: $3000:     r16 = $00
$00B8: $F069:     if (Z=1) then goto $C6
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $00C1 ...
$00B9: $3004:     r16 = $04
$00BA: $F431:     if (Z=0) then goto $C1
-----          L: 
               C: if (EX_Key_Hold_Cnt < 70) then goto $00C1 ...
$00BB: $9100:     [$0106] -> r16
$00BC: $0106:  
$00BD: $3406:     r16 = $46
$00BE: $F410:     if ( >= ) then goto $C1
$00BF: $940E:  F: CALL $92E (_ms_click)
$00C0: $092E:  
-----          L: 
-----          L: 
               F: 0 -> EX_Key_Dreb_Cnt[0]  ...
$00C1: $E000:     $00 -> r16
$00C2: $9300:     r16 -> [$0104]
$00C3: $0104:  
$00C4: $C001:  J: goto $C6 (RJMP)
-----          L: 
$00C5: $DFCB:  F: rcall $91 (_EX_Key_Event_Hold_0)
-----          L: 
-----          L: End_EX_Test
-----          L: 
$00C6: $9100:  F: [$0105] -> r16 (EX_Key_Dreb_Cnt[1] -> r16)
$00C7: $0105:  
$00C8: $994C:  C: if (p$09.4=0 then SKIP (Pin_EX_Key_1 = 1)
$00C9: $C008:  C: goto $D2 (RJMP) (Pin_EX_Key_1 = 1)
               C: if (r16 = EX_KEY_DREB_ITER) then goto $00DB ...
$00CA: $3004:     r16 = $04
$00CB: $F079:     if (Z=1) then goto $DB
$00CC: $9503:  F: r16 ++ (r16 ++)
$00CD: $9300:  F: r16 -> [$0105] (r16 -> EX_Key_Dreb_Cnt[1])
$00CE: $0105:  
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $00DC ...
$00CF: $3004:     r16 = $04
$00D0: $F459:     if (Z=0) then goto $DC
-----          L: 
-----          L: 
-----          L: 
$00D1: $C00A:  J: goto $DC (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $00DC ...
$00D2: $3000:     r16 = $00
$00D3: $F041:     if (Z=1) then goto $DC
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $00D7 ...
$00D4: $3004:     r16 = $04
$00D5: $F409:     if (Z=0) then goto $D7
-----          L: 
$00D6: $CF29:  J: goto $0 (RJMP)
-----          L: 
-----          L: 
               F: 0 -> EX_Key_Dreb_Cnt[1]  ...
$00D7: $E000:     $00 -> r16
$00D8: $9300:     r16 -> [$0105]
$00D9: $0105:  
$00DA: $C001:  J: goto $DC (RJMP)
-----          L: 
$00DB: $DFC9:  F: rcall $A5 (_EX_Key_Event_Hold_1)
-----          L: 
-----          L: End_EX_Test
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$00DC: $9508:  F: RET (ret)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\EX_Enc.alg    ***********
-----          V: _EX_Enc_Init
$00DD: $9A5E:  F: 1 -> p$0B.6 (1 -> Port_EX_Enc_0)
-----          L: 
$00DE: $9A5F:  F: 1 -> p$0B.7 (1 -> Port_EX_Enc_1)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$00DF: $9508:  F: RET (ret)
-----          V: _EX_Enc_Cyclic_Call
$00E0: $9100:  F: [$0107] -> r16 (EX_Enc_Dreb_Cnt[0] -> r16)
$00E1: $0107:  
$00E2: $994E:  C: if (p$09.6=0 then SKIP (Pin_EX_Enc_0 = 1)
$00E3: $C013:  C: goto $F7 (RJMP) (Pin_EX_Enc_0 = 1)
               C: if (r16 = EX_ENC_DREB_ITER) then goto $010A ...
$00E4: $3002:     r16 = $02
$00E5: $F121:     if (Z=1) then goto $10A
$00E6: $9503:  F: r16 ++ (r16 ++)
$00E7: $9300:  F: r16 -> [$0107] (r16 -> EX_Enc_Dreb_Cnt[0])
$00E8: $0107:  
               C: if (r16 -= EX_ENC_DREB_ITER) then goto $010A ...
$00E9: $3002:     r16 = $02
$00EA: $F4F9:     if (Z=0) then goto $10A
-----          L: 
$00EB: $994F:  C: if (p$09.7=0 then SKIP (Pin_EX_Enc_1=1)
$00EC: $C004:  C: goto $F1 (RJMP) (Pin_EX_Enc_1=1)
               F: -1->EX_Enc_Pos  ...
$00ED: $EF0F:     $FF -> r16
$00EE: $9300:     r16 -> [$010A]
$00EF: $010A:  
$00F0: $C003:  J: goto $F4 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
               F: 1->EX_Enc_Pos  ...
$00F1: $E001:     $01 -> r16
$00F2: $9300:     r16 -> [$010A]
$00F3: $010A:  
-----          L: 
$00F4: $940E:  F: CALL $962 (_ms_navi)
$00F5: $0962:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\EX_Enc.alg    ***********
-----          L: 
-----          L: 
$00F6: $C013:  J: goto $10A (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $010A ...
$00F7: $3000:     r16 = $00
$00F8: $F089:     if (Z=1) then goto $10A
               C: if (r16 -= EX_ENC_DREB_ITER) then goto $0106 ...
$00F9: $3002:     r16 = $02
$00FA: $F459:     if (Z=0) then goto $106
-----          L: 
$00FB: $9B4F:  C: if (p$09.7=1 then SKIP (Pin_EX_Enc_1=0)
$00FC: $C004:  C: goto $101 (RJMP) (Pin_EX_Enc_1=0)
               F: -1->EX_Enc_Pos  ...
$00FD: $EF0F:     $FF -> r16
$00FE: $9300:     r16 -> [$010A]
$00FF: $010A:  
$0100: $C003:  J: goto $104 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
               F: 1->EX_Enc_Pos  ...
$0101: $E001:     $01 -> r16
$0102: $9300:     r16 -> [$010A]
$0103: $010A:  
-----          L: 
$0104: $940E:  F: CALL $962 (_ms_navi)
$0105: $0962:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\EX_Enc.alg    ***********
-----          L: 
-----          L: 
-----          L: 
               F: 0 -> EX_Enc_Dreb_Cnt[0]  ...
$0106: $E000:     $00 -> r16
$0107: $9300:     r16 -> [$0107]
$0108: $0107:  
$0109: $C000:  J: goto $10A (RJMP)
-----          L: 
-----          L: 
-----          L: End_EX_Enc_Test
-----          L: 
$010A: $9100:  F: [$0108] -> r16 (EX_Enc_Dreb_Cnt[1] -> r16)
$010B: $0108:  
$010C: $994F:  C: if (p$09.7=0 then SKIP (Pin_EX_Enc_1 = 1)
$010D: $C008:  C: goto $116 (RJMP) (Pin_EX_Enc_1 = 1)
               C: if (r16 = EX_ENC_DREB_ITER) then goto $011E ...
$010E: $3002:     r16 = $02
$010F: $F071:     if (Z=1) then goto $11E
$0110: $9503:  F: r16 ++ (r16 ++)
$0111: $9300:  F: r16 -> [$0108] (r16 -> EX_Enc_Dreb_Cnt[1])
$0112: $0108:  
               C: if (r16 -= EX_ENC_DREB_ITER) then goto $011E ...
$0113: $3002:     r16 = $02
$0114: $F449:     if (Z=0) then goto $11E
-----          L: 
-----          L: 
$0115: $C008:  J: goto $11E (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $011E ...
$0116: $3000:     r16 = $00
$0117: $F031:     if (Z=1) then goto $11E
               C: if (r16 -= EX_ENC_DREB_ITER) then goto $011A ...
$0118: $3002:     r16 = $02
$0119: $F401:     if (Z=0) then goto $11A
-----          L: 
-----          L: 
-----          L: 
               F: 0 -> EX_Enc_Dreb_Cnt[1]  ...
$011A: $E000:     $00 -> r16
$011B: $9300:     r16 -> [$0108]
$011C: $0108:  
$011D: $C000:  J: goto $11E (RJMP)
-----          L: 
-----          L: 
-----          L: End_EX_Enc_Test
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$011E: $9508:  F: RET (ret)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\UART.alg    ***********
-----          V: _UART_Event_Transmit_Buffer_Empty
-----          L: 
-----          L: 
$011F: $9508:  F: RET (ret)
-----          V: _UART_Event_Received_string
-----          L: 
$0120: $932F:  F: r18 -> (Temp ->)
               F: Y ->  ...
$0121: $93CF:     r28 ->
$0122: $93DF:     r29 ->
               F: -> Y  ...
$0123: $91DF:     -> r29
$0124: $91CF:     -> r28
$0125: $912F:  F: -> r18 (-> Temp)
-----          L: 
-----          L: 
$0126: $9508:  F: RET (ret)
-----          V: _UART_Event_Transmit_Buffer_Overflow
$0127: $9478:  F: 1 -> I (1 -> I)
-----          L: 
-----          L: 
               C: if (Z = UART_Transmit_OUT_Buffer_Pointer) then goto $0128 ...
$0128: $9110:     [$0512] -> r17
$0129: $0512:  
$012A: $17E1:     r30 = r17
$012B: $9110:     [$0513] -> r17
$012C: $0513:  
$012D: $07F1:     r31 = r17=
$012E: $F3C9:     if (Z=1) then goto $128
$012F: $94F8:  F: 0 -> I (0 -> I)
-----          L: 
-----          L: 
-----          L: 
$0130: $9508:  F: RET (ret)
-----          V: _UART_Event_Received_byte
-----          L: 
-----          L: 
$0131: $9508:  F: RET (ret)
-----          V: to_UART
-----          L: 
               C: if (UDRE0 = 0) then goto $0132 ...
$0132: $9100:     [$00C0] -> r16
$0133: $00C0:  
$0134: $FF05:     if (r16.5=1 then SKIP
$0135: $CFFC:     goto $132 (RJMP)
-----          L: 
$0136: $9310:  F: r17 -> [$00C6] (r17 -> UDR0)
$0137: $00C6:  
$0138: $9508:  F: RET (ret)
-----          V: _UART_Init
-----          L: 
$0139: $E000:  S: $00 -> r16 ($00->r16)
$013A: $9300:  S: r16 -> [$00C5] (r16->UBRR0H)
$013B: $00C5:  
$013C: $E003:  S: $03 -> r16 ($03->r16)
$013D: $9300:  S: r16 -> [$00C4] (r16->UBRR0L)
$013E: $00C4:  
$013F: $E006:  S: $06 -> r16 ($06->r16)
$0140: $9300:  S: r16 -> [$00C2] (r16->UCSR0C)
$0141: $00C2:  
$0142: $E002:  S: $02 -> r16 ($02->r16)
$0143: $9300:  S: r16 -> [$00C0] (r16->UCSR0A)
$0144: $00C0:  
$0145: $E908:  S: $98 -> r16 ($98->r16)
$0146: $9300:  S: r16 -> [$00C1] (r16->UCSR0B)
$0147: $00C1:  
-----          L: 
               F: @UART_Receive_Buffer -> UART_Receive_Buffer_Pointer  ...
$0148: $E00D:     $0D -> r16
$0149: $9300:     r16 -> [$030E]
$014A: $030E:  
$014B: $E001:     $01 -> r16
$014C: $9300:     r16 -> [$030F]
$014D: $030F:  
               F: @UART_Transmit_Buffer -> UART_Transmit_IN_Buffer_Pointer  ...
$014E: $E100:     $10 -> r16
$014F: $9300:     r16 -> [$0510]
$0150: $0510:  
$0151: $E003:     $03 -> r16
$0152: $9300:     r16 -> [$0511]
$0153: $0511:  
               F: @UART_Transmit_Buffer -> UART_Transmit_OUT_Buffer_Pointer  ...
$0154: $E100:     $10 -> r16
$0155: $9300:     r16 -> [$0512]
$0156: $0512:  
$0157: $E003:     $03 -> r16
$0158: $9300:     r16 -> [$0513]
$0159: $0513:  
-----          L: 
$015A: $9508:  F: RET (ret)
-----          V: USART0_Receive_Complete
$015B: $930F:  F: r16 -> (r16 ->)
$015C: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$015D: $B70F:     p$3F -> r16
$015E: $930F:     r16 ->
-----          L: 
$015F: $9100:  F: [$00C6] -> r16 (UDR0 -> r16)
$0160: $00C6:  
-----          L: 
$0161: $DFCF:  F: rcall $131 (_UART_Event_Received_byte)
-----          L: 
$0162: $D005:  F: rcall $168 (_UART_Fill_Receive_Buffer)
-----          L: 
               F: -> SREG  ...
$0163: $910F:     -> r16
$0164: $BF0F:     r16 -> p$3F
$0165: $911F:  F: -> r17 (-> r17)
$0166: $910F:  F: -> r16 (-> r16)
$0167: $9518:  F: RETI (RETI)
-----          V: _UART_Fill_Receive_Buffer
               F: Z ->  ...
$0168: $93EF:     r30 ->
$0169: $93FF:     r31 ->
               F: UART_Receive_Buffer_Pointer -> Z  ...
$016A: $91E0:     [$030E] -> r30
$016B: $030E:  
$016C: $91F0:     [$030F] -> r31
$016D: $030F:  
$016E: $9301:  F: r16 -> [Z++] (r16 -> [Z++])
-----          L: 
               C: if (r16 -= SOH) then goto $0174 ...
$016F: $3001:     r16 = $01
$0170: $F419:     if (Z=0) then goto $174
               F: @UART_Receive_Buffer+1 -> Z  ...
$0171: $E0EE:     $0E -> r30
$0172: $E0F1:     $01 -> r31
-----          L: 
$0173: $C009:  J: goto $17D (RJMP)
-----          L: 
               C: if (r16 = EOT) then goto $017A ...
$0174: $3004:     r16 = $04
$0175: $F021:     if (Z=1) then goto $17A
-----          L: 
               C: if (Z < @UART_Receive_Buffer + UART_SIZE_IN_BUFFER) then goto $017D ...
$0176: $30ED:     r30 = $0D
$0177: $E013:     $03 -> r17
$0178: $07F1:     r31 = r17=
$0179: $F018:     if ( < ) then goto $17D
-----          L: 
-----          L: 
$017A: $DFA5:  F: rcall $120 (_UART_Event_Received_string)
-----          L: 
               F: @UART_Receive_Buffer -> Z  ...
$017B: $E0ED:     $0D -> r30
$017C: $E0F1:     $01 -> r31
-----          L: 
-----          L: 
               F: Z -> UART_Receive_Buffer_Pointer  ...
$017D: $93E0:     r30 -> [$030E]
$017E: $030E:  
$017F: $93F0:     r31 -> [$030F]
$0180: $030F:  
               F: -> Z  ...
$0181: $91FF:     -> r31
$0182: $91EF:     -> r30
-----          L: 
$0183: $9508:  F: RET (ret)
-----          V: _UART_PUSH_r16
-----          L: 
-----          L: 
$0184: $9300:  F: r16 -> [$0514] (r16 -> UART_r16_temp)
$0185: $0514:  
               F: SREG ->  ...
$0186: $B70F:     p$3F -> r16
$0187: $930F:     r16 ->
               F: Z ->  ...
$0188: $93EF:     r30 ->
$0189: $93FF:     r31 ->
-----          L: 
$018A: $94F8:  F: 0 -> I (0 -> I)
-----          L: 
               F: UART_Transmit_IN_Buffer_Pointer -> Z  ...
$018B: $91E0:     [$0510] -> r30
$018C: $0510:  
$018D: $91F0:     [$0511] -> r31
$018E: $0511:  
-----          L: 
$018F: $9631:  F: r30,r31 + $01 (Z + 1)
               C: if (Z >= @UART_Transmit_Buffer + UART_SIZE_OUT_BUFFER) then goto $0196 ...
$0190: $31E0:     r30 = $10
$0191: $E015:     $05 -> r17
$0192: $07F1:     r31 = r17=
$0193: $F010:     if ( < ) then goto $196
               F: @UART_Transmit_Buffer -> Z  ...
$0194: $E1E0:     $10 -> r30
$0195: $E0F3:     $03 -> r31
-----          L: 
               C: if (Z -= UART_Transmit_OUT_Buffer_Pointer) then goto $019E ...
$0196: $9110:     [$0512] -> r17
$0197: $0512:  
$0198: $17E1:     r30 = r17
$0199: $9110:     [$0513] -> r17
$019A: $0513:  
$019B: $07F1:     r31 = r17=
$019C: $F409:     if (Z=0) then goto $19E
$019D: $DF89:  F: rcall $127 (_UART_Event_Transmit_Buffer_Overflow)
-----          L: 
-----          L: 
               F: UART_r16_temp -> [Z]  ...
$019E: $9100:     [$0514] -> r16
$019F: $0514:  
$01A0: $8300:     r16 -> [Z+$00]
               F: Z -> UART_Transmit_IN_Buffer_Pointer  ...
$01A1: $93E0:     r30 -> [$0510]
$01A2: $0510:  
$01A3: $93F0:     r31 -> [$0511]
$01A4: $0511:  
-----          L: 
               C: if (UDRIE0 = 1) then goto $01AF ...
$01A5: $9100:     [$00C1] -> r16
$01A6: $00C1:  
$01A7: $FD05:     if (r16.5=0 then SKIP
$01A8: $C006:     goto $1AF (RJMP)
               F: 1 -> UDRIE0  ...
$01A9: $9100:     [$00C1] -> r16
$01AA: $00C1:  
$01AB: $6200:     r16 ! $20
$01AC: $9300:     r16 -> [$00C1]
$01AD: $00C1:  
$01AE: $D011:  F: rcall $1C0 (_UART_POP_and_Send_Byte)
-----          L: 
-----          L: 
               F: -> Z  ...
$01AF: $91FF:     -> r31
$01B0: $91EF:     -> r30
               F: -> SREG  ...
$01B1: $910F:     -> r16
$01B2: $BF0F:     r16 -> p$3F
$01B3: $9100:  F: [$0514] -> r16 (UART_r16_temp -> r16)
$01B4: $0514:  
-----          L: 
$01B5: $9508:  F: RET (RET)
-----          V: USART0_DR_Empty
$01B6: $930F:  F: r16 -> (r16 ->)
$01B7: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$01B8: $B70F:     p$3F -> r16
$01B9: $930F:     r16 ->
$01BA: $D005:  F: rcall $1C0 (_UART_POP_and_Send_Byte)
               F: -> SREG  ...
$01BB: $910F:     -> r16
$01BC: $BF0F:     r16 -> p$3F
$01BD: $911F:  F: -> r17 (-> r17)
$01BE: $910F:  F: -> r16 (-> r16)
$01BF: $9518:  F: RETI (reti)
-----          V: _UART_POP_and_Send_Byte
               F: Z ->  ...
$01C0: $93EF:     r30 ->
$01C1: $93FF:     r31 ->
               F: UART_Transmit_OUT_Buffer_Pointer -> Z  ...
$01C2: $91E0:     [$0512] -> r30
$01C3: $0512:  
$01C4: $91F0:     [$0513] -> r31
$01C5: $0513:  
               C: if (Z = UART_Transmit_IN_Buffer_Pointer) then goto $01DE ...
$01C6: $9110:     [$0510] -> r17
$01C7: $0510:  
$01C8: $17E1:     r30 = r17
$01C9: $9110:     [$0511] -> r17
$01CA: $0511:  
$01CB: $07F1:     r31 = r17=
$01CC: $F089:     if (Z=1) then goto $1DE
$01CD: $9631:  F: r30,r31 + $01 (Z + 1)
               C: if (Z >= @UART_Transmit_Buffer + UART_SIZE_OUT_BUFFER) then goto $01D4 ...
$01CE: $31E0:     r30 = $10
$01CF: $E015:     $05 -> r17
$01D0: $07F1:     r31 = r17=
$01D1: $F010:     if ( < ) then goto $1D4
               F: @UART_Transmit_Buffer -> Z  ...
$01D2: $E1E0:     $10 -> r30
$01D3: $E0F3:     $03 -> r31
               F: [Z] -> UDR0  ...
$01D4: $8100:     [Z+$00] -> r16
$01D5: $9300:     r16 -> [$00C6]
$01D6: $00C6:  
               F: Z -> UART_Transmit_OUT_Buffer_Pointer  ...
$01D7: $93E0:     r30 -> [$0512]
$01D8: $0512:  
$01D9: $93F0:     r31 -> [$0513]
$01DA: $0513:  
               F: -> Z  ...
$01DB: $91FF:     -> r31
$01DC: $91EF:     -> r30
$01DD: $9508:  F: RET (RET)
-----          L: 
               F: 0 -> UDRIE0  ...
$01DE: $9100:     [$00C1] -> r16
$01DF: $00C1:  
$01E0: $7D0F:     r16 & $DF
$01E1: $9300:     r16 -> [$00C1]
$01E2: $00C1:  
$01E3: $DF3B:  F: rcall $11F (_UART_Event_Transmit_Buffer_Empty)
               F: -> Z  ...
$01E4: $91FF:     -> r31
$01E5: $91EF:     -> r30
-----          L: 
$01E6: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\STimer.alg    ***********
-----          V: _STimer_Event_End_1
-----          L: 
               F: EOS -> ms_message  ...
$01E7: $E000:     $00 -> r16
$01E8: $9300:     r16 -> [$052B]
$01E9: $052B:  
-----          L: 
$01EA: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$01EB: $9508:  F: RET (RET)
-----          V: _STimer_Event_End_0
-----          L: 
$01EC: $6034:  F: r19 ! $04 (1 -> f_doSec)
               F: [@STimer_Counter_Stop + DO_SEC] -> [@STimer_Counter + DO_SEC]  ...
$01ED: $9100:     [$0519] -> r16
$01EE: $0519:  
$01EF: $9300:     r16 -> [$0515]
$01F0: $0515:  
-----          L: 
$01F1: $9508:  F: RET (RET)
-----          V: _STimer_Event_End_2
               C: if (ms_mode = MS_MODE_CONDITIONS_EDIT_IF) then goto $01FE ...
$01F2: $9100:     [$0528] -> r16
$01F3: $0528:  
$01F4: $300B:     r16 = $0B
$01F5: $F041:     if (Z=1) then goto $1FE
               C: if (ms_mode = MS_MODE_SOURCES_VIEWER) then goto $01FE ...
$01F6: $9100:     [$0528] -> r16
$01F7: $0528:  
$01F8: $3007:     r16 = $07
$01F9: $F021:     if (Z=1) then goto $1FE
               C: if (ms_mode -= MS_MODE_STOP_BUILD_ACTION_EDIT) then goto $0205 ...
$01FA: $9100:     [$0528] -> r16
$01FB: $0528:  
$01FC: $3604:     r16 = $64
$01FD: $F439:     if (Z=0) then goto $205
-----          L: 
               F: ms_blink ^ 255  ...
$01FE: $9100:     [$052A] -> r16
$01FF: $052A:  
$0200: $EF1F:     $FF -> r17
$0201: $2701:     r16 ^ r17
$0202: $9300:     r16 -> [$052A]
$0203: $052A:  
$0204: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
               F: [@STimer_Counter_Stop + DO_BLINK] -> [@STimer_Counter + DO_BLINK]  ...
$0205: $9100:     [$051B] -> r16
$0206: $051B:  
$0207: $9300:     r16 -> [$0517]
$0208: $0517:  
$0209: $9508:  F: RET (RET)
-----          V: _STimer_Event_End_3
-----          L: 
               F: 0 -> ms_posBuildActionEdit  ...
$020A: $E000:     $00 -> r16
$020B: $9300:     r16 -> [$074D]
$020C: $074D:  
               F: MS_MODE_STOP_BUILD_ACTION_EDIT -> ms_mode  ...
$020D: $E604:     $64 -> r16
$020E: $9300:     r16 -> [$0528]
$020F: $0528:  
$0210: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$0211: $9508:  F: RET (RET)
-----          V: _STimer_Clear_All
               F: Z ->  ...
$0212: $93EF:     r30 ->
$0213: $93FF:     r31 ->
               F: @STimer_Counter -> Z  ...
$0214: $E1E5:     $15 -> r30
$0215: $E0F5:     $05 -> r31
$0216: $E024:  F: $04 -> r18 (STIMER_NUMB -> Temp)
$0217: $E000:  F: $00 -> r16 (0 -> r16)
-----          L: 
$0218: $9301:  F: r16 -> [Z++] (r16 -> [Z++])
               C: if (Temp --) then goto $0218 ...
$0219: $952A:     r18 --
$021A: $F7E9:     if (Z=0) then goto $218
               F: -> Z  ...
$021B: $91FF:     -> r31
$021C: $91EF:     -> r30
$021D: $9508:  F: RET (ret)
-----          V: _STimer_Init
-----          L: 
$021E: $9508:  F: RET (ret)
-----          V: _STimer_Cyclic_Call
$021F: $9100:  F: [$0515] -> r16 (STimer_Counter[0]  -> r16)
$0220: $0515:  
$0221: $5001:  F: r16 - $01 (r16 - 1)
$0222: $F020:  C: if (C=1) then goto $227 (C = 1)
$0223: $9300:  F: r16 -> [$0515] (r16 -> STimer_Counter[0])
$0224: $0515:  
$0225: $F409:  C: if (Z=0) then goto $227 (-=)
$0226: $DFC5:  F: rcall $1EC (_STimer_Event_End_0)
-----          L: 
$0227: $9100:  F: [$0516] -> r16 (STimer_Counter[1]  -> r16)
$0228: $0516:  
$0229: $5001:  F: r16 - $01 (r16 - 1)
$022A: $F020:  C: if (C=1) then goto $22F (C = 1)
$022B: $9300:  F: r16 -> [$0516] (r16 -> STimer_Counter[1])
$022C: $0516:  
$022D: $F409:  C: if (Z=0) then goto $22F (-=)
$022E: $DFB8:  F: rcall $1E7 (_STimer_Event_End_1)
-----          L: 
$022F: $9100:  F: [$0517] -> r16 (STimer_Counter[2]  -> r16)
$0230: $0517:  
$0231: $5001:  F: r16 - $01 (r16 - 1)
$0232: $F020:  C: if (C=1) then goto $237 (C = 1)
$0233: $9300:  F: r16 -> [$0517] (r16 -> STimer_Counter[2])
$0234: $0517:  
$0235: $F409:  C: if (Z=0) then goto $237 (-=)
$0236: $DFBB:  F: rcall $1F2 (_STimer_Event_End_2)
-----          L: 
$0237: $9100:  F: [$0518] -> r16 (STimer_Counter[3]  -> r16)
$0238: $0518:  
$0239: $5001:  F: r16 - $01 (r16 - 1)
$023A: $F020:  C: if (C=1) then goto $23F (C = 1)
$023B: $9300:  F: r16 -> [$0518] (r16 -> STimer_Counter[3])
$023C: $0518:  
$023D: $F409:  C: if (Z=0) then goto $23F (-=)
$023E: $DFCB:  F: rcall $20A (_STimer_Event_End_3)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$023F: $9508:  F: RET (ret)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\iic.alg    ***********
-----          V: _iic_init
$0240: $9A45:  F: 1 -> p$08.5 (1 -> PortC.5)
$0241: $9A44:  F: 1 -> p$08.4 (1 -> PortC.4)
-----          L: 
$0242: $E000:  S: $00 -> r16 ($00->r16)
$0243: $9300:  S: r16 -> [$00B9] (r16->TWSR)
$0244: $00B9:  
$0245: $E200:  S: $20 -> r16 ($20->r16)
$0246: $9300:  S: r16 -> [$00B8] (r16->TWBR)
$0247: $00B8:  
$0248: $E400:  S: $40 -> r16 ($40->r16)
$0249: $9300:  S: r16 -> [$00BA] (r16->TWAR)
$024A: $00BA:  
$024B: $E405:  S: $45 -> r16 ($45->r16)
$024C: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$024D: $00BC:  
$024E: $9508:  F: RET (RET)
-----          V: _iic_start
$024F: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$0250: $9508:  F: RET (RET)
$0251: $94F8:  F: 0 -> I (0 -> I)
$0252: $EF48:  F: $F8 -> r20 (NO_INFO -> iic_status)
$0253: $EE05:  S: $E5 -> r16 ($E5->r16)
$0254: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$0255: $00BC:  
$0256: $9478:  F: 1 -> I (1 -> I)
-----          L: 
-----          L: 
$0257: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$0258: $C005:  C: goto $25E (RJMP) (f_arbitrationLost = 1)
-----          L: 
               C: if (iic_status = START) then goto $025E ...
$0259: $3048:     r20 = $08
$025A: $F019:     if (Z=1) then goto $25E
               C: if (iic_status = RSTART) then goto $025E ...
$025B: $3140:     r20 = $10
$025C: $F009:     if (Z=1) then goto $25E
$025D: $CFF9:  J: goto $257 (RJMP)
-----          L: 
-----          L: 
$025E: $9508:  F: RET (RET)
-----          V: _iic_send_
$025F: $94F8:  F: 0 -> I (0 -> I)
$0260: $EF48:  F: $F8 -> r20 (NO_INFO -> iic_status)
$0261: $E805:  S: $85 -> r16 ($85->r16)
$0262: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$0263: $00BC:  
$0264: $9478:  F: 1 -> I (1 -> I)
-----          L: 
-----          L: 
$0265: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$0266: $C009:  C: goto $270 (RJMP) (f_arbitrationLost = 1)
-----          L: 
               C: if (iic_status = MT_SLA_ACK) then goto $0270 ...
$0267: $3148:     r20 = $18
$0268: $F039:     if (Z=1) then goto $270
               C: if (iic_status = MT_SLA_NACK) then goto $0270 ...
$0269: $3240:     r20 = $20
$026A: $F029:     if (Z=1) then goto $270
               C: if (iic_status = MT_DATA_ACK) then goto $0270 ...
$026B: $3248:     r20 = $28
$026C: $F019:     if (Z=1) then goto $270
               C: if (iic_status = MT_DATA_NACK) then goto $0270 ...
$026D: $3340:     r20 = $30
$026E: $F009:     if (Z=1) then goto $270
$026F: $CFF5:  J: goto $265 (RJMP)
-----          L: 
-----          L: 
$0270: $9508:  F: RET (RET)
-----          V: _iic_stop
$0271: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$0272: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Wait.alg    ***********
-----          L: 
               F: (10*CPU_Clock_Frequency/1000000-2)/4 -> r16:Word  ...
$0273: $E207:     $27 -> r16
$0274: $E010:     $00 -> r17
-----          L: 
               C: if (r16:Word --) then goto $0275 ...
$0275: $5001:     r16 - $01
$0276: $4010:     r17 - $00 -
$0277: $F7E9:     if (Z=0) then goto $275
$0278: $0000:  F: NOP (NOP)
-----          L: 
-----          L: 
-----          L: 
$0279: $0000:  F: NOP (NOP)
-----          L: 
$027A: $0000:  F: NOP (NOP)
-----          L: 
$027B: $94F8:  F: 0 -> I (0 -> I)
$027C: $EF48:  F: $F8 -> r20 (NO_INFO -> iic_status)
$027D: $ED05:  S: $D5 -> r16 ($D5->r16)
$027E: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$027F: $00BC:  
$0280: $9478:  F: 1 -> I (1 -> I)
-----          L: 
               F: (10*CPU_Clock_Frequency/1000000-2)/4 -> r16:Word  ...
$0281: $E207:     $27 -> r16
$0282: $E010:     $00 -> r17
-----          L: 
               C: if (r16:Word --) then goto $0283 ...
$0283: $5001:     r16 - $01
$0284: $4010:     r17 - $00 -
$0285: $F7E9:     if (Z=0) then goto $283
$0286: $0000:  F: NOP (NOP)
-----          L: 
-----          L: 
-----          L: 
$0287: $0000:  F: NOP (NOP)
-----          L: 
$0288: $0000:  F: NOP (NOP)
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\iic.alg    ***********
-----          L: 
$0289: $9508:  F: RET (RET)
-----          V: TWI_Finished
$028A: $930F:  F: r16 -> (r16 ->)
$028B: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$028C: $B70F:     p$3F -> r16
$028D: $930F:     r16 ->
-----          L: 
$028E: $9140:  F: [$00B9] -> r20 (TWSR -> iic_status)
$028F: $00B9:  
$0290: $7F48:  F: r20 & $F8 (iic_status & $F8)
-----          L: 
-----          L: 
-----          L: 
               C: if (iic_status -= SR_SLA_ACK) then goto $0297 ...
$0291: $3640:     r20 = $60
$0292: $F421:     if (Z=0) then goto $297
-----          L: 
$0293: $E805:  S: $85 -> r16 ($85->r16)
$0294: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$0295: $00BC:  
$0296: $C033:  J: goto $2CA (RJMP)
-----          L: 
-----          L: 
               C: if (iic_status -= SR_DATA_NACK) then goto $02AD ...
$0297: $3848:     r20 = $88
$0298: $F4A1:     if (Z=0) then goto $2AD
-----          L: 
$0299: $9100:  F: [$00BB] -> r16 (TWDR -> r16)
$029A: $00BB:  
$029B: $D662:  F: rcall $8FE (_ms_parseData)
$029C: $D5EE:  F: rcall $88B (_ms_message_)
$029D: $20 $2A $20 $72 $65 $6D $6F $74 $65 $20 $73 $77 $69 $74 $63 $68
$02A5: $00 $00
-----          L: 
$02A6: $EC05:  S: $C5 -> r16 ($C5->r16)
$02A7: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$02A8: $00BC:  
$02A9: $6032:  F: r19 ! $02 (1 -> f_arbitrationLost)
$02AA: $E348:  F: $38 -> r20 (MT_ATRIB_LOST -> iic_status)
$02AB: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$02AC: $C01D:  J: goto $2CA (RJMP)
-----          L: 
-----          L: 
               C: if (iic_status -= SR_START) then goto $02B6 ...
$02AD: $3A40:     r20 = $A0
$02AE: $F439:     if (Z=0) then goto $2B6
$02AF: $EC05:  S: $C5 -> r16 ($C5->r16)
$02B0: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$02B1: $00BC:  
$02B2: $6032:  F: r19 ! $02 (1 -> f_arbitrationLost)
$02B3: $E348:  F: $38 -> r20 (MT_ATRIB_LOST -> iic_status)
$02B4: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$02B5: $C014:  J: goto $2CA (RJMP)
-----          L: 
-----          L: 
               C: if (iic_status -= ERROR) then goto $02BF ...
$02B6: $3040:     r20 = $00
$02B7: $F439:     if (Z=0) then goto $2BF
$02B8: $ED05:  S: $D5 -> r16 ($D5->r16)
$02B9: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$02BA: $00BC:  
$02BB: $6032:  F: r19 ! $02 (1 -> f_arbitrationLost)
$02BC: $E348:  F: $38 -> r20 (MT_ATRIB_LOST -> iic_status)
$02BD: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$02BE: $C00B:  J: goto $2CA (RJMP)
-----          L: 
-----          L: 
               C: if (iic_status -= MT_ATRIB_LOST) then goto $02C7 ...
$02BF: $3348:     r20 = $38
$02C0: $F431:     if (Z=0) then goto $2C7
$02C1: $EC05:  S: $C5 -> r16 ($C5->r16)
$02C2: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$02C3: $00BC:  
$02C4: $6032:  F: r19 ! $02 (1 -> f_arbitrationLost)
$02C5: $E348:  F: $38 -> r20 (MT_ATRIB_LOST -> iic_status)
$02C6: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
-----          L: 
$02C7: $E004:  S: $04 -> r16 ($04->r16)
$02C8: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$02C9: $00BC:  
-----          L: 
-----          L: _END_TWI_Finished
               F: -> SREG  ...
$02CA: $910F:     -> r16
$02CB: $BF0F:     r16 -> p$3F
$02CC: $911F:  F: -> r17 (-> r17)
$02CD: $910F:  F: -> r16 (-> r16)
$02CE: $9518:  F: RETI (RETI)
-----          V: Watchdog_Time_Out
$02CF: $930F:  F: r16 -> (r16 ->)
$02D0: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$02D1: $B70F:     p$3F -> r16
$02D2: $930F:     r16 ->
$02D3: $9140:  F: [$00B9] -> r20 (TWSR -> iic_status)
$02D4: $00B9:  
$02D5: $7F48:  F: r20 & $F8 (iic_status & $F8)
$02D6: $9340:  F: r20 -> [$00C6] (iic_status -> UDR0)
$02D7: $00C6:  
-----          L: 
$02D8: $95A8:  F: WDR (WDR)
$02D9: $CFFE:  J: goto $2D8 (RJMP)
               F: -> SREG  ...
$02DA: $910F:     -> r16
$02DB: $BF0F:     r16 -> p$3F
$02DC: $911F:  F: -> r17 (-> r17)
$02DD: $910F:  F: -> r16 (-> r16)
$02DE: $9518:  F: RETI (RETI)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ssd1306.alg    ***********
-----          V: _ssd_clrRestLine
$02DF: $931F:  F: r17 -> (r17 ->)
$02E0: $9110:  F: [$051E] -> r17 (ssd_Last_X -> r17)
$02E1: $051E:  
$02E2: $9511:  F: - r17 (-r17)
$02E3: $5810:  F: r17 - $80 (r17 + 128)
$02E4: $D3FC:  F: rcall $6E1 (_ssd_startData)
-----          L: 
$02E5: $E000:  F: $00 -> r16 (0 -> r16)
$02E6: $D3E7:  F: rcall $6CE (_ssd_data_)
               C: if (r17 --) then goto $02E5 ...
$02E7: $951A:     r17 --
$02E8: $F7E1:     if (Z=0) then goto $2E5
-----          L: 
$02E9: $DF87:  F: rcall $271 (_iic_stop)
$02EA: $911F:  F: -> r17 (-> r17)
$02EB: $9508:  F: RET (ret)
-----          V: _ssd_Pos_
-----          L: 
-----          L: 
$02EC: $9300:  F: r16 -> [$051E] (r16 -> ssd_Last_X)
$02ED: $051E:  
$02EE: $9310:  F: r17 -> [$051F] (r17 -> ssd_Last_Y)
$02EF: $051F:  
-----          L: 
$02F0: $E200:  F: $20 -> r16 ($20 -> r16)
$02F1: $D3C6:  F: rcall $6B8 (_ssd_command_)
$02F2: $E000:  F: $00 -> r16 ($00 -> r16)
$02F3: $D3C4:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$02F4: $E201:  F: $21 -> r16 ($21 -> r16)
$02F5: $D3C2:  F: rcall $6B8 (_ssd_command_)
$02F6: $9100:  F: [$051E] -> r16 (ssd_Last_X -> r16)
$02F7: $051E:  
$02F8: $D3BF:  F: rcall $6B8 (_ssd_command_)
$02F9: $E70F:  F: $7F -> r16 (127 -> r16)
$02FA: $D3BD:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$02FB: $E202:  F: $22 -> r16 ($22 -> r16)
$02FC: $D3BB:  F: rcall $6B8 (_ssd_command_)
$02FD: $9100:  F: [$051F] -> r16 (ssd_Last_Y -> r16)
$02FE: $051F:  
$02FF: $D3B8:  F: rcall $6B8 (_ssd_command_)
$0300: $E007:  F: $07 -> r16 (7 -> r16)
$0301: $D3B6:  F: rcall $6B8 (_ssd_command_)
$0302: $9508:  F: RET (ret)
-----          V: _ssd_clr
               F: Z ->  ...
$0303: $93EF:     r30 ->
$0304: $93FF:     r31 ->
$0305: $E000:  F: $00 -> r16 (0 -> r16)
$0306: $E010:  F: $00 -> r17 (0 -> r17)
$0307: $DFE4:  F: rcall $2EC (_ssd_Pos_)
               F: 1024 -> Z  ...
$0308: $E0E0:     $00 -> r30
$0309: $E0F4:     $04 -> r31
$030A: $D3D6:  F: rcall $6E1 (_ssd_startData)
-----          L: 
$030B: $E000:  F: $00 -> r16 (0 -> r16)
$030C: $D3C1:  F: rcall $6CE (_ssd_data_)
               C: if (Z --) then goto $030B ...
$030D: $50E1:     r30 - $01
$030E: $40F0:     r31 - $00 -
$030F: $F7D9:     if (Z=0) then goto $30B
-----          L: 
$0310: $DF60:  F: rcall $271 (_iic_stop)
               F: -> Z  ...
$0311: $91FF:     -> r31
$0312: $91EF:     -> r30
$0313: $9508:  F: RET (ret)
-----          V: _ssd_Parse_r16
$0314: $932F:  F: r18 -> (Temp ->)
               C: if (r16 < 16) then goto $031E ...
$0315: $3100:     r16 = $10
$0316: $F038:     if ( < ) then goto $31E
-----          L: 
               C: if (r16 >= 128) then goto $031A ...
$0317: $3800:     r16 = $80
$0318: $F008:     if ( < ) then goto $31A
$0319: $E200:  F: $20 -> r16 (32 -> r16)
-----          L: 
-----          L: 
$031A: $5100:  F: r16 - $10 (r16 - 16)
$031B: $D02E:  F: rcall $34A (_ssd_Mod_Char_r16)
$031C: $912F:  F: -> r18 (-> Temp)
$031D: $9508:  F: RET (ret)
-----          L: 
$031E: $E010:  F: $00 -> r17 (0 -> r17)
               C: if (r16 = 1) then goto $032F ...
$031F: $3001:     r16 = $01
$0320: $F071:     if (Z=1) then goto $32F
               C: if (r16 = 10) then goto $0341 ...
$0321: $300A:     r16 = $0A
$0322: $F0F1:     if (Z=1) then goto $341
               C: if (r16 = 13) then goto $0333 ...
$0323: $300D:     r16 = $0D
$0324: $F071:     if (Z=1) then goto $333
$0325: $5002:  F: r16 - $02 (r16 - 2)
$0326: $9408:  F: 1 -> .C (1 -> C)
-----          L: 
$0327: $1F11:  F: << r17 < (<< r17 <)
               C: if (r16 = 0) then goto $032C ...
$0328: $3000:     r16 = $00
$0329: $F011:     if (Z=1) then goto $32C
$032A: $950A:  F: r16 -- (r16 --)
$032B: $CFFB:  J: goto $327 (RJMP)
-----          L: 
$032C: $9100:  F: [$051D] -> r16 (ssd_Mods -> r16)
$032D: $051D:  
$032E: $2710:  F: r17 ^ r16 (r17 ^ r16)
-----          L: 
$032F: $9310:  F: r17 -> [$051D] (r17 -> ssd_Mods)
$0330: $051D:  
-----          L: 
$0331: $912F:  F: -> r18 (-> Temp)
$0332: $9508:  F: RET (ret)
-----          V: 
$0333: $9100:  F: [$051F] -> r16 (ssd_Last_Y -> r16)
$0334: $051F:  
$0335: $9503:  F: r16 ++ (r16 ++)
               C: if (r16 >= 8) then goto $0339 ...
$0336: $3008:     r16 = $08
$0337: $F008:     if ( < ) then goto $339
$0338: $E000:  F: $00 -> r16 (0 -> r16)
$0339: $9300:  F: r16 -> [$051F] (r16 -> ssd_Last_Y)
$033A: $051F:  
$033B: $9100:  F: [$051E] -> r16 (ssd_Last_X -> r16)
$033C: $051E:  
$033D: $9110:  F: [$051F] -> r17 (ssd_Last_Y -> r17)
$033E: $051F:  
$033F: $DFAC:  F: rcall $2EC (_ssd_Pos_)
$0340: $CFF0:  J: goto $331 (RJMP)
-----          V: 
               F: 0 -> ssd_Last_X  ...
$0341: $E000:     $00 -> r16
$0342: $9300:     r16 -> [$051E]
$0343: $051E:  
$0344: $9100:  F: [$051E] -> r16 (ssd_Last_X -> r16)
$0345: $051E:  
$0346: $9110:  F: [$051F] -> r17 (ssd_Last_Y -> r17)
$0347: $051F:  
$0348: $DFA3:  F: rcall $2EC (_ssd_Pos_)
$0349: $CFE7:  J: goto $331 (RJMP)
-----          V: _ssd_Mod_Char_r16
-----          L: 
-----          L: 
-----          L: 
               F: Z ->  ...
$034A: $93EF:     r30 ->
$034B: $93FF:     r31 ->
$034C: $E010:  F: $00 -> r17 (0 -> r17)
$034D: $0F00:  F: << r16 (<< r16)
               F: r16 -> Z  ...
$034E: $2FE0:     r16 -> r30
$034F: $E0F0:     $00 -> r31
               F: << r16:Word  ...
$0350: $0F00:     << r16
$0351: $1F11:     << r17 <
               F: Z + r16:Word  ...
$0352: $0FE0:     r30 + r16
$0353: $1FF1:     r31 + r17 +
               F: Z + 2*D_ssd_font  ...
$0354: $53E0:     r30 - $30
$0355: $4FF5:     r31 - $F5 -
-----          L: 
$0356: $D38A:  F: rcall $6E1 (_ssd_startData)
-----          L: 
$0357: $9110:  F: [$051D] -> r17 (ssd_Mods -> r17)
$0358: $051D:  
-----          L: 
$0359: $FF16:  C: if (r17.6=1 then SKIP (r17.6 = 0)
$035A: $C006:  C: goto $361 (RJMP) (r17.6 = 0)
               F: ssd_Last_Y ->  ...
$035B: $9100:     [$051F] -> r16
$035C: $051F:  
$035D: $930F:     r16 ->
               F: ssd_Last_X ->  ...
$035E: $9100:     [$051E] -> r16
$035F: $051E:  
$0360: $930F:     r16 ->
-----          L: 
$0361: $E026:  F: $06 -> r18 (6 -> Temp)
-----          L: 
$0362: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
$0363: $FF14:  C: if (r17.4=1 then SKIP (r17.4 = 0)
$0364: $C004:  C: goto $369 (RJMP) (r17.4 = 0)
               C: if (Temp = 5) then goto $0374 ...
$0365: $3025:     r18 = $05
$0366: $F069:     if (Z=1) then goto $374
               C: if (Temp = 3) then goto $0374 ...
$0367: $3023:     r18 = $03
$0368: $F059:     if (Z=1) then goto $374
-----          L: 
$0369: $D044:  F: rcall $3AE (_ssd_do_Mods)
-----          L: 
$036A: $FF16:  C: if (r17.6=1 then SKIP (r17.6 = 0)
$036B: $C002:  C: goto $36E (RJMP) (r17.6 = 0)
$036C: $700F:  F: r16 & $0F (r16 & #b00001111)
$036D: $D057:  F: rcall $3C5 (ssd_do_Zoom)
-----          L: 
-----          L: 
$036E: $FF17:  C: if (r17.7=1 then SKIP (r17.7 = 0)
$036F: $C003:  C: goto $373 (RJMP) (r17.7 = 0)
$0370: $930F:  F: r16 -> (r16 ->)
$0371: $D35C:  F: rcall $6CE (_ssd_data_)
$0372: $910F:  F: -> r16 (-> r16)
-----          L: 
$0373: $D35A:  F: rcall $6CE (_ssd_data_)
-----          L: 
               C: if (Temp --) then goto $0362 ...
$0374: $952A:     r18 --
$0375: $F761:     if (Z=0) then goto $362
-----          L: 
$0376: $D061:  F: rcall $3D8 (_ssd_do_Space)
-----          L: 
-----          L: 
$0377: $DEF9:  F: rcall $271 (_iic_stop)
-----          L: 
$0378: $9110:  F: [$051D] -> r17 (ssd_Mods -> r17)
$0379: $051D:  
-----          L: 
$037A: $FF16:  C: if (r17.6=1 then SKIP (r17.6 = 0)
$037B: $C02F:  C: goto $3AB (RJMP) (r17.6 = 0)
$037C: $9736:  F: r30,r31 - $06 (Z - 6)
$037D: $910F:  F: -> r16 (-> r16)
$037E: $9300:  F: r16 -> [$051E] (r16 -> ssd_Last_X)
$037F: $051E:  
-----          L: 
$0380: $910F:  F: -> r16 (-> r16)
$0381: $930F:  F: r16 -> (r16 ->)
$0382: $9503:  F: r16 ++ (r16 ++)
$0383: $9300:  F: r16 -> [$051F] (r16 -> ssd_Last_Y)
$0384: $051F:  
$0385: $931F:  F: r17 -> (r17 ->)
-----          L: 
$0386: $9100:  F: [$051E] -> r16 (ssd_Last_X -> r16)
$0387: $051E:  
$0388: $9110:  F: [$051F] -> r17 (ssd_Last_Y -> r17)
$0389: $051F:  
$038A: $DF61:  F: rcall $2EC (_ssd_Pos_)
-----          L: 
$038B: $911F:  F: -> r17 (-> r17)
-----          L: 
$038C: $D354:  F: rcall $6E1 (_ssd_startData)
-----          L: 
$038D: $E026:  F: $06 -> r18 (6 -> Temp)
-----          L: 
$038E: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
$038F: $FF14:  C: if (r17.4=1 then SKIP (r17.4 = 0)
$0390: $C004:  C: goto $395 (RJMP) (r17.4 = 0)
               C: if (Temp = 5) then goto $039F ...
$0391: $3025:     r18 = $05
$0392: $F061:     if (Z=1) then goto $39F
               C: if (Temp = 3) then goto $039F ...
$0393: $3023:     r18 = $03
$0394: $F051:     if (Z=1) then goto $39F
-----          L: 
$0395: $D018:  F: rcall $3AE (_ssd_do_Mods)
-----          L: 
$0396: $9502:  F: >> r16 << (>> r16 <<)
$0397: $700F:  F: r16 & $0F (r16 & #b00001111)
$0398: $D02C:  F: rcall $3C5 (ssd_do_Zoom)
-----          L: 
$0399: $FF17:  C: if (r17.7=1 then SKIP (r17.7 = 0)
$039A: $C003:  C: goto $39E (RJMP) (r17.7 = 0)
$039B: $930F:  F: r16 -> (r16 ->)
$039C: $D331:  F: rcall $6CE (_ssd_data_)
$039D: $910F:  F: -> r16 (-> r16)
-----          L: 
$039E: $D32F:  F: rcall $6CE (_ssd_data_)
-----          L: 
               C: if (Temp --) then goto $038E ...
$039F: $952A:     r18 --
$03A0: $F769:     if (Z=0) then goto $38E
-----          L: 
$03A1: $D036:  F: rcall $3D8 (_ssd_do_Space)
-----          L: 
-----          L: 
$03A2: $DECE:  F: rcall $271 (_iic_stop)
-----          L: 
$03A3: $910F:  F: -> r16 (-> r16)
$03A4: $9300:  F: r16 -> [$051F] (r16 -> ssd_Last_Y)
$03A5: $051F:  
$03A6: $9100:  F: [$051E] -> r16 (ssd_Last_X -> r16)
$03A7: $051E:  
$03A8: $9110:  F: [$051F] -> r17 (ssd_Last_Y -> r17)
$03A9: $051F:  
$03AA: $DF41:  F: rcall $2EC (_ssd_Pos_)
-----          L: 
               F: -> Z  ...
$03AB: $91FF:     -> r31
$03AC: $91EF:     -> r30
-----          L: 
$03AD: $9508:  F: RET (ret)
-----          V: _ssd_do_Mods
-----          L: 
$03AE: $FF15:  C: if (r17.5=1 then SKIP (r17.5 = 0)
$03AF: $C007:  C: goto $3B7 (RJMP) (r17.5 = 0)
               C: if (Temp -= 5) then goto $03B7 ...
$03B0: $3025:     r18 = $05
$03B1: $F429:     if (Z=0) then goto $3B7
$03B2: $9732:  F: r30,r31 - $02 (Z - 2)
$03B3: $9124:  F: LPM[Z] -> r18 (LPM[Z] -> Temp)
$03B4: $9632:  F: r30,r31 + $02 (Z + 2)
$03B5: $2B02:  F: r16 ! r18 (r16 ! Temp)
$03B6: $E025:  F: $05 -> r18 (5 -> Temp)
-----          L: 
$03B7: $FF13:  C: if (r17.3=1 then SKIP (r17.3 = 0)
$03B8: $C007:  C: goto $3C0 (RJMP) (r17.3 = 0)
$03B9: $FB06:  F: r16.6 -> T (r16.6 -> T)
$03BA: $0F00:  F: << r16 (<< r16)
$03BB: $F408:  C: if (C=0) then goto $3BD (C = 1)
$03BC: $6800:  F: r16 ! $80 (1 -> r16.7)
$03BD: $F008:  C: if (C=1) then goto $3BF (C = 0)
$03BE: $770F:  F: r16 & $7F (0 -> r16.7)
$03BF: $F906:  F: T -> r16.6 (T -> r16.6)
-----          L: 
$03C0: $FD10:  C: if (r17.0=0 then SKIP (r17.0 = 1)
$03C1: $6800:  F: r16 ! $80 (r16 ! #b10000000)
$03C2: $FD11:  C: if (r17.1=0 then SKIP (r17.1 = 1)
$03C3: $9500:  F: | r16 (|r16)
-----          L: 
$03C4: $9508:  F: RET (ret)
-----          L: 
-----          V: ssd_do_Zoom
               F: Z ->  ...
$03C5: $93EF:     r30 ->
$03C6: $93FF:     r31 ->
               F: 2*D_ssd_Zoom -> Z  ...
$03C7: $EAE0:     $A0 -> r30
$03C8: $E0F7:     $07 -> r31
$03C9: $0FE0:  F: r30 + r16 (ZL + r16)
$03CA: $E000:  F: $00 -> r16 (0 -> r16)
$03CB: $1FF0:  F: r31 + r16 + (ZH + r16 +)
$03CC: $9104:  F: LPM[Z] -> r16 (LPM[Z] -> r16)
               F: -> Z  ...
$03CD: $91FF:     -> r31
$03CE: $91EF:     -> r30
$03CF: $9508:  F: RET (ret)
-----          L: 
-----          V: D_ssd_Zoom
$03D0: $00 $03 $0C $0F
$03D2: $30 $33 $3C $3F
$03D4: $C0 $C3 $CC $CF
$03D6: $F0 $F3 $FC $FF
-----          L: 
-----          V: _ssd_do_Space
$03D8: $FF12:  C: if (r17.2=1 then SKIP (r17.2 = 0)
$03D9: $C007:  C: goto $3E1 (RJMP) (r17.2 = 0)
$03DA: $E000:  F: $00 -> r16 (0 -> r16)
$03DB: $FF17:  C: if (r17.7=1 then SKIP (r17.7 = 0)
$03DC: $C003:  C: goto $3E0 (RJMP) (r17.7 = 0)
$03DD: $930F:  F: r16 -> (r16 ->)
$03DE: $D2EF:  F: rcall $6CE (_ssd_data_)
$03DF: $910F:  F: -> r16 (-> r16)
-----          L: 
$03E0: $D2ED:  F: rcall $6CE (_ssd_data_)
-----          L: 
$03E1: $9508:  F: RET (ret)
-----          L: 
-----          V: _ssd_sprite_Pos
-----          L: 
-----          L: 
-----          L: 
$03E2: $E201:  F: $21 -> r16 ($21 -> r16)
$03E3: $D2D4:  F: rcall $6B8 (_ssd_command_)
$03E4: $9100:  F: [$051E] -> r16 (ssd_Last_X -> r16)
$03E5: $051E:  
$03E6: $D2D1:  F: rcall $6B8 (_ssd_command_)
$03E7: $9100:  F: [$051E] -> r16 (ssd_Last_X -> r16)
$03E8: $051E:  
$03E9: $5E09:  F: r16 - $E9 (r16 + 23)
$03EA: $D2CD:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$03EB: $E202:  F: $22 -> r16 ($22 -> r16)
$03EC: $D2CB:  F: rcall $6B8 (_ssd_command_)
$03ED: $9100:  F: [$051F] -> r16 (ssd_Last_Y -> r16)
$03EE: $051F:  
$03EF: $D2C8:  F: rcall $6B8 (_ssd_command_)
$03F0: $E007:  F: $07 -> r16 (7 -> r16)
$03F1: $D2C6:  F: rcall $6B8 (_ssd_command_)
$03F2: $9508:  F: RET (ret)
-----          V: _ssd_spite_
$03F3: $930F:  F: r16 -> (r16 ->)
$03F4: $DFED:  F: rcall $3E2 (_ssd_sprite_Pos)
-----          L: 
$03F5: $911F:  F: -> r17 (-> r17)
               F: Z ->  ...
$03F6: $93EF:     r30 ->
$03F7: $93FF:     r31 ->
               F: r17 -> Z  ...
$03F8: $2FE1:     r17 -> r30
$03F9: $E0F0:     $00 -> r31
               F: <<Z  ...
$03FA: $0FEE:     << r30
$03FB: $1FFF:     << r31 <
               F: <<Z  ...
$03FC: $0FEE:     << r30
$03FD: $1FFF:     << r31 <
               F: <<Z  ...
$03FE: $0FEE:     << r30
$03FF: $1FFF:     << r31 <
$0400: $E000:  F: $00 -> r16 (0 -> r16)
               F: r16:Word >>  ...
$0401: $9516:     r17 >>
$0402: $9507:     > r16 >>
               F: r16:Word >>  ...
$0403: $9516:     r17 >>
$0404: $9507:     > r16 >>
               F: Z + r16:Word  ...
$0405: $0FE0:     r30 + r16
$0406: $1FF1:     r31 + r17 +
-----          L: 
               F: Z + 2*D_ssd_sprites  ...
$0407: $5DEA:     r30 - $DA
$0408: $4FF7:     r31 - $F7 -
$0409: $E408:  F: $48 -> r16 (72 -> r16)
-----          L: 
$040A: $930F:  F: r16 -> (r16 ->)
$040B: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
$040C: $D2C1:  F: rcall $6CE (_ssd_data_)
$040D: $910F:  F: -> r16 (-> r16)
               C: if (r16 --) then goto $040A ...
$040E: $950A:     r16 --
$040F: $F7D1:     if (Z=0) then goto $40A
-----          L: 
-----          L: 
-----          L: 
               F: -> Z  ...
$0410: $91FF:     -> r31
$0411: $91EF:     -> r30
$0412: $9508:  F: RET (ret)
-----          L: 
-----          L: D_ssd_sprites
$0413: $00 $80 $60 $10 $08 $04 $04 $02 $02 $01 $01 $01 $01 $01 $01 $02
$041B: $02 $04 $04 $08 $10 $60 $80 $00 $7E $81 $00 $00 $00 $00 $00 $00
$0423: $00 $7E $42 $42 $42 $42 $7E $00 $00 $00 $00 $00 $00 $00 $81 $7E
$042B: $00 $01 $06 $08 $10 $20 $20 $40 $40 $80 $80 $80 $80 $80 $80 $40
$0433: $40 $20 $20 $10 $08 $06 $01 $00 $00 $80 $60 $10 $08 $04 $04 $02
$043B: $02 $01 $01 $01 $01 $01 $01 $82 $82 $84 $84 $88 $90 $E0 $80 $00
$0443: $7E $81 $40 $20 $10 $08 $08 $04 $04 $02 $02 $01 $81 $41 $21 $10
$044B: $08 $04 $04 $02 $02 $02 $83 $7E $00 $01 $06 $08 $10 $20 $20 $40
$0453: $40 $80 $F0 $8E $81 $80 $80 $40 $40 $20 $20 $10 $08 $06 $01 $00
$045B: $00 $80 $60 $10 $08 $04 $04 $02 $02 $01 $01 $01 $01 $01 $01 $02
$0463: $02 $04 $04 $88 $50 $60 $80 $00 $7E $81 $00 $80 $40 $20 $20 $10
$046B: $10 $88 $48 $44 $24 $24 $92 $92 $4A $29 $25 $14 $12 $09 $85 $7E
$0473: $00 $01 $07 $08 $10 $28 $24 $42 $41 $E0 $98 $84 $82 $81 $80 $40
$047B: $40 $20 $20 $10 $08 $06 $01 $00 $00 $80 $60 $10 $08 $04 $04 $02
$0483: $02 $01 $81 $41 $01 $01 $81 $62 $52 $84 $84 $08 $10 $60 $80 $00
$048B: $7E $81 $00 $00 $20 $C0 $40 $80 $00 $0F $30 $C1 $06 $08 $13 $0C
$0493: $00 $00 $00 $01 $01 $02 $83 $7E $00 $01 $06 $08 $14 $23 $20 $40
$049B: $43 $84 $82 $81 $80 $80 $80 $40 $40 $20 $20 $10 $08 $06 $01 $00
$04A3: $00 $80 $60 $10 $08 $04 $04 $02 $02 $01 $01 $01 $01 $01 $01 $02
$04AB: $02 $04 $04 $08 $10 $60 $80 $00 $7E $81 $00 $00 $00 $00 $00 $00
$04B3: $00 $00 $00 $7E $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $81 $7E
$04BB: $00 $01 $06 $08 $10 $20 $20 $40 $40 $80 $80 $80 $80 $80 $80 $40
$04C3: $40 $20 $20 $10 $08 $06 $01 $00 $00 $80 $60 $10 $08 $04 $04 $02
$04CB: $02 $01 $01 $01 $01 $01 $01 $02 $02 $04 $04 $08 $10 $60 $80 $00
$04D3: $7E $81 $00 $00 $00 $00 $00 $00 $00 $00 $7E $00 $00 $7E $00 $00
$04DB: $00 $00 $00 $00 $00 $00 $81 $7E $00 $01 $06 $08 $10 $20 $20 $40
$04E3: $40 $80 $80 $80 $80 $80 $80 $40 $40 $20 $20 $10 $08 $06 $01 $00
$04EB: $00 $80 $60 $10 $08 $04 $04 $02 $02 $31 $71 $71 $21 $01 $01 $02
$04F3: $02 $04 $04 $08 $10 $60 $80 $00 $7E $81 $00 $00 $00 $00 $00 $00
$04FB: $38 $0E $FF $7F $64 $C4 $82 $01 $00 $00 $00 $00 $00 $00 $81 $7E
$0503: $00 $01 $06 $08 $10 $20 $20 $40 $46 $83 $81 $80 $80 $80 $87 $44
$050B: $40 $20 $20 $10 $08 $06 $01 $00 $00 $80 $60 $10 $08 $44 $44 $42
$0513: $42 $41 $41 $41 $09 $F9 $31 $62 $C2 $84 $04 $08 $10 $60 $80 $00
$051B: $7E $81 $00 $00 $00 $00 $00 $00 $82 $92 $92 $92 $92 $93 $92 $90
$0523: $9F $D1 $E3 $BE $1C $00 $81 $7E $00 $01 $06 $08 $10 $24 $24 $44
$052B: $44 $84 $84 $84 $84 $84 $84 $44 $44 $27 $24 $10 $08 $06 $01 $00
-----          V: _ssd1306_Init
$0533: $9478:  F: 1 -> I (1 -> I)
$0534: $EA0E:  F: $AE -> r16 (SSD_OFF -> r16)
$0535: $D182:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$0536: $ED05:  F: $D5 -> r16 (SSD_DISP_CLOCK -> r16)
$0537: $D180:  F: rcall $6B8 (_ssd_command_)
$0538: $EF00:  F: $F0 -> r16 ($F0 -> r16)
$0539: $D17E:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$053A: $EA08:  F: $A8 -> r16 (SSD_MLTPX_RATIO -> r16)
$053B: $D17C:  F: rcall $6B8 (_ssd_command_)
$053C: $E30F:  F: $3F -> r16 ($3F -> r16)
$053D: $D17A:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$053E: $ED03:  F: $D3 -> r16 (SSD_DISP_OFFSET -> r16)
$053F: $D178:  F: rcall $6B8 (_ssd_command_)
$0540: $E000:  F: $00 -> r16 ($00 -> r16)
$0541: $D176:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$0542: $E400:  F: $40 -> r16 (SSD_DISPL_START_LINE -> r16)
$0543: $D174:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$0544: $E80D:  F: $8D -> r16 (SSD_CHARGE_PUMP -> r16)
$0545: $D172:  F: rcall $6B8 (_ssd_command_)
$0546: $E104:  F: $14 -> r16 ($14 -> r16)
$0547: $D170:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$0548: $E200:  F: $20 -> r16 (SSD_ADDR_MODE -> r16)
$0549: $D16E:  F: rcall $6B8 (_ssd_command_)
$054A: $E000:  F: $00 -> r16 ($00 -> r16)
$054B: $D16C:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$054C: $EA01:  F: $A1 -> r16 ($A1 -> r16)
$054D: $D16A:  F: rcall $6B8 (_ssd_command_)
$054E: $EC08:  F: $C8 -> r16 ($C8 -> r16)
$054F: $D168:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$0550: $ED0A:  F: $DA -> r16 ($DA -> r16)
$0551: $D166:  F: rcall $6B8 (_ssd_command_)
$0552: $E102:  F: $12 -> r16 ($12 -> r16)
$0553: $D164:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$0554: $E801:  F: $81 -> r16 (SSD_CONTRAST -> r16)
$0555: $D162:  F: rcall $6B8 (_ssd_command_)
$0556: $EC0F:  F: $CF -> r16 ($CF -> r16)
$0557: $D160:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$0558: $ED09:  F: $D9 -> r16 ($D9 -> r16)
$0559: $D15E:  F: rcall $6B8 (_ssd_command_)
$055A: $EF01:  F: $F1 -> r16 ($F1 -> r16)
$055B: $D15C:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$055C: $ED0B:  F: $DB -> r16 ($DB -> r16)
$055D: $D15A:  F: rcall $6B8 (_ssd_command_)
$055E: $E300:  F: $30 -> r16 ($30 -> r16)
$055F: $D158:  F: rcall $6B8 (_ssd_command_)
$0560: $EA04:  F: $A4 -> r16 ($A4 -> r16)
$0561: $D156:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$0562: $EA06:  F: $A6 -> r16 ($A6 -> r16)
$0563: $D154:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$0564: $EA0F:  F: $AF -> r16 (SSD_ON -> r16)
$0565: $D152:  F: rcall $6B8 (_ssd_command_)
-----          L: 
$0566: $DD9C:  F: rcall $303 (_ssd_Clr)
-----          L: 
$0567: $9508:  F: RET (ret)
-----          V: D_ssd_font
-----          L: 
$0568: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$0570: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$0578: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$0580: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$0588: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$0590: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
$0598: $00 $00 $00 $00 $00 $00 $00 $00 $5F $00 $00 $00 $00 $07 $00 $07
$05A0: $00 $00 $14 $7F $14 $7F $14 $00 $24 $2A $7F $2A $12 $00 $23 $13
$05A8: $08 $64 $62 $00 $36 $49 $55 $22 $50 $00 $00 $05 $03 $00 $00 $00
$05B0: $00 $1C $22 $41 $00 $00 $00 $41 $22 $1C $00 $00 $14 $08 $3E $08
$05B8: $14 $00 $08 $08 $3E $08 $08 $00 $00 $50 $30 $00 $00 $00 $08 $08
$05C0: $08 $08 $08 $00 $00 $60 $60 $00 $00 $00 $20 $10 $08 $04 $02 $00
$05C8: $3E $51 $49 $45 $3E $00 $00 $42 $7F $40 $00 $00 $42 $61 $51 $49
$05D0: $46 $00 $21 $41 $45 $4B $31 $00 $18 $14 $12 $7F $10 $00 $27 $45
$05D8: $45 $45 $39 $00 $3C $4A $49 $49 $30 $00 $01 $71 $09 $05 $03 $00
$05E0: $36 $49 $49 $49 $36 $00 $06 $49 $49 $29 $1E $00 $00 $36 $36 $00
$05E8: $00 $00 $00 $56 $36 $00 $00 $00 $08 $14 $22 $41 $00 $00 $14 $14
$05F0: $14 $14 $14 $00 $00 $41 $22 $14 $08 $00 $02 $01 $51 $09 $06 $00
$05F8: $32 $49 $79 $41 $3E $00 $7E $11 $11 $11 $7E $00 $7F $49 $49 $49
$0600: $36 $00 $3E $41 $41 $41 $22 $00 $7F $41 $41 $22 $1C $00 $7F $49
$0608: $49 $49 $41 $00 $7F $09 $09 $09 $01 $00 $3E $41 $49 $49 $7A $00
$0610: $7F $08 $08 $08 $7F $00 $00 $41 $7F $41 $00 $00 $20 $40 $41 $3F
$0618: $01 $00 $7F $08 $14 $22 $41 $00 $7F $40 $40 $40 $40 $00 $7F $02
$0620: $0C $02 $7F $00 $7F $04 $08 $10 $7F $00 $3E $41 $41 $41 $3E $00
$0628: $7F $09 $09 $09 $06 $00 $3E $41 $51 $21 $5E $00 $7F $09 $19 $29
$0630: $46 $00 $46 $49 $49 $49 $31 $00 $01 $01 $7F $01 $01 $00 $3F $40
$0638: $40 $40 $3F $00 $1F $20 $40 $20 $1F $00 $3F $40 $38 $40 $3F $00
$0640: $63 $14 $08 $14 $63 $00 $07 $08 $70 $08 $07 $00 $61 $51 $49 $45
$0648: $43 $00 $00 $7F $41 $41 $00 $00 $02 $04 $08 $10 $20 $00 $00 $41
$0650: $41 $7F $00 $00 $00 $1F $10 $54 $38 $10 $00 $C0 $C0 $C0 $C0 $00
$0658: $00 $01 $02 $04 $00 $00 $20 $54 $54 $54 $78 $00 $7F $48 $44 $44
$0660: $38 $00 $38 $44 $44 $44 $20 $00 $38 $44 $44 $48 $7F $00 $38 $54
$0668: $54 $54 $18 $00 $08 $7E $09 $01 $02 $00 $0C $52 $52 $52 $3E $00
$0670: $7F $08 $04 $04 $78 $00 $00 $44 $7D $40 $00 $00 $20 $40 $44 $3D
$0678: $00 $00 $7F $10 $28 $44 $00 $00 $00 $41 $7F $40 $00 $00 $7C $04
$0680: $18 $04 $78 $00 $7C $08 $04 $04 $78 $00 $38 $44 $44 $44 $38 $00
$0688: $7C $14 $14 $14 $08 $00 $08 $14 $14 $18 $7C $00 $7C $08 $04 $04
$0690: $08 $00 $48 $54 $54 $54 $20 $00 $04 $3F $44 $40 $20 $00 $3C $40
$0698: $40 $20 $7C $00 $1C $20 $40 $20 $1C $00 $3C $40 $30 $40 $3C $00
$06A0: $44 $28 $10 $28 $44 $00 $0C $50 $50 $50 $3C $00 $44 $64 $54 $4C
$06A8: $44 $00 $00 $08 $36 $41 $00 $00 $00 $00 $7F $00 $00 $00 $00 $41
$06B0: $36 $08 $00 $00 $10 $08 $08 $10 $08 $00 $00 $00 $00 $00 $00 $00
-----          L: 
-----          V: _ssd_Convert
-----          L: 
-----          V: _ssd_command_
$06B8: $930F:  F: r16 -> (r16 ->)
-----          L: 
$06B9: $DB95:  F: rcall $24F (_iic_start)
-----          L: 
$06BA: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$06BB: $C004:  C: goto $6C0 (RJMP) (f_arbitrationLost = 1)
               F: SSD_ADDR -> TWDR  ...
$06BC: $E708:     $78 -> r16
$06BD: $9300:     r16 -> [$00BB]
$06BE: $00BB:  
$06BF: $DB9F:  F: rcall $25F (_iic_send_)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\iic.alg    ***********
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ssd1306.alg    ***********
-----          L: 
$06C0: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$06C1: $C004:  C: goto $6C6 (RJMP) (f_arbitrationLost = 1)
               F: $00 -> TWDR  ...
$06C2: $E000:     $00 -> r16
$06C3: $9300:     r16 -> [$00BB]
$06C4: $00BB:  
$06C5: $DB99:  F: rcall $25F (_iic_send_)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\iic.alg    ***********
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ssd1306.alg    ***********
-----          L: 
$06C6: $910F:  F: -> r16 (-> r16)
$06C7: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$06C8: $C003:  C: goto $6CC (RJMP) (f_arbitrationLost = 1)
$06C9: $9300:  F: r16 -> [$00BB] (r16 -> TWDR)
$06CA: $00BB:  
$06CB: $DB93:  F: rcall $25F (_iic_send_)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\iic.alg    ***********
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ssd1306.alg    ***********
-----          L: 
$06CC: $DBA4:  F: rcall $271 (_iic_stop)
$06CD: $9508:  F: RET (RET)
-----          V: _ssd_data_
$06CE: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$06CF: $C003:  C: goto $6D3 (RJMP) (f_arbitrationLost = 1)
$06D0: $9300:  F: r16 -> [$00BB] (r16 -> TWDR)
$06D1: $00BB:  
$06D2: $DB8C:  F: rcall $25F (_iic_send_)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\iic.alg    ***********
-----          L: 
$06D3: $9100:  F: [$051E] -> r16 (ssd_Last_X -> r16)
$06D4: $051E:  
$06D5: $9503:  F: r16 ++ (r16++)
               C: if (r16 < 128) then goto $06DE ...
$06D6: $3800:     r16 = $80
$06D7: $F030:     if ( < ) then goto $6DE
               F: ssd_Last_Y++  ...
$06D8: $9100:     [$051F] -> r16
$06D9: $051F:  
$06DA: $9503:     r16 ++
$06DB: $9300:     r16 -> [$051F]
$06DC: $051F:  
$06DD: $E000:  F: $00 -> r16 (0 -> r16)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ssd1306.alg    ***********
-----          L: 
$06DE: $9300:  F: r16 -> [$051E] (r16 -> ssd_Last_X)
$06DF: $051E:  
$06E0: $9508:  F: RET (RET)
-----          V: _ssd_startData
-----          L: 
$06E1: $DB6D:  F: rcall $24F (_iic_start)
-----          L: 
$06E2: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$06E3: $C004:  C: goto $6E8 (RJMP) (f_arbitrationLost = 1)
               F: SSD_ADDR -> TWDR  ...
$06E4: $E708:     $78 -> r16
$06E5: $9300:     r16 -> [$00BB]
$06E6: $00BB:  
$06E7: $DB77:  F: rcall $25F (_iic_send_)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\iic.alg    ***********
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ssd1306.alg    ***********
-----          L: 
$06E8: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$06E9: $C004:  C: goto $6EE (RJMP) (f_arbitrationLost = 1)
               F: $40 -> TWDR  ...
$06EA: $E400:     $40 -> r16
$06EB: $9300:     r16 -> [$00BB]
$06EC: $00BB:  
$06ED: $DB71:  F: rcall $25F (_iic_send_)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\iic.alg    ***********
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ssd1306.alg    ***********
-----          L: 
$06EE: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          V: _print_string_l_
               F: << Z  ...
$06EF: $0FEE:     << r30
$06F0: $1FFF:     << r31 <
-----          L: 
$06F1: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $06F5 ...
$06F2: $3000:     r16 = $00
$06F3: $F409:     if (Z=0) then goto $6F5
$06F4: $9508:  F: RET (ret)
$06F5: $DC1E:  F: rcall $314 (_ssd_Parse_r16)
$06F6: $CFFA:  J: goto $6F1 (RJMP)
-----          L: 
$06F7: $9508:  F: RET (ret)
-----          V: _print_string_
               F: Z -> PRINT_Z_temp  ...
$06F8: $93E0:     r30 -> [$0520]
$06F9: $0520:  
$06FA: $93F0:     r31 -> [$0521]
$06FB: $0521:  
               F: -> Z  ...
$06FC: $91FF:     -> r31
$06FD: $91EF:     -> r30
               F: << Z  ...
$06FE: $0FEE:     << r30
$06FF: $1FFF:     << r31 <
-----          L: 
$0700: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $0705 ...
$0701: $3000:     r16 = $00
$0702: $F011:     if (Z=1) then goto $705
$0703: $DC10:  F: rcall $314 (_ssd_Parse_r16)
$0704: $CFFB:  J: goto $700 (RJMP)
-----          L: 
$0705: $9631:  F: r30,r31 + $01 (Z + 1)
               F: Z >>  ...
$0706: $95F6:     r31 >>
$0707: $95E7:     > r30 >>
               F: Z ->  ...
$0708: $93EF:     r30 ->
$0709: $93FF:     r31 ->
               F: PRINT_Z_temp -> Z  ...
$070A: $91E0:     [$0520] -> r30
$070B: $0520:  
$070C: $91F0:     [$0521] -> r31
$070D: $0521:  
-----          L: 
$070E: $9508:  F: RET (ret)
-----          V: _print_string_v_
-----          L: 
$070F: $9101:  F: [Z++] -> r16 ([Z++] -> r16)
               C: if (r16 = EOS) then goto $0713 ...
$0710: $3000:     r16 = $00
$0711: $F409:     if (Z=0) then goto $713
$0712: $9508:  F: RET (ret)
$0713: $DC00:  F: rcall $314 (_ssd_Parse_r16)
$0714: $CFFA:  J: goto $70F (RJMP)
-----          L: 
$0715: $9508:  F: RET (ret)
-----          V: _print_DECV2_
-----          L: 
               F: "0" -> PRINT_Dec0_Flag  ...
$0716: $E300:     $30 -> r16
$0717: $9300:     r16 -> [$0522]
$0718: $0522:  
-----          L: 
               F: 10000 -> r17:Word  ...
$0719: $E110:     $10 -> r17
$071A: $E227:     $27 -> r18
$071B: $D022:  F: rcall $73E (_Print_DEC_Char_)
-----          L: 
               F: 1000 -> r17:Word  ...
$071C: $EE18:     $E8 -> r17
$071D: $E023:     $03 -> r18
$071E: $D01F:  F: rcall $73E (_Print_DEC_Char_)
-----          L: 
               F: 100 -> r17:Word  ...
$071F: $E614:     $64 -> r17
$0720: $E020:     $00 -> r18
$0721: $D01C:  F: rcall $73E (_Print_DEC_Char_)
-----          L: 
               F: 10 -> r17:Word  ...
$0722: $E01A:     $0A -> r17
$0723: $E020:     $00 -> r18
$0724: $D04B:  F: rcall $770 (_Print_DEC_Char)
-----          L: 
$0725: $E20E:  F: $2E -> r16 ("." -> r16)
$0726: $DBED:  F: rcall $314 (_ssd_Parse_r16)
-----          L: 
$0727: $E300:  F: $30 -> r16 ("0" -> r16)
$0728: $0F0E:  F: r16 + r30 (r16 + ZL)
$0729: $DBEA:  F: rcall $314 (_ssd_Parse_r16)
$072A: $9508:  F: RET (ret)
-----          L: 
-----          V: _print_DEC2_
-----          L: 
               F: "0" -> PRINT_Dec0_Flag  ...
$072B: $E300:     $30 -> r16
$072C: $9300:     r16 -> [$0522]
$072D: $0522:  
-----          L: 
               F: 10000 -> r17:Word  ...
$072E: $E110:     $10 -> r17
$072F: $E227:     $27 -> r18
$0730: $D00D:  F: rcall $73E (_Print_DEC_Char_)
-----          L: 
               F: 1000 -> r17:Word  ...
$0731: $EE18:     $E8 -> r17
$0732: $E023:     $03 -> r18
$0733: $D00A:  F: rcall $73E (_Print_DEC_Char_)
-----          L: 
               F: 100 -> r17:Word  ...
$0734: $E614:     $64 -> r17
$0735: $E020:     $00 -> r18
$0736: $D007:  F: rcall $73E (_Print_DEC_Char_)
-----          L: 
               F: 10 -> r17:Word  ...
$0737: $E01A:     $0A -> r17
$0738: $E020:     $00 -> r18
$0739: $D036:  F: rcall $770 (_Print_DEC_Char)
-----          L: 
$073A: $E300:  F: $30 -> r16 ("0" -> r16)
$073B: $0F0E:  F: r16 + r30 (r16 + ZL)
$073C: $DBD7:  F: rcall $314 (_ssd_Parse_r16)
$073D: $9508:  F: RET (ret)
-----          L: 
-----          V: _Print_DEC_Char_
-----          L: 
               C: if (Z < r17:Word) then goto $0745 ...
$073E: $17E1:     r30 = r17
$073F: $07F2:     r31 = r18=
$0740: $F020:     if ( < ) then goto $745
               F: Z - r17:Word  ...
$0741: $1BE1:     r30 - r17
$0742: $0BF2:     r31 - r18 -
$0743: $9503:  F: r16 ++ (r16 ++)
$0744: $CFF9:  J: goto $73E (RJMP)
-----          L: 
$0745: $9508:  F: RET (ret)
-----          V: _print_HEX_
$0746: $2F0F:  F: r31 -> r16 (ZH -> r16)
$0747: $9502:  F: >> r16 << (>>r16<<)
$0748: $D03B:  F: rcall $784 (_Print_HEX_Char)
-----          L: 
$0749: $2F0F:  F: r31 -> r16 (ZH -> r16)
$074A: $D039:  F: rcall $784 (_Print_HEX_Char)
-----          L: 
$074B: $2F0E:  F: r30 -> r16 (ZL -> r16)
$074C: $9502:  F: >> r16 << (>>r16<<)
$074D: $D036:  F: rcall $784 (_Print_HEX_Char)
-----          L: 
$074E: $2F0E:  F: r30 -> r16 (ZL -> r16)
$074F: $D034:  F: rcall $784 (_Print_HEX_Char)
-----          L: 
$0750: $9508:  F: RET (ret)
-----          L: 
-----          V: _print_DEC_
-----          L: 
               F: "0" -> PRINT_Dec0_Flag  ...
$0751: $E300:     $30 -> r16
$0752: $9300:     r16 -> [$0522]
$0753: $0522:  
-----          L: 
               F: 10000 -> r17:Word  ...
$0754: $E110:     $10 -> r17
$0755: $E227:     $27 -> r18
$0756: $D019:  F: rcall $770 (_Print_DEC_Char)
-----          L: 
               F: 1000 -> r17:Word  ...
$0757: $EE18:     $E8 -> r17
$0758: $E023:     $03 -> r18
$0759: $D016:  F: rcall $770 (_Print_DEC_Char)
-----          L: 
               F: 100 -> r17:Word  ...
$075A: $E614:     $64 -> r17
$075B: $E020:     $00 -> r18
$075C: $D013:  F: rcall $770 (_Print_DEC_Char)
-----          L: 
               F: 10 -> r17:Word  ...
$075D: $E01A:     $0A -> r17
$075E: $E020:     $00 -> r18
$075F: $D010:  F: rcall $770 (_Print_DEC_Char)
-----          L: 
$0760: $E300:  F: $30 -> r16 ("0" -> r16)
$0761: $0F0E:  F: r16 + r30 (r16 + ZL)
$0762: $DBB1:  F: rcall $314 (_ssd_Parse_r16)
$0763: $9508:  F: RET (ret)
-----          L: 
-----          V: _print_BIT_
-----          L: 
               F: << Z  ...
$0764: $0FEE:     << r30
$0765: $1FFF:     << r31 <
$0766: $F008:  C: if (C=1) then goto $768 (C = 0)
$0767: $E300:  F: $30 -> r16 (PRINT_BIT_ZERO_CHAR -> r16)
$0768: $F408:  C: if (C=0) then goto $76A (C = 1)
$0769: $E301:  F: $31 -> r16 (PRINT_BIT_ONE_CHAR -> r16)
$076A: $931F:  F: r17 -> (r17 ->)
$076B: $DBA8:  F: rcall $314 (_ssd_Parse_r16)
$076C: $911F:  F: -> r17 (-> r17)
               C: if (r17 --) then goto $0764 ...
$076D: $951A:     r17 --
$076E: $F7A9:     if (Z=0) then goto $764
$076F: $9508:  F: RET (ret)
-----          L: 
-----          V: _Print_DEC_Char
$0770: $E300:  F: $30 -> r16 ("0" -> r16)
-----          L: 
               C: if (Z < r17:Word) then goto $0778 ...
$0771: $17E1:     r30 = r17
$0772: $07F2:     r31 = r18=
$0773: $F020:     if ( < ) then goto $778
               F: Z - r17:Word  ...
$0774: $1BE1:     r30 - r17
$0775: $0BF2:     r31 - r18 -
$0776: $9503:  F: r16 ++ (r16 ++)
$0777: $CFF9:  J: goto $771 (RJMP)
-----          L: 
-----          L: 
               C: if (r16 -= "0") then goto $0780 ...
$0778: $3300:     r16 = $30
$0779: $F431:     if (Z=0) then goto $780
$077A: $9110:  F: [$0522] -> r17 (PRINT_Dec0_Flag -> r17)
$077B: $0522:  
               C: if (r17 -= "0") then goto $0782 ...
$077C: $3310:     r17 = $30
$077D: $F421:     if (Z=0) then goto $782
-----          L: 
$077E: $E300:  F: $30 -> r16 (PRINT_DEC_ZERO_CHAR -> r16)
-----          L: 
$077F: $C002:  J: goto $782 (RJMP)
-----          L: 
$0780: $9300:  F: r16 -> [$0522] (r16 -> PRINT_Dec0_Flag)
$0781: $0522:  
-----          L: 
$0782: $DB91:  F: rcall $314 (_ssd_Parse_r16)
$0783: $9508:  F: RET (ret)
-----          L: 
-----          V: _Print_HEX_Char
$0784: $700F:  F: r16 & $0F (r16 & #b00001111)
               C: if (r16 < 10) then goto $0788 ...
$0785: $300A:     r16 = $0A
$0786: $F408:     if ( >= ) then goto $788
$0787: $5D00:  F: r16 - $D0 (r16 + "0")
               C: if (r16 < 16) then goto $078B ...
$0788: $3100:     r16 = $10
$0789: $F408:     if ( >= ) then goto $78B
$078A: $5C09:  F: r16 - $C9 (r16 + "A"-10)
$078B: $DB88:  F: rcall $314 (_ssd_Parse_r16)
$078C: $9508:  F: RET (ret)
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\PrintU.alg    ***********
-----          V: _PrintU_string_l_
               F: << Z  ...
$078D: $0FEE:     << r30
$078E: $1FFF:     << r31 <
-----          L: 
$078F: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $0793 ...
$0790: $3000:     r16 = $00
$0791: $F409:     if (Z=0) then goto $793
$0792: $9508:  F: RET (ret)
$0793: $D9F0:  F: rcall $184 (_UART_PUSH_r16)
$0794: $CFFA:  J: goto $78F (RJMP)
-----          L: 
$0795: $9508:  F: RET (ret)
-----          V: _PrintU_string_
               F: Z -> PrintU_Z_temp  ...
$0796: $93E0:     r30 -> [$0523]
$0797: $0523:  
$0798: $93F0:     r31 -> [$0524]
$0799: $0524:  
               F: -> Z  ...
$079A: $91FF:     -> r31
$079B: $91EF:     -> r30
               F: << Z  ...
$079C: $0FEE:     << r30
$079D: $1FFF:     << r31 <
-----          L: 
$079E: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $07A3 ...
$079F: $3000:     r16 = $00
$07A0: $F011:     if (Z=1) then goto $7A3
$07A1: $D9E2:  F: rcall $184 (_UART_PUSH_r16)
$07A2: $CFFB:  J: goto $79E (RJMP)
-----          L: 
$07A3: $9631:  F: r30,r31 + $01 (Z + 1)
               F: Z >>  ...
$07A4: $95F6:     r31 >>
$07A5: $95E7:     > r30 >>
               F: Z ->  ...
$07A6: $93EF:     r30 ->
$07A7: $93FF:     r31 ->
               F: PrintU_Z_temp -> Z  ...
$07A8: $91E0:     [$0523] -> r30
$07A9: $0523:  
$07AA: $91F0:     [$0524] -> r31
$07AB: $0524:  
-----          L: 
$07AC: $9508:  F: RET (ret)
-----          V: _PrintU_string_v_
-----          L: 
$07AD: $9101:  F: [Z++] -> r16 ([Z++] -> r16)
               C: if (r16 = EOS) then goto $07B1 ...
$07AE: $3000:     r16 = $00
$07AF: $F409:     if (Z=0) then goto $7B1
$07B0: $9508:  F: RET (ret)
$07B1: $D9D2:  F: rcall $184 (_UART_PUSH_r16)
$07B2: $CFFA:  J: goto $7AD (RJMP)
-----          L: 
$07B3: $9508:  F: RET (ret)
-----          V: _PrintU_HEX_
$07B4: $2F0E:  F: r30 -> r16 (ZL -> r16)
$07B5: $9502:  F: >> r16 << (>>r16<<)
$07B6: $D036:  F: rcall $7ED (_PrintU_HEX_Char)
-----          L: 
$07B7: $2F0E:  F: r30 -> r16 (ZL -> r16)
$07B8: $D034:  F: rcall $7ED (_PrintU_HEX_Char)
-----          L: 
$07B9: $9508:  F: RET (ret)
-----          L: 
-----          V: _PrintU_DEC_
-----          L: 
               F: "0" -> PrintU_Dec0_Flag  ...
$07BA: $E300:     $30 -> r16
$07BB: $9300:     r16 -> [$0525]
$07BC: $0525:  
-----          L: 
               F: 10000 -> r17:Word  ...
$07BD: $E110:     $10 -> r17
$07BE: $E227:     $27 -> r18
$07BF: $D019:  F: rcall $7D9 (_PrintU_DEC_Char)
-----          L: 
               F: 1000 -> r17:Word  ...
$07C0: $EE18:     $E8 -> r17
$07C1: $E023:     $03 -> r18
$07C2: $D016:  F: rcall $7D9 (_PrintU_DEC_Char)
-----          L: 
               F: 100 -> r17:Word  ...
$07C3: $E614:     $64 -> r17
$07C4: $E020:     $00 -> r18
$07C5: $D013:  F: rcall $7D9 (_PrintU_DEC_Char)
-----          L: 
               F: 10 -> r17:Word  ...
$07C6: $E01A:     $0A -> r17
$07C7: $E020:     $00 -> r18
$07C8: $D010:  F: rcall $7D9 (_PrintU_DEC_Char)
-----          L: 
$07C9: $E300:  F: $30 -> r16 ("0" -> r16)
$07CA: $0F0E:  F: r16 + r30 (r16 + ZL)
$07CB: $D9B8:  F: rcall $184 (_UART_PUSH_r16)
$07CC: $9508:  F: RET (ret)
-----          L: 
-----          V: _PrintU_BIT_
-----          L: 
               F: << Z  ...
$07CD: $0FEE:     << r30
$07CE: $1FFF:     << r31 <
$07CF: $F008:  C: if (C=1) then goto $7D1 (C = 0)
$07D0: $E300:  F: $30 -> r16 (PrintU_BIT_ZERO_CHAR -> r16)
$07D1: $F408:  C: if (C=0) then goto $7D3 (C = 1)
$07D2: $E301:  F: $31 -> r16 (PrintU_BIT_ONE_CHAR -> r16)
$07D3: $931F:  F: r17 -> (r17 ->)
$07D4: $D9AF:  F: rcall $184 (_UART_PUSH_r16)
$07D5: $911F:  F: -> r17 (-> r17)
               C: if (r17 --) then goto $07CD ...
$07D6: $951A:     r17 --
$07D7: $F7A9:     if (Z=0) then goto $7CD
$07D8: $9508:  F: RET (ret)
-----          L: 
-----          V: _PrintU_DEC_Char
$07D9: $E300:  F: $30 -> r16 ("0" -> r16)
-----          L: 
               C: if (Z < r17:Word) then goto $07E1 ...
$07DA: $17E1:     r30 = r17
$07DB: $07F2:     r31 = r18=
$07DC: $F020:     if ( < ) then goto $7E1
               F: Z - r17:Word  ...
$07DD: $1BE1:     r30 - r17
$07DE: $0BF2:     r31 - r18 -
$07DF: $9503:  F: r16 ++ (r16 ++)
$07E0: $CFF9:  J: goto $7DA (RJMP)
-----          L: 
-----          L: 
               C: if (r16 -= "0") then goto $07E9 ...
$07E1: $3300:     r16 = $30
$07E2: $F431:     if (Z=0) then goto $7E9
$07E3: $9110:  F: [$0525] -> r17 (PrintU_Dec0_Flag -> r17)
$07E4: $0525:  
               C: if (r17 -= "0") then goto $07EB ...
$07E5: $3310:     r17 = $30
$07E6: $F421:     if (Z=0) then goto $7EB
$07E7: $9508:  F: RET (ret)
-----          L: 
-----          L: 
$07E8: $C002:  J: goto $7EB (RJMP)
-----          L: 
$07E9: $9300:  F: r16 -> [$0525] (r16 -> PrintU_Dec0_Flag)
$07EA: $0525:  
-----          L: 
$07EB: $D998:  F: rcall $184 (_UART_PUSH_r16)
$07EC: $9508:  F: RET (ret)
-----          L: 
-----          V: _PrintU_HEX_Char
$07ED: $700F:  F: r16 & $0F (r16 & #b00001111)
               C: if (r16 < 10) then goto $07F1 ...
$07EE: $300A:     r16 = $0A
$07EF: $F408:     if ( >= ) then goto $7F1
$07F0: $5D00:  F: r16 - $D0 (r16 + "0")
               C: if (r16 < 16) then goto $07F4 ...
$07F1: $3100:     r16 = $10
$07F2: $F408:     if ( >= ) then goto $7F4
$07F3: $5C09:  F: r16 - $C9 (r16 + "A"-10)
$07F4: $D98F:  F: rcall $184 (_UART_PUSH_r16)
$07F5: $9508:  F: RET (ret)
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          V: _ms_eeRestoreSafeState
               F: Y ->  ...
$07F6: $93CF:     r28 ->
$07F7: $93DF:     r29 ->
               F: X ->  ...
$07F8: $93AF:     r26 ->
$07F9: $93BF:     r27 ->
               C: if (ms_currentProg=0) then goto $0801 ...
$07FA: $9100:     [$0526] -> r16
$07FB: $0526:  
$07FC: $3000:     r16 = $00
$07FD: $F019:     if (Z=1) then goto $801
               F: @ee_ms_Prog1->X  ...
$07FE: $E0A5:     $05 -> r26
$07FF: $E0B0:     $00 -> r27
$0800: $C002:  J: goto $803 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
               F: @ee_ms_Prog1->X  ...
$0801: $E0A5:     $05 -> r26
$0802: $E0B0:     $00 -> r27
-----          L: 
               C: if (ms_currentProg=1) then goto $0809 ...
$0803: $9100:     [$0526] -> r16
$0804: $0526:  
$0805: $3001:     r16 = $01
$0806: $F011:     if (Z=1) then goto $809
$0807: $0000:  F: NOP (NOP)
$0808: $C002:  J: goto $80B (RJMP)
-----          L: 
               F: @ee_ms_Prog2->X  ...
$0809: $E2A5:     $25 -> r26
$080A: $E0B1:     $01 -> r27
-----          L: 
               C: if (ms_currentProg=2) then goto $0811 ...
$080B: $9100:     [$0526] -> r16
$080C: $0526:  
$080D: $3002:     r16 = $02
$080E: $F011:     if (Z=1) then goto $811
$080F: $0000:  F: NOP (NOP)
$0810: $C002:  J: goto $813 (RJMP)
-----          L: 
               F: @ee_ms_Prog3->X  ...
$0811: $E4A5:     $45 -> r26
$0812: $E0B2:     $02 -> r27
-----          L: 
               F: @ms_objTable -> Y  ...
$0813: $E4C8:     $48 -> r28
$0814: $E0D5:     $05 -> r29
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          L: 
               C: if (EE[X] -= 255) then goto $081F ...
$0815: $BDA1:     r26 -> p$21
$0816: $BDB2:     r27 -> p$22
$0817: $9AF8:     1 -> p$1F.0
$0818: $B500:     p$20 -> r16
$0819: $3F0F:     r16 = $FF
$081A: $F421:     if (Z=0) then goto $81F
$081B: $D3C2:  F: rcall $BDE (_ms_do_objBlank)
               F: MS_TYPE_LIST_END -> [Y + MS_OBJ_TYPE + MS_OBJ_SIZE]  ...
$081C: $EF0F:     $FF -> r16
$081D: $8B08:     r16 -> [Y+$10]
$081E: $D2D6:  F: rcall $AF5 (_ms_eeSave)
-----          L: 
-----          L: 
               F: EE[X] -> [Y]  ...
$081F: $BDA1:     r26 -> p$21
$0820: $BDB2:     r27 -> p$22
$0821: $9AF8:     1 -> p$1F.0
$0822: $B500:     p$20 -> r16
$0823: $8308:     r16 -> [Y+$00]
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0834 ...
$0824: $8108:     [Y+$00] -> r 16
$0825: $3F0F:     r16 = $FF
$0826: $F069:     if (Z=1) then goto $834
$0827: $E009:  F: $09 -> r16 (9 -> r16)
-----          L: 
$0828: $930F:  F: r16 -> (r16 ->)
               F: EE[X++] -> [Y++]  ...
$0829: $BDA1:     r26 -> p$21
$082A: $BDB2:     r27 -> p$22
$082B: $9611:     r26,r27 + $01
$082C: $9AF8:     1 -> p$1F.0
$082D: $B500:     p$20 -> r16
$082E: $9309:     r16 -> [Y++]
$082F: $910F:  F: -> r16 (-> r16)
               C: if (r16--) then goto $0828 ...
$0830: $950A:     r16 --
$0831: $F7B1:     if (Z=0) then goto $828
$0832: $9627:  F: r28,r29 + $07 (Y + (MS_OBJ_SIZE - 9))
$0833: $CFEB:  J: goto $81F (RJMP)
-----          L: 
               F: -> X  ...
$0834: $91BF:     -> r27
$0835: $91AF:     -> r26
               F: -> Y  ...
$0836: $91DF:     -> r29
$0837: $91CF:     -> r28
$0838: $9508:  F: RET (RET)
-----          V: _ms_eeRestore
               F: Y ->  ...
$0839: $93CF:     r28 ->
$083A: $93DF:     r29 ->
               F: X ->  ...
$083B: $93AF:     r26 ->
$083C: $93BF:     r27 ->
               C: if (ms_currentProg=0) then goto $0844 ...
$083D: $9100:     [$0526] -> r16
$083E: $0526:  
$083F: $3000:     r16 = $00
$0840: $F019:     if (Z=1) then goto $844
               F: @ee_ms_Prog1->X  ...
$0841: $E0A5:     $05 -> r26
$0842: $E0B0:     $00 -> r27
$0843: $C002:  J: goto $846 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
               F: @ee_ms_Prog1->X  ...
$0844: $E0A5:     $05 -> r26
$0845: $E0B0:     $00 -> r27
-----          L: 
               C: if (ms_currentProg=1) then goto $084C ...
$0846: $9100:     [$0526] -> r16
$0847: $0526:  
$0848: $3001:     r16 = $01
$0849: $F011:     if (Z=1) then goto $84C
$084A: $0000:  F: NOP (NOP)
$084B: $C002:  J: goto $84E (RJMP)
-----          L: 
               F: @ee_ms_Prog2->X  ...
$084C: $E2A5:     $25 -> r26
$084D: $E0B1:     $01 -> r27
-----          L: 
               C: if (ms_currentProg=2) then goto $0854 ...
$084E: $9100:     [$0526] -> r16
$084F: $0526:  
$0850: $3002:     r16 = $02
$0851: $F011:     if (Z=1) then goto $854
$0852: $0000:  F: NOP (NOP)
$0853: $C002:  J: goto $856 (RJMP)
-----          L: 
               F: @ee_ms_Prog3->X  ...
$0854: $E4A5:     $45 -> r26
$0855: $E0B2:     $02 -> r27
-----          L: 
               F: @ms_objTable -> Y  ...
$0856: $E4C8:     $48 -> r28
$0857: $E0D5:     $05 -> r29
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          L: 
               C: if (EE[X] -= 255) then goto $0862 ...
$0858: $BDA1:     r26 -> p$21
$0859: $BDB2:     r27 -> p$22
$085A: $9AF8:     1 -> p$1F.0
$085B: $B500:     p$20 -> r16
$085C: $3F0F:     r16 = $FF
$085D: $F421:     if (Z=0) then goto $862
$085E: $D37F:  F: rcall $BDE (_ms_do_objBlank)
               F: MS_TYPE_LIST_END -> [Y + MS_OBJ_TYPE + MS_OBJ_SIZE]  ...
$085F: $EF0F:     $FF -> r16
$0860: $8B08:     r16 -> [Y+$10]
$0861: $D293:  F: rcall $AF5 (_ms_eeSave)
-----          L: 
-----          L: 
               F: EE[X] -> [Y]  ...
$0862: $BDA1:     r26 -> p$21
$0863: $BDB2:     r27 -> p$22
$0864: $9AF8:     1 -> p$1F.0
$0865: $B500:     p$20 -> r16
$0866: $8308:     r16 -> [Y+$00]
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $087A ...
$0867: $8108:     [Y+$00] -> r 16
$0868: $3F0F:     r16 = $FF
$0869: $F081:     if (Z=1) then goto $87A
$086A: $E009:  F: $09 -> r16 (9 -> r16)
-----          L: 
$086B: $930F:  F: r16 -> (r16 ->)
               F: EE[X++] -> [Y++]  ...
$086C: $BDA1:     r26 -> p$21
$086D: $BDB2:     r27 -> p$22
$086E: $9611:     r26,r27 + $01
$086F: $9AF8:     1 -> p$1F.0
$0870: $B500:     p$20 -> r16
$0871: $9309:     r16 -> [Y++]
$0872: $910F:  F: -> r16 (-> r16)
               C: if (r16--) then goto $086B ...
$0873: $950A:     r16 --
$0874: $F7B1:     if (Z=0) then goto $86B
               F: 0 -> [Y++]  ...
$0875: $E000:     $00 -> r16
$0876: $9309:     r16 -> [Y++]
               F: 0 -> [Y++]  ...
$0877: $9309:     r16 -> [Y++]
$0878: $9625:  F: r28,r29 + $05 (Y + (MS_OBJ_SIZE - 11))
$0879: $CFE8:  J: goto $862 (RJMP)
-----          L: 
               F: -> X  ...
$087A: $91BF:     -> r27
$087B: $91AF:     -> r26
               F: -> Y  ...
$087C: $91DF:     -> r29
$087D: $91CF:     -> r28
$087E: $9508:  F: RET (RET)
-----          V: _ms_printMessage
$087F: $E000:  F: $00 -> r16 (0 -> r16)
$0880: $E010:  F: $00 -> r17 (0 -> r17)
$0881: $DA6A:  F: rcall $2EC (_ssd_Pos_)
               F: Z ->  ...
$0882: $93EF:     r30 ->
$0883: $93FF:     r31 ->
               F: @ms_message -> Z  ...
$0884: $E2EB:     $2B -> r30
$0885: $E0F5:     $05 -> r31
$0886: $DE88:  F: rcall $70F (_print_string_v_)
               F: -> Z  ...
$0887: $91FF:     -> r31
$0888: $91EF:     -> r30
$0889: $DA55:  F: rcall $2DF (_ssd_clrRestLine)
$088A: $9508:  F: RET (RET)
-----          V: _ms_message_
               F: Z -> ms_Ztemp  ...
$088B: $93E0:     r30 -> [$0546]
$088C: $0546:  
$088D: $93F0:     r31 -> [$0547]
$088E: $0547:  
               F: -> Z  ...
$088F: $91FF:     -> r31
$0890: $91EF:     -> r30
               F: X ->  ...
$0891: $93AF:     r26 ->
$0892: $93BF:     r27 ->
               F: @ms_message -> X  ...
$0893: $E2AB:     $2B -> r26
$0894: $E0B5:     $05 -> r27
               F: << Z  ...
$0895: $0FEE:     << r30
$0896: $1FFF:     << r31 <
-----          L: 
$0897: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $089C ...
$0898: $3000:     r16 = $00
$0899: $F011:     if (Z=1) then goto $89C
$089A: $930D:  F: r16 -> [X++] (r16 -> [X++])
$089B: $CFFB:  J: goto $897 (RJMP)
-----          L: 
               F: 0 -> [X]  ...
$089C: $E000:     $00 -> r16
$089D: $930C:     r16 -> [X]
$089E: $9631:  F: r30,r31 + $01 (Z + 1)
               F: Z >>  ...
$089F: $95F6:     r31 >>
$08A0: $95E7:     > r30 >>
               F: -> X  ...
$08A1: $91BF:     -> r27
$08A2: $91AF:     -> r26
               F: Z ->  ...
$08A3: $93EF:     r30 ->
$08A4: $93FF:     r31 ->
               F: ms_Ztemp -> Z  ...
$08A5: $91E0:     [$0546] -> r30
$08A6: $0546:  
$08A7: $91F0:     [$0547] -> r31
$08A8: $0547:  
-----          L: 
               F: 2000/STIMER_PERIOD_CALL -> [@STimer_Counter + DO_MESSCLEAR]  ...
$08A9: $EC08:     $C8 -> r16
$08AA: $9300:     r16 -> [$0516]
$08AB: $0516:  
               F: 2000/STIMER_PERIOD_CALL -> [@STimer_Counter_Stop + DO_MESSCLEAR]  ...
$08AC: $9300:     r16 -> [$051A]
$08AD: $051A:  
-----          L: 
$08AE: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$08AF: $9508:  F: RET (RET)
-----          V: _ms_do_order
               F: Y ->  ...
$08B0: $93CF:     r28 ->
$08B1: $93DF:     r29 ->
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$08B2: $E3C8:     $38 -> r28
$08B3: $E0D5:     $05 -> r29
-----          L: 
$08B4: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $08D7 ...
$08B5: $8108:     [Y+$00] -> r 16
$08B6: $3F0F:     r16 = $FF
$08B7: $F0F9:     if (Z=1) then goto $8D7
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $08B4 ...
$08B8: $8108:     [Y+$00] -> r 16
$08B9: $3001:     r16 = $01
$08BA: $F7C9:     if (Z=0) then goto $8B4
               C: if ([Y+MS_OBJ_ORDER] = [Y+MS_OBJ_STATUS]) then goto $08B4 ...
$08BB: $8509:     [Y+$09] -> r 16
$08BC: $851A:     [Y+$0A] -> r 17
$08BD: $1701:     r16 = r17
$08BE: $F3A9:     if (Z=1) then goto $8B4
-----          L: 
-----          L: 
$08BF: $7F3D:  F: r19 & $FD (0 -> f_arbitrationLost)
$08C0: $D98E:  F: rcall $24F (_iic_start)
$08C1: $D036:  F: rcall $8F8 (_ms_addressCreate)
$08C2: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$08C3: $C003:  C: goto $8C7 (RJMP) (f_arbitrationLost = 1)
$08C4: $9300:  F: r16 -> [$00BB] (r16 -> TWDR)
$08C5: $00BB:  
$08C6: $D998:  F: rcall $25F (_iic_send_)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\iic.alg    ***********
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          L: 
               F: 128 -> [Y+MS_OBJ_STATUS]  ...
$08C7: $E800:     $80 -> r16
$08C8: $870A:     r16 -> [Y+$0A]
               C: if (iic_status -= MT_SLA_ACK) then goto $08CE ...
$08C9: $3148:     r20 = $18
$08CA: $F419:     if (Z=0) then goto $8CE
               F: [Y+MS_OBJ_ORDER] -> [Y+MS_OBJ_STATUS]  ...
$08CB: $8509:     [Y+$09] -> r 16
$08CC: $870A:     r16 -> [Y+$0A]
-----          L: 
$08CD: $D04A:  F: rcall $918 (_ms_dataCreate)
-----          L: 
$08CE: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$08CF: $C003:  C: goto $8D3 (RJMP) (f_arbitrationLost = 1)
$08D0: $9300:  F: r16 -> [$00BB] (r16 -> TWDR)
$08D1: $00BB:  
$08D2: $D98C:  F: rcall $25F (_iic_send_)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\iic.alg    ***********
-----          L: 
$08D3: $D99D:  F: rcall $271 (_iic_stop)
$08D4: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$08D5: $CFE9:  C: goto $8BF (RJMP) (f_arbitrationLost = 1)
$08D6: $CFDD:  J: goto $8B4 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          L: 
-----          L: 
               F: -> Y  ...
$08D7: $91DF:     -> r29
$08D8: $91CF:     -> r28
$08D9: $9508:  F: RET (RET)
-----          V: _ms_resetAllRelay
               F: 7 -> ms_objCurrentScan  ...
$08DA: $E007:     $07 -> r16
$08DB: $9300:     r16 -> [$0749]
$08DC: $0749:  
-----          L: 
$08DD: $7F3D:  F: r19 & $FD (0 -> f_arbitrationLost)
$08DE: $D970:  F: rcall $24F (_iic_start)
$08DF: $9100:  F: [$0749] -> r16 (ms_objCurrentScan -> r16)
$08E0: $0749:  
$08E1: $0F00:  F: << r16 (<< r16)
$08E2: $6400:  F: r16 ! $40 (r16 ! #b01000000)
$08E3: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$08E4: $C003:  C: goto $8E8 (RJMP) (f_arbitrationLost = 1)
$08E5: $9300:  F: r16 -> [$00BB] (r16 -> TWDR)
$08E6: $00BB:  
$08E7: $D977:  F: rcall $25F (_iic_send_)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\iic.alg    ***********
-----          L: 
$08E8: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$08E9: $C004:  C: goto $8EE (RJMP) (f_arbitrationLost = 1)
               F: 128+1 -> TWDR  ...
$08EA: $E801:     $81 -> r16
$08EB: $9300:     r16 -> [$00BB]
$08EC: $00BB:  
$08ED: $D971:  F: rcall $25F (_iic_send_)
-----          L: 
$08EE: $D982:  F: rcall $271 (_iic_stop)
$08EF: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$08F0: $CFEC:  C: goto $8DD (RJMP) (f_arbitrationLost = 1)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          L: 
               C: if (ms_objCurrentScan --) then goto $08DD ...
$08F1: $9100:     [$0749] -> r16
$08F2: $0749:  
$08F3: $5001:     r16 - $01
$08F4: $9300:     r16 -> [$0749]
$08F5: $0749:  
$08F6: $F731:     if (Z=0) then goto $8DD
-----          L: 
$08F7: $9508:  F: RET (RET)
-----          V: _ms_addressCreate
$08F8: $8109:  F: [Y+$01] -> r 16 ([Y+MS_OBJ_ADDR] -> r16)
$08F9: $9502:  F: >> r16 << (>> r16 <<)
$08FA: $7007:  F: r16 & $07 (r16 & #b00000111)
$08FB: $0F00:  F: << r16 (<< r16)
$08FC: $6400:  F: r16 ! $40 (r16 ! #b01000000)
$08FD: $9508:  F: RET (RET)
-----          V: _ms_parseData
$08FE: $FB03:  F: r16.3 -> T (r16.3 -> T)
$08FF: $7707:  F: r16 & $77 (r16 & #b01110111)
$0900: $2F10:  F: r16 -> r17 (r16 -> r17)
-----          L: 
               F: Y ->  ...
$0901: $93CF:     r28 ->
$0902: $93DF:     r29 ->
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$0903: $E3C8:     $38 -> r28
$0904: $E0D5:     $05 -> r29
-----          L: 
$0905: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0915 ...
$0906: $8108:     [Y+$00] -> r 16
$0907: $3F0F:     r16 = $FF
$0908: $F061:     if (Z=1) then goto $915
               C: if ([Y+MS_OBJ_ADDR] -= r17) then goto $0905 ...
$0909: $8109:     [Y+$01] -> r 16
$090A: $1701:     r16 = r17
$090B: $F7C9:     if (Z=0) then goto $905
$090C: $F026:  C: if (T=1) then goto $911 (T = 1)
               F: LOW -> [Y+MS_OBJ_ORDER]  ...
$090D: $E000:     $00 -> r16
$090E: $8709:     r16 -> [Y+$09]
               F: LOW -> [Y+MS_OBJ_STATUS]  ...
$090F: $870A:     r16 -> [Y+$0A]
-----          L: 
$0910: $CFF4:  J: goto $905 (RJMP)
-----          L: 
               F: HIGH -> [Y+MS_OBJ_ORDER]  ...
$0911: $EF0F:     $FF -> r16
$0912: $8709:     r16 -> [Y+$09]
               F: HIGH -> [Y+MS_OBJ_STATUS]  ...
$0913: $870A:     r16 -> [Y+$0A]
-----          L: 
$0914: $CFF0:  J: goto $905 (RJMP)
-----          L: 
               F: -> Y  ...
$0915: $91DF:     -> r29
$0916: $91CF:     -> r28
$0917: $9508:  F: RET (RET)
-----          V: _ms_dataCreate
$0918: $8119:  F: [Y+$01] -> r 17 ([Y+MS_OBJ_ADDR] -> r17)
               C: if ([Y+MS_OBJ_ORDER] -= 0) then goto $091D ...
$0919: $8509:     [Y+$09] -> r 16
$091A: $3000:     r16 = $00
$091B: $F009:     if (Z=1) then goto $91D
$091C: $6018:  F: r17 ! $08 (1 -> r17.3)
$091D: $2F01:  F: r17 -> r16 (r17 -> r16)
$091E: $9508:  F: RET (RET)
-----          V: _ms_hold
               C: if (ms_mode -= MS_MODE_STOP_BUILD) then goto $0924 ...
$091F: $9100:     [$0528] -> r16
$0920: $0528:  
$0921: $3001:     r16 = $01
$0922: $F409:     if (Z=0) then goto $924
$0923: $D1D1:  F: rcall $AF5 (_ms_eeSave)
-----          L: 
               C: if (ms_mode = MS_MODE_MENU) then goto $092D ...
$0924: $9100:     [$0528] -> r16
$0925: $0528:  
$0926: $3006:     r16 = $06
$0927: $F029:     if (Z=1) then goto $92D
               F: MS_MODE_MENU -> ms_mode  ...
$0928: $E006:     $06 -> r16
$0929: $9300:     r16 -> [$0528]
$092A: $0528:  
$092B: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$092C: $6038:  F: r19 ! $08 (1 -> f_resetAllRelay)
-----          L: 
$092D: $9508:  F: RET (RET)
-----          V: _ms_click
$092E: $9100:  F: [$0528] -> r16 (ms_mode -> r16)
$092F: $0528:  
               C: if (r16 = MS_MODE_MENU) then goto $1542 ...
$0930: $3006:     r16 = $06
$0931: $F411:     if (Z=0) then goto $934
$0932: $940C:     goto $1542
$0933: $1542:  
               C: if (r16 = MS_MODE_WORK_CYCLE) then goto $13B8 ...
$0934: $3003:     r16 = $03
$0935: $F411:     if (Z=0) then goto $938
$0936: $940C:     goto $13B8
$0937: $13B8:  
               C: if (r16 = MS_MODE_WORK_ONCE) then goto $13B8 ...
$0938: $3004:     r16 = $04
$0939: $F411:     if (Z=0) then goto $93C
$093A: $940C:     goto $13B8
$093B: $13B8:  
               C: if (r16 = MS_MODE_STOP_MANUAL) then goto $1A90 ...
$093C: $3002:     r16 = $02
$093D: $F411:     if (Z=0) then goto $940
$093E: $940C:     goto $1A90
$093F: $1A90:  
               C: if (r16 = MS_MODE_STOP_BUILD) then goto $16FA ...
$0940: $3001:     r16 = $01
$0941: $F411:     if (Z=0) then goto $944
$0942: $940C:     goto $16FA
$0943: $16FA:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION) then goto $1778 ...
$0944: $300A:     r16 = $0A
$0945: $F411:     if (Z=0) then goto $948
$0946: $940C:     goto $1778
$0947: $1778:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION_EDIT) then goto $190E ...
$0948: $3604:     r16 = $64
$0949: $F411:     if (Z=0) then goto $94C
$094A: $940C:     goto $190E
$094B: $190E:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION_MOVE) then goto $1951 ...
$094C: $3606:     r16 = $66
$094D: $F411:     if (Z=0) then goto $950
$094E: $940C:     goto $1951
$094F: $1951:  
               C: if (r16 = MS_MODE_TITLE) then goto $09C1 ...
$0950: $3000:     r16 = $00
$0951: $F409:     if (Z=0) then goto $953
$0952: $C06E:     goto $9C1 (RJMP)
               C: if (r16 = MS_MODE_SOURCES_VIEWER) then goto $0D5E ...
$0953: $3007:     r16 = $07
$0954: $F409:     if (Z=0) then goto $956
$0955: $C408:     goto $D5E (RJMP)
               C: if (r16 = MS_MODE_CONDITIONS_EDIT) then goto $1161 ...
$0956: $3009:     r16 = $09
$0957: $F411:     if (Z=0) then goto $95A
$0958: $940C:     goto $1161
$0959: $1161:  
               C: if (r16 = MS_MODE_CONDITIONS_EDIT_IF) then goto $1292 ...
$095A: $300B:     r16 = $0B
$095B: $F411:     if (Z=0) then goto $95E
$095C: $940C:     goto $1292
$095D: $1292:  
               C: if (r16 = MS_MODE_CONDITIONS_WORK) then goto $0E06 ...
$095E: $3008:     r16 = $08
$095F: $F409:     if (Z=0) then goto $961
$0960: $C4A5:     goto $E06 (RJMP)
-----          L: 
-----          L: 
$0961: $9508:  F: RET (RET)
-----          V: _ms_navi
$0962: $9100:  F: [$0528] -> r16 (ms_mode -> r16)
$0963: $0528:  
               C: if (r16 = MS_MODE_WORK_CYCLE) then goto $1391 ...
$0964: $3003:     r16 = $03
$0965: $F411:     if (Z=0) then goto $968
$0966: $940C:     goto $1391
$0967: $1391:  
               C: if (r16 = MS_MODE_WORK_ONCE) then goto $1391 ...
$0968: $3004:     r16 = $04
$0969: $F411:     if (Z=0) then goto $96C
$096A: $940C:     goto $1391
$096B: $1391:  
               C: if (r16 = MS_MODE_MENU) then goto $1528 ...
$096C: $3006:     r16 = $06
$096D: $F411:     if (Z=0) then goto $970
$096E: $940C:     goto $1528
$096F: $1528:  
               C: if (r16 = MS_MODE_STOP_MANUAL) then goto $1A69 ...
$0970: $3002:     r16 = $02
$0971: $F411:     if (Z=0) then goto $974
$0972: $940C:     goto $1A69
$0973: $1A69:  
               C: if (r16 = MS_MODE_STOP_BUILD) then goto $16D3 ...
$0974: $3001:     r16 = $01
$0975: $F411:     if (Z=0) then goto $978
$0976: $940C:     goto $16D3
$0977: $16D3:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION) then goto $175E ...
$0978: $300A:     r16 = $0A
$0979: $F411:     if (Z=0) then goto $97C
$097A: $940C:     goto $175E
$097B: $175E:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION_EDIT) then goto $1864 ...
$097C: $3604:     r16 = $64
$097D: $F411:     if (Z=0) then goto $980
$097E: $940C:     goto $1864
$097F: $1864:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION_MOVE) then goto $1940 ...
$0980: $3606:     r16 = $66
$0981: $F411:     if (Z=0) then goto $984
$0982: $940C:     goto $1940
$0983: $1940:  
               C: if (r16 = MS_MODE_CONDITIONS_EDIT) then goto $107F ...
$0984: $3009:     r16 = $09
$0985: $F409:     if (Z=0) then goto $987
$0986: $C6F8:     goto $107F (RJMP)
               C: if (r16 = MS_MODE_CONDITIONS_EDIT_IF) then goto $11EB ...
$0987: $300B:     r16 = $0B
$0988: $F411:     if (Z=0) then goto $98B
$0989: $940C:     goto $11EB
$098A: $11EB:  
               C: if (r16 = MS_MODE_CONDITIONS_WORK) then goto $0DDE ...
$098B: $3008:     r16 = $08
$098C: $F409:     if (Z=0) then goto $98E
$098D: $C450:     goto $DDE (RJMP)
-----          L: 
-----          L: 
$098E: $9508:  F: RET (RET)
-----          V: _ms_do_vis
$098F: $9100:  F: [$0528] -> r16 (ms_mode -> r16)
$0990: $0528:  
               C: if (r16 = MS_MODE_WORK_CYCLE) then goto $136B ...
$0991: $3003:     r16 = $03
$0992: $F411:     if (Z=0) then goto $995
$0993: $940C:     goto $136B
$0994: $136B:  
               C: if (r16 = MS_MODE_WORK_ONCE) then goto $136B ...
$0995: $3004:     r16 = $04
$0996: $F411:     if (Z=0) then goto $999
$0997: $940C:     goto $136B
$0998: $136B:  
               C: if (r16 = MS_MODE_TITLE) then goto $09C9 ...
$0999: $3000:     r16 = $00
$099A: $F171:     if (Z=1) then goto $9C9
               C: if (r16 = MS_MODE_MENU) then goto $142B ...
$099B: $3006:     r16 = $06
$099C: $F411:     if (Z=0) then goto $99F
$099D: $940C:     goto $142B
$099E: $142B:  
               C: if (r16 = MS_MODE_STOP_MANUAL) then goto $1956 ...
$099F: $3002:     r16 = $02
$09A0: $F411:     if (Z=0) then goto $9A3
$09A1: $940C:     goto $1956
$09A2: $1956:  
               C: if (r16 = MS_MODE_STOP_BUILD) then goto $1644 ...
$09A3: $3001:     r16 = $01
$09A4: $F411:     if (Z=0) then goto $9A7
$09A5: $940C:     goto $1644
$09A6: $1644:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION) then goto $1702 ...
$09A7: $300A:     r16 = $0A
$09A8: $F411:     if (Z=0) then goto $9AB
$09A9: $940C:     goto $1702
$09AA: $1702:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION_EDIT) then goto $17DE ...
$09AB: $3604:     r16 = $64
$09AC: $F411:     if (Z=0) then goto $9AF
$09AD: $940C:     goto $17DE
$09AE: $17DE:  
               C: if (r16 = MS_MODE_STOP_BUILD_ACTION_MOVE) then goto $192F ...
$09AF: $3606:     r16 = $66
$09B0: $F411:     if (Z=0) then goto $9B3
$09B1: $940C:     goto $192F
$09B2: $192F:  
               C: if (r16 = MS_MODE_SOURCES_VIEWER) then goto $0D03 ...
$09B3: $3007:     r16 = $07
$09B4: $F409:     if (Z=0) then goto $9B6
$09B5: $C34D:     goto $D03 (RJMP)
               C: if (r16 = MS_MODE_CONDITIONS_EDIT) then goto $1099 ...
$09B6: $3009:     r16 = $09
$09B7: $F409:     if (Z=0) then goto $9B9
$09B8: $C6E0:     goto $1099 (RJMP)
               C: if (r16 = MS_MODE_CONDITIONS_EDIT_IF) then goto $1273 ...
$09B9: $300B:     r16 = $0B
$09BA: $F411:     if (Z=0) then goto $9BD
$09BB: $940C:     goto $1273
$09BC: $1273:  
               C: if (r16 = MS_MODE_CONDITIONS_WORK) then goto $0DFE ...
$09BD: $3008:     r16 = $08
$09BE: $F409:     if (Z=0) then goto $9C0
$09BF: $C43E:     goto $DFE (RJMP)
-----          L: 
-----          L: 
$09C0: $9508:  F: RET (RET)
-----          V: _ms_clicTitle
               F: 0 -> ms_posMenu  ...
$09C1: $E000:     $00 -> r16
$09C2: $9300:     r16 -> [$074A]
$09C3: $074A:  
               F: MS_MODE_MENU -> ms_mode  ...
$09C4: $E006:     $06 -> r16
$09C5: $9300:     r16 -> [$0528]
$09C6: $0528:  
$09C7: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$09C8: $9508:  F: RET (RET)
-----          V: _ms_visTitle
-----          L: 
$09C9: $DEB5:  F: rcall $87F (_ms_printMessage)
-----          L: 
$09CA: $DD2D:  F: rcall $6F8 (_print_string_)
$09CB: $20 $20 $20 $20 $20 $20 $73 $6F $69 $2D $74 $65 $63 $68 $01 $00
$09D3: $D90B:  F: rcall $2DF (_ssd_clrRestLine)
$09D4: $DD23:  F: rcall $6F8 (_print_string_)
$09D5: $08 $20 $20 $20 $20 $20 $4D $55 $4C $54 $49 $53 $57 $49 $54 $43
$09DD: $48 $20 $20 $20 $20 $20 $01 $00
$09E1: $E000:  F: $00 -> r16 (0 -> r16)
$09E2: $E014:  F: $04 -> r17 (4 -> r17)
$09E3: $D908:  F: rcall $2EC (_ssd_Pos_)
$09E4: $D8FA:  F: rcall $2DF (_ssd_clrRestLine)
$09E5: $D8F9:  F: rcall $2DF (_ssd_clrRestLine)
$09E6: $DD11:  F: rcall $6F8 (_print_string_)
$09E7: $2A $20 $68 $6F $6C $64 $20 $65 $6E $63 $6F $64 $65 $72 $01 $00
$09EF: $D8EF:  F: rcall $2DF (_ssd_clrRestLine)
$09F0: $DD07:  F: rcall $6F8 (_print_string_)
$09F1: $20 $20 $66 $6F $72 $20 $74 $68 $65 $20 $6D $69 $6E $65 $20 $6D
$09F9: $65 $6E $75 $01 $00 $00
$09FC: $D8E2:  F: rcall $2DF (_ssd_clrRestLine)
$09FD: $9508:  F: RET (RET)
-----          V: _ms_printAddress
               C: if ([Y+MS_OBJ_ORDER]=MS_ORDER_ON) then goto $0A03 ...
$09FE: $8509:     [Y+$09] -> r 16
$09FF: $3F0F:     r16 = $FF
$0A00: $F011:     if (Z=1) then goto $A03
$0A01: $0000:  F: NOP (NOP)
$0A02: $C002:  J: goto $A05 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$0A03: $DCF4:  F: rcall $6F8 (_print_string_)
$0A04: $03 $00
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          L: 
               C: if ([Y+MS_OBJ_ORDER]=[Y+MS_OBJ_STATUS]) then goto $0A0C ...
$0A05: $8509:     [Y+$09] -> r 16
$0A06: $851A:     [Y+$0A] -> r 17
$0A07: $1701:     r16 = r17
$0A08: $F019:     if (Z=1) then goto $A0C
$0A09: $DCEE:  F: rcall $6F8 (_print_string_)
$0A0A: $2D $00
$0A0B: $C002:  J: goto $A0E (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$0A0C: $DCEB:  F: rcall $6F8 (_print_string_)
$0A0D: $5B $00
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          L: 
$0A0E: $8109:  F: [Y+$01] -> r 16 ([Y+MS_OBJ_ADDR] -> r16)
               C: if (r16 -= 0) then goto $0A20 ...
$0A0F: $3000:     r16 = $00
$0A10: $F479:     if (Z=0) then goto $A20
$0A11: $DCE6:  F: rcall $6F8 (_print_string_)
$0A12: $2E $2E $2E $00
               C: if ([Y+MS_OBJ_ORDER]=[Y+MS_OBJ_STATUS]) then goto $0A1C ...
$0A14: $8509:     [Y+$09] -> r 16
$0A15: $851A:     [Y+$0A] -> r 17
$0A16: $1701:     r16 = r17
$0A17: $F021:     if (Z=1) then goto $A1C
$0A18: $DCDF:  F: rcall $6F8 (_print_string_)
$0A19: $2D $01 $20 $00
$0A1B: $C003:  J: goto $A1F (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$0A1C: $DCDB:  F: rcall $6F8 (_print_string_)
$0A1D: $5D $01 $20 $00
-----          L: 
$0A1F: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          L: 
$0A20: $7700:  F: r16 & $70 (r16 & #b01110000)
$0A21: $9502:  F: >> r16 << (>>r16<<)
$0A22: $5D00:  F: r16 - $D0 (r16 + "0")
$0A23: $D8F0:  F: rcall $314 (_ssd_Parse_r16)
$0A24: $DCD3:  F: rcall $6F8 (_print_string_)
$0A25: $2E $00
$0A26: $8109:  F: [Y+$01] -> r 16 ([Y+MS_OBJ_ADDR] -> r16)
$0A27: $7007:  F: r16 & $07 (r16 & #b00000111)
$0A28: $5C0F:  F: r16 - $CF (r16 + "1")
$0A29: $D8EA:  F: rcall $314 (_ssd_Parse_r16)
               C: if ([Y+MS_OBJ_ORDER]=[Y+MS_OBJ_STATUS]) then goto $0A32 ...
$0A2A: $8509:     [Y+$09] -> r 16
$0A2B: $851A:     [Y+$0A] -> r 17
$0A2C: $1701:     r16 = r17
$0A2D: $F021:     if (Z=1) then goto $A32
$0A2E: $DCC9:  F: rcall $6F8 (_print_string_)
$0A2F: $2D $01 $20 $00
$0A31: $C003:  J: goto $A35 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$0A32: $DCC5:  F: rcall $6F8 (_print_string_)
$0A33: $5D $01 $20 $00
-----          L: 
$0A35: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          V: _ms_printKey
               C: if ([Y+MS_OBJ_KEY]=MS_KEY_FREE) then goto $0A3B ...
$0A36: $810A:     [Y+$02] -> r 16
$0A37: $3000:     r16 = $00
$0A38: $F011:     if (Z=1) then goto $A3B
$0A39: $E50E:  F: $5E -> r16 ("^"->r16)
$0A3A: $C001:  J: goto $A3C (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$0A3B: $E50F:  F: $5F -> r16 ("_"->r16)
-----          L: 
$0A3C: $D8D7:  F: rcall $314 (_ssd_Parse_r16)
$0A3D: $DCBA:  F: rcall $6F8 (_print_string_)
$0A3E: $01 $20 $00 $00
$0A40: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          V: _ms_printIdle_s
$0A41: $E000:  F: $00 -> r16 (0 -> r16)
$0A42: $810B:  F: [Y+$03] -> r 16 ([Y+MS_OBJ_TIME_IDLE_S] -> r16)
               F: r16 ! [Y+MS_OBJ_TIME_IDLE_M + 0]  ...
$0A43: $811C:     [Y+$04] -> r 17
$0A44: $2B01:     r16 ! r17
               F: r16 ! [Y+MS_OBJ_TIME_IDLE_M + 1]  ...
$0A45: $811D:     [Y+$05] -> r 17
$0A46: $2B01:     r16 ! r17
               C: if (r16 = 0) then goto $0A51 ...
$0A47: $3000:     r16 = $00
$0A48: $F041:     if (Z=1) then goto $A51
               F: Z ->  ...
$0A49: $93EF:     r30 ->
$0A4A: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_IDLE_S] -> Z  ...
$0A4B: $81EB:     [Y+$03] -> r 30
$0A4C: $E0F0:     $00 -> r31
$0A4D: $DCDD:  F: rcall $72B (_print_DEC2_)
               F: -> Z  ...
$0A4E: $91FF:     -> r31
$0A4F: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$0A50: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          L: 
$0A51: $DCA6:  F: rcall $6F8 (_print_string_)
$0A52: $2D $20 $00 $00
$0A54: $9508:  F: RET (RET)
-----          V: _ms_printInvIdle
$0A55: $DCA2:  F: rcall $6F8 (_print_string_)
$0A56: $03 $00
               F: Z ->  ...
$0A57: $93EF:     r30 ->
$0A58: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_IDLE_M]:Word -> Z  ...
$0A59: $81EC:     [Y+$04] -> r 30
$0A5A: $81FD:     [Y+$05] -> r 31
$0A5B: $DCCF:  F: rcall $72B (_print_DEC2_)
               F: -> Z  ...
$0A5C: $91FF:     -> r31
$0A5D: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$0A5E: $DC99:  F: rcall $6F8 (_print_string_)
$0A5F: $3A $00
               F: Z ->  ...
$0A60: $93EF:     r30 ->
$0A61: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_IDLE_S] -> Z  ...
$0A62: $81EB:     [Y+$03] -> r 30
$0A63: $E0F0:     $00 -> r31
$0A64: $DCC6:  F: rcall $72B (_print_DEC2_)
               F: -> Z  ...
$0A65: $91FF:     -> r31
$0A66: $91EF:     -> r30
-----          L: 
$0A67: $DC90:  F: rcall $6F8 (_print_string_)
$0A68: $01 $20 $00 $00
$0A6A: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          V: _ms_printIdle_m
$0A6B: $E000:  F: $00 -> r16 (0 -> r16)
$0A6C: $810B:  F: [Y+$03] -> r 16 ([Y+MS_OBJ_TIME_IDLE_S] -> r16)
               F: r16 ! [Y+MS_OBJ_TIME_IDLE_M + 0]  ...
$0A6D: $811C:     [Y+$04] -> r 17
$0A6E: $2B01:     r16 ! r17
               F: r16 ! [Y+MS_OBJ_TIME_IDLE_M + 1]  ...
$0A6F: $811D:     [Y+$05] -> r 17
$0A70: $2B01:     r16 ! r17
               C: if (r16 = 0) then goto $0A7B ...
$0A71: $3000:     r16 = $00
$0A72: $F041:     if (Z=1) then goto $A7B
               F: Z ->  ...
$0A73: $93EF:     r30 ->
$0A74: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_IDLE_M]:Word -> Z  ...
$0A75: $81EC:     [Y+$04] -> r 30
$0A76: $81FD:     [Y+$05] -> r 31
$0A77: $DCB3:  F: rcall $72B (_print_DEC2_)
               F: -> Z  ...
$0A78: $91FF:     -> r31
$0A79: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$0A7A: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          L: 
$0A7B: $DC7C:  F: rcall $6F8 (_print_string_)
$0A7C: $20 $2D $00 $00
$0A7E: $9508:  F: RET (RET)
-----          V: _ms_printWork_s
$0A7F: $E000:  F: $00 -> r16 (0 -> r16)
$0A80: $810E:  F: [Y+$06] -> r 16 ([Y+MS_OBJ_TIME_WORK_S] -> r16)
               F: r16 ! [Y+MS_OBJ_TIME_WORK_M + 0]  ...
$0A81: $811F:     [Y+$07] -> r 17
$0A82: $2B01:     r16 ! r17
               F: r16 ! [Y+MS_OBJ_TIME_WORK_M + 1]  ...
$0A83: $8518:     [Y+$08] -> r 17
$0A84: $2B01:     r16 ! r17
               C: if (r16 = 0) then goto $0A8F ...
$0A85: $3000:     r16 = $00
$0A86: $F041:     if (Z=1) then goto $A8F
               F: Z ->  ...
$0A87: $93EF:     r30 ->
$0A88: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_WORK_S] -> Z  ...
$0A89: $81EE:     [Y+$06] -> r 30
$0A8A: $E0F0:     $00 -> r31
$0A8B: $DC9F:  F: rcall $72B (_print_DEC2_)
               F: -> Z  ...
$0A8C: $91FF:     -> r31
$0A8D: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$0A8E: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          L: 
$0A8F: $DC68:  F: rcall $6F8 (_print_string_)
$0A90: $2D $20 $00 $00
$0A92: $9508:  F: RET (RET)
-----          V: _ms_printWork_m
$0A93: $E000:  F: $00 -> r16 (0 -> r16)
$0A94: $810E:  F: [Y+$06] -> r 16 ([Y+MS_OBJ_TIME_WORK_S] -> r16)
               F: r16 ! [Y+MS_OBJ_TIME_WORK_M + 0]  ...
$0A95: $811F:     [Y+$07] -> r 17
$0A96: $2B01:     r16 ! r17
               F: r16 ! [Y+MS_OBJ_TIME_WORK_M + 1]  ...
$0A97: $8518:     [Y+$08] -> r 17
$0A98: $2B01:     r16 ! r17
               C: if (r16 = 0) then goto $0AA3 ...
$0A99: $3000:     r16 = $00
$0A9A: $F041:     if (Z=1) then goto $AA3
               F: Z ->  ...
$0A9B: $93EF:     r30 ->
$0A9C: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_WORK_M]:Word -> Z  ...
$0A9D: $81EF:     [Y+$07] -> r 30
$0A9E: $85F8:     [Y+$08] -> r 31
$0A9F: $DC8B:  F: rcall $72B (_print_DEC2_)
               F: -> Z  ...
$0AA0: $91FF:     -> r31
$0AA1: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$0AA2: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          L: 
$0AA3: $DC54:  F: rcall $6F8 (_print_string_)
$0AA4: $20 $2D $00 $00
$0AA6: $9508:  F: RET (RET)
-----          V: _ms_printInvWork
$0AA7: $DC50:  F: rcall $6F8 (_print_string_)
$0AA8: $03 $00
               F: Z ->  ...
$0AA9: $93EF:     r30 ->
$0AAA: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_WORK_M]:Word -> Z  ...
$0AAB: $81EF:     [Y+$07] -> r 30
$0AAC: $85F8:     [Y+$08] -> r 31
$0AAD: $DC7D:  F: rcall $72B (_print_DEC2_)
               F: -> Z  ...
$0AAE: $91FF:     -> r31
$0AAF: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$0AB0: $DC47:  F: rcall $6F8 (_print_string_)
$0AB1: $3A $00
               F: Z ->  ...
$0AB2: $93EF:     r30 ->
$0AB3: $93FF:     r31 ->
               F: [Y+MS_OBJ_TIME_WORK_S] -> Z  ...
$0AB4: $81EE:     [Y+$06] -> r 30
$0AB5: $E0F0:     $00 -> r31
$0AB6: $DC74:  F: rcall $72B (_print_DEC2_)
               F: -> Z  ...
$0AB7: $91FF:     -> r31
$0AB8: $91EF:     -> r30
-----          L: 
$0AB9: $DC3E:  F: rcall $6F8 (_print_string_)
$0ABA: $01 $20 $00 $00
$0ABC: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          V: _ms_init
-----          L: 
               F: ee_ms_currentProg -> r16  ...
$0ABD: $E014:     $04 -> r17
$0ABE: $BD11:     r17 -> p$21
$0ABF: $E010:     $00 -> r17
$0AC0: $BD12:     r17 -> p$22
$0AC1: $9AF8:     1 -> p$1F.0
$0AC2: $B500:     p$20 -> r16
$0AC3: $9300:  F: r16 -> [$0526] (r16 -> ms_currentProg)
$0AC4: $0526:  
               C: if (r16 < 3) then goto $0AD5 ...
$0AC5: $3003:     r16 = $03
$0AC6: $F070:     if ( < ) then goto $AD5
$0AC7: $E000:  F: $00 -> r16 (0 -> r16)
$0AC8: $9300:  F: r16 -> [$0526] (r16 -> ms_currentProg)
$0AC9: $0526:  
               F: r16 -> ee_ms_currentProg  ...
$0ACA: $E014:     $04 -> r17
$0ACB: $BD11:     r17 -> p$21
$0ACC: $E010:     $00 -> r17
$0ACD: $BD12:     r17 -> p$22
$0ACE: $BD00:     r16 -> p$20
$0ACF: $9AFA:     1 -> p$1F.2
$0AD0: $9AF9:     1 -> p$1F.1
$0AD1: $99F9:     if (p$1F.1=0 then SKIP
$0AD2: $CFFE:     goto $AD1 (RJMP)
-----          L: 
$0AD3: $940E:  F: CALL $15E9 (_ms_clearConditions)
$0AD4: $15E9:  
-----          L: 
-----          L: 
$0AD5: $DD63:  F: rcall $839 (_ms_eeRestore)
-----          L: 
               F: ee_ms_afterReset -> ms_afterReset  ...
$0AD6: $E013:     $03 -> r17
$0AD7: $BD11:     r17 -> p$21
$0AD8: $E010:     $00 -> r17
$0AD9: $BD12:     r17 -> p$22
$0ADA: $9AF8:     1 -> p$1F.0
$0ADB: $B500:     p$20 -> r16
$0ADC: $9300:     r16 -> [$0527]
$0ADD: $0527:  
               F: MS_MODE_TITLE -> ms_mode  ...
$0ADE: $E000:     $00 -> r16
$0ADF: $9300:     r16 -> [$0528]
$0AE0: $0528:  
               C: if (ms_afterReset = 0) then goto $0AE8 ...
$0AE1: $9100:     [$0527] -> r16
$0AE2: $0527:  
$0AE3: $3000:     r16 = $00
$0AE4: $F419:     if (Z=0) then goto $AE8
               F: MS_MODE_WORK_CYCLE -> ms_mode  ...
$0AE5: $E003:     $03 -> r16
$0AE6: $9300:     r16 -> [$0528]
$0AE7: $0528:  
               C: if (ms_afterReset = 1) then goto $0AEF ...
$0AE8: $9100:     [$0527] -> r16
$0AE9: $0527:  
$0AEA: $3001:     r16 = $01
$0AEB: $F419:     if (Z=0) then goto $AEF
               F: MS_MODE_CONDITIONS_WORK -> ms_mode  ...
$0AEC: $E008:     $08 -> r16
$0AED: $9300:     r16 -> [$0528]
$0AEE: $0528:  
-----          L: 
-----          L: 
               F: ms_mode -> ms_mode  ...
$0AEF: $9100:     [$0528] -> r16
$0AF0: $0528:  
$0AF1: $9300:     r16 -> [$0528]
$0AF2: $0528:  
$0AF3: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$0AF4: $9508:  F: RET (RET)
-----          V: _ms_eeSave
               F: Y ->  ...
$0AF5: $93CF:     r28 ->
$0AF6: $93DF:     r29 ->
               F: X ->  ...
$0AF7: $93AF:     r26 ->
$0AF8: $93BF:     r27 ->
               C: if (ms_currentProg=0) then goto $0B00 ...
$0AF9: $9100:     [$0526] -> r16
$0AFA: $0526:  
$0AFB: $3000:     r16 = $00
$0AFC: $F019:     if (Z=1) then goto $B00
               F: @ee_ms_Prog1->X  ...
$0AFD: $E0A5:     $05 -> r26
$0AFE: $E0B0:     $00 -> r27
$0AFF: $C002:  J: goto $B02 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
               F: @ee_ms_Prog1->X  ...
$0B00: $E0A5:     $05 -> r26
$0B01: $E0B0:     $00 -> r27
-----          L: 
               C: if (ms_currentProg=1) then goto $0B08 ...
$0B02: $9100:     [$0526] -> r16
$0B03: $0526:  
$0B04: $3001:     r16 = $01
$0B05: $F011:     if (Z=1) then goto $B08
$0B06: $0000:  F: NOP (NOP)
$0B07: $C002:  J: goto $B0A (RJMP)
-----          L: 
               F: @ee_ms_Prog2->X  ...
$0B08: $E2A5:     $25 -> r26
$0B09: $E0B1:     $01 -> r27
-----          L: 
               C: if (ms_currentProg=2) then goto $0B10 ...
$0B0A: $9100:     [$0526] -> r16
$0B0B: $0526:  
$0B0C: $3002:     r16 = $02
$0B0D: $F011:     if (Z=1) then goto $B10
$0B0E: $0000:  F: NOP (NOP)
$0B0F: $C002:  J: goto $B12 (RJMP)
-----          L: 
               F: @ee_ms_Prog3->X  ...
$0B10: $E4A5:     $45 -> r26
$0B11: $E0B2:     $02 -> r27
-----          L: 
               F: @ms_objTable -> Y  ...
$0B12: $E4C8:     $48 -> r28
$0B13: $E0D5:     $05 -> r29
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\multis.alg    ***********
-----          L: 
-----          L: 
               F: [Y] -> EE[X]  ...
$0B14: $8108:     [Y+$00] -> r 16
$0B15: $BDA1:     r26 -> p$21
$0B16: $BDB2:     r27 -> p$22
$0B17: $BD00:     r16 -> p$20
$0B18: $9AFA:     1 -> p$1F.2
$0B19: $9AF9:     1 -> p$1F.1
$0B1A: $99F9:     if (p$1F.1=0 then SKIP
$0B1B: $CFFE:     goto $B1A (RJMP)
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0B2F ...
$0B1C: $8108:     [Y+$00] -> r 16
$0B1D: $3F0F:     r16 = $FF
$0B1E: $F081:     if (Z=1) then goto $B2F
$0B1F: $E009:  F: $09 -> r16 (9 -> r16)
-----          L: 
$0B20: $930F:  F: r16 -> (r16 ->)
               F: [Y++] -> EE[X++]  ...
$0B21: $9109:     [Y++] -> r16
$0B22: $BDA1:     r26 -> p$21
$0B23: $BDB2:     r27 -> p$22
$0B24: $9611:     r26,r27 + $01
$0B25: $BD00:     r16 -> p$20
$0B26: $9AFA:     1 -> p$1F.2
$0B27: $9AF9:     1 -> p$1F.1
$0B28: $99F9:     if (p$1F.1=0 then SKIP
$0B29: $CFFE:     goto $B28 (RJMP)
$0B2A: $910F:  F: -> r16 (-> r16)
               C: if (r16--) then goto $0B20 ...
$0B2B: $950A:     r16 --
$0B2C: $F799:     if (Z=0) then goto $B20
$0B2D: $9627:  F: r28,r29 + $07 (Y + (MS_OBJ_SIZE - 9))
$0B2E: $CFE5:  J: goto $B14 (RJMP)
-----          L: 
               F: -> X  ...
$0B2F: $91BF:     -> r27
$0B30: $91AF:     -> r26
               F: -> Y  ...
$0B31: $91DF:     -> r29
$0B32: $91CF:     -> r28
$0B33: $9508:  F: RET (RET)
-----          V: _ms_posFrameTest
               F: ms_posFrame++  ...
$0B34: $9100:     [$074F] -> r16
$0B35: $074F:  
$0B36: $9503:     r16 ++
$0B37: $9300:     r16 -> [$074F]
$0B38: $074F:  
$0B39: $E210:  F: $20 -> r17 (" " -> r17)
               C: if (r16 = 2) then goto $0B3D ...
$0B3A: $3002:     r16 = $02
$0B3B: $F409:     if (Z=0) then goto $B3D
$0B3C: $E31E:  F: $3E -> r17 (">" -> r17)
$0B3D: $3006:  F: r16 = $06 (r16 = 6)
$0B3E: $9508:  F: RET (RET)
-----          V: _ms_get_visRelayNumber
-----          L: 
               F: Y ->  ...
$0B3F: $93CF:     r28 ->
$0B40: $93DF:     r29 ->
               F: @ms_objTable -> Y  ...
$0B41: $E4C8:     $48 -> r28
$0B42: $E0D5:     $05 -> r29
               F: 0 -> ms_objNumber  ...
$0B43: $E000:     $00 -> r16
$0B44: $9300:     r16 -> [$0748]
$0B45: $0748:  
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0B56 ...
$0B46: $8108:     [Y+$00] -> r 16
$0B47: $3F0F:     r16 = $FF
$0B48: $F069:     if (Z=1) then goto $B56
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $0B54 ...
$0B49: $8108:     [Y+$00] -> r 16
$0B4A: $3001:     r16 = $01
$0B4B: $F441:     if (Z=0) then goto $B54
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $0B54 ...
$0B4C: $8109:     [Y+$01] -> r 16
$0B4D: $3000:     r16 = $00
$0B4E: $F029:     if (Z=1) then goto $B54
               F: ms_objNumber++  ...
$0B4F: $9100:     [$0748] -> r16
$0B50: $0748:  
$0B51: $9503:     r16 ++
$0B52: $9300:     r16 -> [$0748]
$0B53: $0748:  
-----          L: 
-----          L: 
$0B54: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
$0B55: $CFF0:  J: goto $B46 (RJMP)
-----          L: 
               F: -> Y  ...
$0B56: $91DF:     -> r29
$0B57: $91CF:     -> r28
$0B58: $9508:  F: RET (RET)
-----          V: _ms_get_visObjNumber
-----          L: 
               F: Y ->  ...
$0B59: $93CF:     r28 ->
$0B5A: $93DF:     r29 ->
               F: @ms_objTable -> Y  ...
$0B5B: $E4C8:     $48 -> r28
$0B5C: $E0D5:     $05 -> r29
               F: 0 -> ms_objNumber  ...
$0B5D: $E000:     $00 -> r16
$0B5E: $9300:     r16 -> [$0748]
$0B5F: $0748:  
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0B6D ...
$0B60: $8108:     [Y+$00] -> r 16
$0B61: $3F0F:     r16 = $FF
$0B62: $F051:     if (Z=1) then goto $B6D
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_RELAY) then goto $0B6B ...
$0B63: $8108:     [Y+$00] -> r 16
$0B64: $3001:     r16 = $01
$0B65: $F429:     if (Z=0) then goto $B6B
               F: ms_objNumber++  ...
$0B66: $9100:     [$0748] -> r16
$0B67: $0748:  
$0B68: $9503:     r16 ++
$0B69: $9300:     r16 -> [$0748]
$0B6A: $0748:  
$0B6B: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
$0B6C: $CFF3:  J: goto $B60 (RJMP)
-----          L: 
               F: -> Y  ...
$0B6D: $91DF:     -> r29
$0B6E: $91CF:     -> r28
$0B6F: $9508:  F: RET (RET)
-----          V: _ms_get_visAllObjNumber
-----          L: 
               F: Y ->  ...
$0B70: $93CF:     r28 ->
$0B71: $93DF:     r29 ->
               F: @ms_objTable -> Y  ...
$0B72: $E4C8:     $48 -> r28
$0B73: $E0D5:     $05 -> r29
               F: 0 -> ms_objNumber  ...
$0B74: $E000:     $00 -> r16
$0B75: $9300:     r16 -> [$0748]
$0B76: $0748:  
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0B84 ...
$0B77: $8108:     [Y+$00] -> r 16
$0B78: $3F0F:     r16 = $FF
$0B79: $F051:     if (Z=1) then goto $B84
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_RELAY) then goto $0B82 ...
$0B7A: $8108:     [Y+$00] -> r 16
$0B7B: $3001:     r16 = $01
$0B7C: $F429:     if (Z=0) then goto $B82
               F: ms_objNumber++  ...
$0B7D: $9100:     [$0748] -> r16
$0B7E: $0748:  
$0B7F: $9503:     r16 ++
$0B80: $9300:     r16 -> [$0748]
$0B81: $0748:  
$0B82: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
$0B83: $CFF3:  J: goto $B77 (RJMP)
-----          L: 
               F: -> Y  ...
$0B84: $91DF:     -> r29
$0B85: $91CF:     -> r28
$0B86: $9508:  F: RET (RET)
-----          V: _ms_get_ObjPointerY
               F: @ms_objTable -> Y  ...
$0B87: $E4C8:     $48 -> r28
$0B88: $E0D5:     $05 -> r29
               F: ms_posBuild -> ms_objNumber  ...
$0B89: $9100:     [$074B] -> r16
$0B8A: $074B:  
$0B8B: $9300:     r16 -> [$0748]
$0B8C: $0748:  
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0B9E ...
$0B8D: $8108:     [Y+$00] -> r 16
$0B8E: $3F0F:     r16 = $FF
$0B8F: $F071:     if (Z=1) then goto $B9E
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $0B9D ...
$0B90: $8108:     [Y+$00] -> r 16
$0B91: $3001:     r16 = $01
$0B92: $F451:     if (Z=0) then goto $B9D
-----          L: 
               C: if (ms_objNumber = 0) then goto $0B9E ...
$0B93: $9100:     [$0748] -> r16
$0B94: $0748:  
$0B95: $3000:     r16 = $00
$0B96: $F039:     if (Z=1) then goto $B9E
               F: ms_objNumber--  ...
$0B97: $9100:     [$0748] -> r16
$0B98: $0748:  
$0B99: $950A:     r16 --
$0B9A: $9300:     r16 -> [$0748]
$0B9B: $0748:  
$0B9C: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
$0B9D: $CFEF:  J: goto $B8D (RJMP)
-----          L: 
-----          L: 
$0B9E: $9508:  F: RET (RET)
-----          V: _ms_do_ObjNumberTest
-----          L: 
               F: Y ->  ...
$0B9F: $93CF:     r28 ->
$0BA0: $93DF:     r29 ->
               F: @ms_objTable -> Y  ...
$0BA1: $E4C8:     $48 -> r28
$0BA2: $E0D5:     $05 -> r29
               F: 0 -> ms_objNumber  ...
$0BA3: $E000:     $00 -> r16
$0BA4: $9300:     r16 -> [$0748]
$0BA5: $0748:  
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0BB0 ...
$0BA6: $8108:     [Y+$00] -> r 16
$0BA7: $3F0F:     r16 = $FF
$0BA8: $F039:     if (Z=1) then goto $BB0
$0BA9: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
               F: ms_objNumber++  ...
$0BAA: $9100:     [$0748] -> r16
$0BAB: $0748:  
$0BAC: $9503:     r16 ++
$0BAD: $9300:     r16 -> [$0748]
$0BAE: $0748:  
$0BAF: $CFF6:  J: goto $BA6 (RJMP)
-----          L: 
               F: -> Y  ...
$0BB0: $91DF:     -> r29
$0BB1: $91CF:     -> r28
$0BB2: $9508:  F: RET (RET)
-----          V: _ms_do_ObjTest
-----          L: 
               F: Y ->  ...
$0BB3: $93CF:     r28 ->
$0BB4: $93DF:     r29 ->
               F: @ms_objTable -> Y  ...
$0BB5: $E4C8:     $48 -> r28
$0BB6: $E0D5:     $05 -> r29
               F: MS_OBJ_TABLE_SIZE -> ms_objNumber  ...
$0BB7: $E200:     $20 -> r16
$0BB8: $9300:     r16 -> [$0748]
$0BB9: $0748:  
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0BC4 ...
$0BBA: $8108:     [Y+$00] -> r 16
$0BBB: $3F0F:     r16 = $FF
$0BBC: $F039:     if (Z=1) then goto $BC4
$0BBD: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
               F: ms_objNumber--  ...
$0BBE: $9100:     [$0748] -> r16
$0BBF: $0748:  
$0BC0: $950A:     r16 --
$0BC1: $9300:     r16 -> [$0748]
$0BC2: $0748:  
$0BC3: $CFF6:  J: goto $BBA (RJMP)
-----          L: 
               F: -> Y  ...
$0BC4: $91DF:     -> r29
$0BC5: $91CF:     -> r28
$0BC6: $9508:  F: RET (RET)
-----          V: _ms_do_ObjClean
-----          L: 
               F: Y ->  ...
$0BC7: $93CF:     r28 ->
$0BC8: $93DF:     r29 ->
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$0BC9: $E3C8:     $38 -> r28
$0BCA: $E0D5:     $05 -> r29
-----          L: 
$0BCB: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0BDB ...
$0BCC: $8108:     [Y+$00] -> r 16
$0BCD: $3F0F:     r16 = $FF
$0BCE: $F061:     if (Z=1) then goto $BDB
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_NUL) then goto $0BCB ...
$0BCF: $8108:     [Y+$00] -> r 16
$0BD0: $3000:     r16 = $00
$0BD1: $F7C9:     if (Z=0) then goto $BCB
               F: Y ->  ...
$0BD2: $93CF:     r28 ->
$0BD3: $93DF:     r29 ->
-----          L: 
               F: [Y+MS_OBJ_SIZE] -> [Y++]  ...
$0BD4: $8908:     [Y+$10] -> r 16
$0BD5: $9309:     r16 -> [Y++]
               C: if (r16 -= MS_TYPE_LIST_END) then goto $0BD4 ...
$0BD6: $3F0F:     r16 = $FF
$0BD7: $F7E1:     if (Z=0) then goto $BD4
               F: -> Y  ...
$0BD8: $91DF:     -> r29
$0BD9: $91CF:     -> r28
$0BDA: $CFF1:  J: goto $BCC (RJMP)
-----          L: 
               F: -> Y  ...
$0BDB: $91DF:     -> r29
$0BDC: $91CF:     -> r28
$0BDD: $9508:  F: RET (RET)
-----          V: _ms_do_ObjBlank
               F: MS_TYPE_RELAY -> [Y+MS_OBJ_TYPE]  ...
$0BDE: $E001:     $01 -> r16
$0BDF: $8308:     r16 -> [Y+$00]
               F: $10 -> [Y+MS_OBJ_ADDR]  ...
$0BE0: $E100:     $10 -> r16
$0BE1: $8309:     r16 -> [Y+$01]
               F: $0 -> [Y+MS_OBJ_KEY]  ...
$0BE2: $E000:     $00 -> r16
$0BE3: $830A:     r16 -> [Y+$02]
               F: 1 -> [Y+MS_OBJ_TIME_IDLE_S]  ...
$0BE4: $E001:     $01 -> r16
$0BE5: $830B:     r16 -> [Y+$03]
               F: 0 -> [Y+MS_OBJ_TIME_IDLE_M]:Word  ...
$0BE6: $E000:     $00 -> r16
$0BE7: $830C:     r16 -> [Y+$04]
$0BE8: $830D:     r16 -> [Y+$05]
               F: 1 -> [Y+MS_OBJ_TIME_WORK_S]  ...
$0BE9: $E001:     $01 -> r16
$0BEA: $830E:     r16 -> [Y+$06]
               F: 0 -> [Y+MS_OBJ_TIME_WORK_M]:Word  ...
$0BEB: $E000:     $00 -> r16
$0BEC: $830F:     r16 -> [Y+$07]
$0BED: $8708:     r16 -> [Y+$08]
-----          L: 
$0BEE: $9508:  F: RET (RET)
-----          V: _ms_do_ObjSpace
               F: X ->  ...
$0BEF: $93AF:     r26 ->
$0BF0: $93BF:     r27 ->
$0BF1: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
$0BF2: $01DE:  F: r28,r29 -> r26,r27 (Y -> X)
-----          L: 
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0BF8 ...
$0BF3: $8108:     [Y+$00] -> r 16
$0BF4: $3F0F:     r16 = $FF
$0BF5: $F011:     if (Z=1) then goto $BF8
$0BF6: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
$0BF7: $CFFB:  J: goto $BF3 (RJMP)
-----          L: 
$0BF8: $9621:  F: r28,r29 + $01 (Y + 1)
-----          L: 
               F: Y--  ...
$0BF9: $50C1:     r28 - $01
$0BFA: $40D0:     r29 - $00 -
               F: [Y] -> [Y+MS_OBJ_SIZE]  ...
$0BFB: $8108:     [Y+$00] -> r 16
$0BFC: $8B08:     r16 -> [Y+$10]
               C: if (Y -= X) then goto $0BF9 ...
$0BFD: $17CA:     r28 = r26
$0BFE: $07DB:     r29 = r27=
$0BFF: $F7C9:     if (Z=0) then goto $BF9
               F: -> X  ...
$0C00: $91BF:     -> r27
$0C01: $91AF:     -> r26
$0C02: $9508:  F: RET (RET)
-----          V: _ms_do_ObjSwitchDown
               F: X ->  ...
$0C03: $93AF:     r26 ->
$0C04: $93BF:     r27 ->
               C: if ([Y + MS_OBJ_SIZE] = MS_TYPE_LIST_END) then goto $0C19 ...
$0C05: $8908:     [Y+$10] -> r 16
$0C06: $3F0F:     r16 = $FF
$0C07: $F089:     if (Z=1) then goto $C19
$0C08: $01DE:  F: r28,r29 -> r26,r27 (Y -> X)
$0C09: $9650:  F: r26,r27 + $10 (X + MS_OBJ_SIZE)
-----          L: 
$0C0A: $8108:  F: [Y] -> r16 ([Y] -> r16)
$0C0B: $8918:  F: [Y+$10] -> r 17 ([Y + MS_OBJ_SIZE] -> r17)
$0C0C: $8318:  F: r17 -> [Y] (r17 -> [Y])
$0C0D: $8B08:  F: r16 -> [Y+$10] (r16 -> [Y + MS_OBJ_SIZE])
               F: Y++  ...
$0C0E: $5FCF:     r28 - $FF
$0C0F: $4FDF:     r29 - $FF -
               C: if (Y -= X) then goto $0C0A ...
$0C10: $17CA:     r28 = r26
$0C11: $07DB:     r29 = r27=
$0C12: $F7B9:     if (Z=0) then goto $C0A
-----          L: 
$0C13: $01ED:  F: r26,r27 -> r28,r29 (X -> Y)
               F: ms_posBuild++  ...
$0C14: $9100:     [$074B] -> r16
$0C15: $074B:  
$0C16: $9503:     r16 ++
$0C17: $9300:     r16 -> [$074B]
$0C18: $074B:  
-----          L: 
               F: -> X  ...
$0C19: $91BF:     -> r27
$0C1A: $91AF:     -> r26
$0C1B: $9508:  F: RET (RET)
-----          V: _ms_do_ObjSwitchUp
               F: X ->  ...
$0C1C: $93AF:     r26 ->
$0C1D: $93BF:     r27 ->
               C: if (Y = @ms_objTable) then goto $0C33 ...
$0C1E: $34C8:     r28 = $48
$0C1F: $E015:     $05 -> r17
$0C20: $07D1:     r29 = r17=
$0C21: $F089:     if (Z=1) then goto $C33
$0C22: $01DE:  F: r28,r29 -> r26,r27 (Y -> X)
$0C23: $9760:  F: r28,r29 - $10 (Y - MS_OBJ_SIZE)
-----          L: 
$0C24: $8108:  F: [Y] -> r16 ([Y] -> r16)
$0C25: $8918:  F: [Y+$10] -> r 17 ([Y + MS_OBJ_SIZE] -> r17)
$0C26: $8318:  F: r17 -> [Y] (r17 -> [Y])
$0C27: $8B08:  F: r16 -> [Y+$10] (r16 -> [Y + MS_OBJ_SIZE])
               F: Y++  ...
$0C28: $5FCF:     r28 - $FF
$0C29: $4FDF:     r29 - $FF -
               C: if (Y -= X) then goto $0C24 ...
$0C2A: $17CA:     r28 = r26
$0C2B: $07DB:     r29 = r27=
$0C2C: $F7B9:     if (Z=0) then goto $C24
-----          L: 
$0C2D: $01ED:  F: r26,r27 -> r28,r29 (X -> Y)
               F: ms_posBuild--  ...
$0C2E: $9100:     [$074B] -> r16
$0C2F: $074B:  
$0C30: $950A:     r16 --
$0C31: $9300:     r16 -> [$074B]
$0C32: $074B:  
-----          L: 
               F: -> X  ...
$0C33: $91BF:     -> r27
$0C34: $91AF:     -> r26
$0C35: $9508:  F: RET (RET)
-----          V: _ms_do_statusReset
               F: Y ->  ...
$0C36: $93CF:     r28 ->
$0C37: $93DF:     r29 ->
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$0C38: $E3C8:     $38 -> r28
$0C39: $E0D5:     $05 -> r29
-----          L: 
$0C3A: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0C44 ...
$0C3B: $8108:     [Y+$00] -> r 16
$0C3C: $3F0F:     r16 = $FF
$0C3D: $F031:     if (Z=1) then goto $C44
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $0C3A ...
$0C3E: $8108:     [Y+$00] -> r 16
$0C3F: $3001:     r16 = $01
$0C40: $F7C9:     if (Z=0) then goto $C3A
-----          L: 
               F: 128 -> [Y+MS_OBJ_STATUS]  ...
$0C41: $E800:     $80 -> r16
$0C42: $870A:     r16 -> [Y+$0A]
$0C43: $CFF6:  J: goto $C3A (RJMP)
-----          L: 
-----          L: 
               F: -> Y  ...
$0C44: $91DF:     -> r29
$0C45: $91CF:     -> r28
$0C46: $9508:  F: RET (RET)
-----          V: _ms_timersWork
-----          L: 
               C: if (ms_mode = MS_MODE_CONDITIONS_WORK) then goto $0C54 ...
$0C47: $9100:     [$0528] -> r16
$0C48: $0528:  
$0C49: $3008:     r16 = $08
$0C4A: $F049:     if (Z=1) then goto $C54
               C: if (ms_mode = MS_MODE_WORK_CYCLE) then goto $0C55 ...
$0C4B: $9100:     [$0528] -> r16
$0C4C: $0528:  
$0C4D: $3003:     r16 = $03
$0C4E: $F031:     if (Z=1) then goto $C55
               C: if (ms_mode = MS_MODE_WORK_ONCE) then goto $0C55 ...
$0C4F: $9100:     [$0528] -> r16
$0C50: $0528:  
$0C51: $3004:     r16 = $04
$0C52: $F011:     if (Z=1) then goto $C55
-----          L: 
$0C53: $9508:  F: RET (RET)
-----          L: 
$0C54: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
               C: if (ms_pauseOnceCycle = 1) then goto $0C5A ...
$0C55: $9100:     [$0755] -> r16
$0C56: $0755:  
$0C57: $3001:     r16 = $01
$0C58: $F409:     if (Z=0) then goto $C5A
$0C59: $9508:  F: RET (RET)
$0C5A: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
               F: Y ->  ...
$0C5B: $93CF:     r28 ->
$0C5C: $93DF:     r29 ->
               F: X ->  ...
$0C5D: $93AF:     r26 ->
$0C5E: $93BF:     r27 ->
-----          L: 
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$0C5F: $E3C8:     $38 -> r28
$0C60: $E0D5:     $05 -> r29
-----          L: 
-----          L: 
$0C61: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $0CA0 ...
$0C62: $8108:     [Y+$00] -> r 16
$0C63: $3F0F:     r16 = $FF
$0C64: $F1D9:     if (Z=1) then goto $CA0
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $0C61 ...
$0C65: $8108:     [Y+$00] -> r 16
$0C66: $3001:     r16 = $01
$0C67: $F7C9:     if (Z=0) then goto $C61
-----          L: 
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $0CC1 ...
$0C68: $8109:     [Y+$01] -> r 16
$0C69: $3000:     r16 = $00
$0C6A: $F409:     if (Z=0) then goto $C6C
$0C6B: $C055:     goto $CC1 (RJMP)
-----          L: 
-----          L: 
$0C6C: $810B:  F: [Y+$03] -> r 16 ([Y+MS_OBJ_TIME_IDLE_S] -> r16)
               F: [Y+MS_OBJ_TIME_IDLE_M]:Word -> X  ...
$0C6D: $81AC:     [Y+$04] -> r 26
$0C6E: $81BD:     [Y+$05] -> r 27
               C: if (X -= 0) then goto $0C75 ...
$0C6F: $30A0:     r26 = $00
$0C70: $E010:     $00 -> r17
$0C71: $07B1:     r27 = r17=
$0C72: $F411:     if (Z=0) then goto $C75
               C: if (r16 = 0) then goto $0C80 ...
$0C73: $3000:     r16 = $00
$0C74: $F059:     if (Z=1) then goto $C80
-----          L: 
               C: if (r16 = 0) then goto $0C79 ...
$0C75: $3000:     r16 = $00
$0C76: $F011:     if (Z=1) then goto $C79
$0C77: $950A:  F: r16 -- (r16--)
$0C78: $C003:  J: goto $C7C (RJMP)
-----          L: 
$0C79: $E30B:  F: $3B -> r16 (59 -> r16)
               F: X--  ...
$0C7A: $50A1:     r26 - $01
$0C7B: $40B0:     r27 - $00 -
-----          L: 
$0C7C: $830B:  F: r16 -> [Y+$03] (r16 -> [Y+MS_OBJ_TIME_IDLE_S])
               F: X -> [Y+MS_OBJ_TIME_IDLE_M]:Word  ...
$0C7D: $83AC:     r26 -> [Y+$04]
$0C7E: $83BD:     r27 -> [Y+$05]
$0C7F: $C019:  J: goto $C99 (RJMP)
-----          L: 
-----          L: 
-----          L: 
               F: MS_ORDER_ON -> [Y+MS_OBJ_ORDER]  ...
$0C80: $EF0F:     $FF -> r16
$0C81: $8709:     r16 -> [Y+$09]
-----          L: 
-----          L: 
$0C82: $810E:  F: [Y+$06] -> r 16 ([Y+MS_OBJ_TIME_WORK_S] -> r16)
               F: [Y+MS_OBJ_TIME_WORK_M]:Word -> X  ...
$0C83: $81AF:     [Y+$07] -> r 26
$0C84: $85B8:     [Y+$08] -> r 27
               C: if (X -= 0) then goto $0C8B ...
$0C85: $30A0:     r26 = $00
$0C86: $E010:     $00 -> r17
$0C87: $07B1:     r27 = r17=
$0C88: $F411:     if (Z=0) then goto $C8B
               C: if (r16 = 0) then goto $0C96 ...
$0C89: $3000:     r16 = $00
$0C8A: $F059:     if (Z=1) then goto $C96
-----          L: 
               C: if (r16 = 0) then goto $0C8F ...
$0C8B: $3000:     r16 = $00
$0C8C: $F011:     if (Z=1) then goto $C8F
$0C8D: $950A:  F: r16 -- (r16--)
$0C8E: $C003:  J: goto $C92 (RJMP)
-----          L: 
$0C8F: $E30B:  F: $3B -> r16 (59 -> r16)
               F: X--  ...
$0C90: $50A1:     r26 - $01
$0C91: $40B0:     r27 - $00 -
-----          L: 
$0C92: $830E:  F: r16 -> [Y+$06] (r16 -> [Y+MS_OBJ_TIME_WORK_S])
               F: X -> [Y+MS_OBJ_TIME_WORK_M]:Word  ...
$0C93: $83AF:     r26 -> [Y+$07]
$0C94: $87B8:     r27 -> [Y+$08]
$0C95: $C003:  J: goto $C99 (RJMP)
-----          L: 
               F: MS_ORDER_OFF -> [Y+MS_OBJ_ORDER]  ...
$0C96: $E000:     $00 -> r16
$0C97: $8709:     r16 -> [Y+$09]
-----          L: 
$0C98: $CFC8:  J: goto $C61 (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if ([Y+MS_OBJ_TYPE + MS_OBJ_SIZE] = MS_TYPE_LIST_END) then goto $0CBC ...
$0C99: $8908:     [Y+$10] -> r 16
$0C9A: $3F0F:     r16 = $FF
$0C9B: $F101:     if (Z=1) then goto $CBC
-----          L: 
               C: if ([Y+MS_OBJ_KEY + MS_OBJ_SIZE] -= MS_KEY_JOINUP) then goto $0CBC ...
$0C9C: $890A:     [Y+$12] -> r 16
$0C9D: $3001:     r16 = $01
$0C9E: $F4E9:     if (Z=0) then goto $CBC
-----          L: 
-----          L: 
$0C9F: $CFC1:  J: goto $C61 (RJMP)
-----          L: 
               C: if (ms_mode = MS_MODE_WORK_ONCE) then goto $0CB1 ...
$0CA0: $9100:     [$0528] -> r16
$0CA1: $0528:  
$0CA2: $3004:     r16 = $04
$0CA3: $F069:     if (Z=1) then goto $CB1
$0CA4: $DB51:  F: rcall $7F6 (_ms_eeRestoreSafeState)
$0CA5: $DBE5:  F: rcall $88B (_ms_message_)
$0CA6: $20 $2A $20 $73 $74 $61 $72 $74 $20 $6E $65 $77 $20 $63 $79 $63
$0CAE: $6C $65 $00 $00
$0CB0: $CFAE:  J: goto $C5F (RJMP)
-----          L: 
$0CB1: $DBD9:  F: rcall $88B (_ms_message_)
$0CB2: $20 $2A $20 $65 $6E $64 $20 $63 $79 $63 $6C $65 $20 $2D $20 $73
$0CBA: $74 $6F $70 $00
-----          L: 
-----          L: 
               F: -> X  ...
$0CBC: $91BF:     -> r27
$0CBD: $91AF:     -> r26
               F: -> Y  ...
$0CBE: $91DF:     -> r29
$0CBF: $91CF:     -> r28
$0CC0: $9508:  F: RET (RET)
-----          V: 
-----          L: 
$0CC1: $810B:  F: [Y+$03] -> r 16 ([Y+MS_OBJ_TIME_IDLE_S] -> r16)
               F: [Y+MS_OBJ_TIME_IDLE_M]:Word -> X  ...
$0CC2: $81AC:     [Y+$04] -> r 26
$0CC3: $81BD:     [Y+$05] -> r 27
               C: if (X -= 0) then goto $0CCB ...
$0CC4: $30A0:     r26 = $00
$0CC5: $E010:     $00 -> r17
$0CC6: $07B1:     r27 = r17=
$0CC7: $F419:     if (Z=0) then goto $CCB
               C: if (r16 = 0) then goto $0C61 ...
$0CC8: $3000:     r16 = $00
$0CC9: $F409:     if (Z=0) then goto $CCB
$0CCA: $CF96:     goto $C61 (RJMP)
-----          L: 
               C: if (r16 = 0) then goto $0CCF ...
$0CCB: $3000:     r16 = $00
$0CCC: $F011:     if (Z=1) then goto $CCF
$0CCD: $950A:  F: r16 -- (r16--)
$0CCE: $C003:  J: goto $CD2 (RJMP)
-----          L: 
$0CCF: $E30B:  F: $3B -> r16 (59 -> r16)
               F: X--  ...
$0CD0: $50A1:     r26 - $01
$0CD1: $40B0:     r27 - $00 -
-----          L: 
$0CD2: $830B:  F: r16 -> [Y+$03] (r16 -> [Y+MS_OBJ_TIME_IDLE_S])
               F: X -> [Y+MS_OBJ_TIME_IDLE_M]:Word  ...
$0CD3: $83AC:     r26 -> [Y+$04]
$0CD4: $83BD:     r27 -> [Y+$05]
-----          L: 
$0CD5: $CFC3:  J: goto $C99 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ADC.alg    ***********
-----          V: _ADC_init
-----          L: 
$0CD6: $E000:  S: $00 -> r16 ($00->r16)
$0CD7: $9300:  S: r16 -> [$007B] (r16->ADCSRB)
$0CD8: $007B:  
$0CD9: $E600:  S: $60 -> r16 ($60->r16)
$0CDA: $9300:  S: r16 -> [$007C] (r16->ADMUX)
$0CDB: $007C:  
$0CDC: $EE0F:  S: $EF -> r16 ($EF->r16)
$0CDD: $9300:  S: r16 -> [$007A] (r16->ADCSRA)
$0CDE: $007A:  
$0CDF: $9508:  F: RET (ret)
-----          V: ADC_Complete
$0CE0: $930F:  F: r16 -> (r16 ->)
$0CE1: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$0CE2: $B70F:     p$3F -> r16
$0CE3: $930F:     r16 ->
               F: Z ->  ...
$0CE4: $93EF:     r30 ->
$0CE5: $93FF:     r31 ->
-----          L: 
$0CE6: $9100:  F: [$007C] -> r16 (ADMUX -> r16)
$0CE7: $007C:  
$0CE8: $2F10:  F: r16 -> r17 (r16 -> r17)
$0CE9: $5001:  F: r16 - $01 (r16 - 1)
$0CEA: $F408:  C: if (C=0) then goto $CEC (C = 1)
$0CEB: $E007:  F: $07 -> r16 (7 -> r16)
-----          L: 
$0CEC: $9513:  F: r17 ++ (r17 ++)
$0CED: $FD13:  C: if (r17.3=0 then SKIP (r17.3 = 1)
$0CEE: $E610:  F: $60 -> r17 ($60 -> r17)
$0CEF: $9310:  F: r17 -> [$007C] (r17 -> ADMUX)
$0CF0: $007C:  
-----          L: 
               F: @ADC_Level -> Z  ...
$0CF1: $E5EA:     $5A -> r30
$0CF2: $E0F7:     $07 -> r31
$0CF3: $7007:  F: r16 & $07 (r16 & #b00000111)
               F: Z + r16  ...
$0CF4: $0FE0:     r30 + r16
$0CF5: $E010:     $00 -> r17
$0CF6: $1FF1:     r31 + r17 +
$0CF7: $9100:  F: [$0079] -> r16 (ADCH -> r16)
$0CF8: $0079:  
$0CF9: $E312:  F: $32 -> r17 (ADC_MAX -> r17)
$0CFA: $9F01:  F: r16 * r17 (r16 * r17)
$0CFB: $8210:  F: r1 -> [Z] (r1 -> [Z])
-----          L: 
-----          L: 
               F: -> Z  ...
$0CFC: $91FF:     -> r31
$0CFD: $91EF:     -> r30
               F: -> SREG  ...
$0CFE: $910F:     -> r16
$0CFF: $BF0F:     r16 -> p$3F
$0D00: $911F:  F: -> r17 (-> r17)
$0D01: $910F:  F: -> r16 (-> r16)
$0D02: $9518:  F: RETI (reti)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          V: _ms_visSourcesViewer
-----          L: 
$0D03: $DB7B:  F: rcall $87F (_ms_printMessage)
-----          L: 
$0D04: $D9F3:  F: rcall $6F8 (_print_string_)
$0D05: $49 $4E $50 $55 $54 $53 $20 $53 $54 $41 $54 $55 $53 $01 $00 $00
$0D0D: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0D0E: $02DF:  
$0D0F: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0D10: $02DF:  
-----          L: 
$0D11: $D9E6:  F: rcall $6F8 (_print_string_)
$0D12: $49 $6E $2D $31 $20 $3D $20 $01 $00 $00
               F: Z ->  ...
$0D17: $93EF:     r30 ->
$0D18: $93FF:     r31 ->
               F: ADC_Level[0] -> Z  ...
$0D19: $91E0:     [$075A] -> r30
$0D1A: $075A:  
$0D1B: $E0F0:     $00 -> r31
$0D1C: $D9F9:  F: rcall $716 (_print_DECV2_)
               F: -> Z  ...
$0D1D: $91FF:     -> r31
$0D1E: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$0D1F: $D9D8:  F: rcall $6F8 (_print_string_)
$0D20: $56 $01 $00 $00
$0D22: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0D23: $02DF:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
$0D24: $D9D3:  F: rcall $6F8 (_print_string_)
$0D25: $49 $6E $2D $32 $20 $3D $20 $01 $00 $00
               F: Z ->  ...
$0D2A: $93EF:     r30 ->
$0D2B: $93FF:     r31 ->
               F: ADC_Level[1] -> Z  ...
$0D2C: $91E0:     [$075B] -> r30
$0D2D: $075B:  
$0D2E: $E0F0:     $00 -> r31
$0D2F: $D9E6:  F: rcall $716 (_print_DECV2_)
               F: -> Z  ...
$0D30: $91FF:     -> r31
$0D31: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$0D32: $D9C5:  F: rcall $6F8 (_print_string_)
$0D33: $56 $01 $00 $00
$0D35: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0D36: $02DF:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
$0D37: $D9C0:  F: rcall $6F8 (_print_string_)
$0D38: $49 $6E $2D $33 $20 $3D $20 $01 $00 $00
               F: Z ->  ...
$0D3D: $93EF:     r30 ->
$0D3E: $93FF:     r31 ->
               F: ADC_Level[2] -> Z  ...
$0D3F: $91E0:     [$075C] -> r30
$0D40: $075C:  
$0D41: $E0F0:     $00 -> r31
$0D42: $D9D3:  F: rcall $716 (_print_DECV2_)
               F: -> Z  ...
$0D43: $91FF:     -> r31
$0D44: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$0D45: $D9B2:  F: rcall $6F8 (_print_string_)
$0D46: $56 $01 $00 $00
$0D48: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0D49: $02DF:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
$0D4A: $D9AD:  F: rcall $6F8 (_print_string_)
$0D4B: $49 $6E $2D $34 $20 $3D $20 $01 $00 $00
               F: Z ->  ...
$0D50: $93EF:     r30 ->
$0D51: $93FF:     r31 ->
               F: ADC_Level[3] -> Z  ...
$0D52: $91E0:     [$075D] -> r30
$0D53: $075D:  
$0D54: $E0F0:     $00 -> r31
$0D55: $D9C0:  F: rcall $716 (_print_DECV2_)
               F: -> Z  ...
$0D56: $91FF:     -> r31
$0D57: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$0D58: $D99F:  F: rcall $6F8 (_print_string_)
$0D59: $56 $01 $00 $00
$0D5B: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0D5C: $02DF:  
$0D5D: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          V: _ms_clickSourcesViewer
-----          L: 
               F: MS_MODE_MENU -> ms_mode  ...
$0D5E: $E006:     $06 -> r16
$0D5F: $9300:     r16 -> [$0528]
$0D60: $0528:  
$0D61: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$0D62: $9508:  F: RET (RET)
-----          V: _ms_ConditionsSwitchProg
-----          L: 
               C: if (ms_mode -= MS_MODE_CONDITIONS_WORK) then goto $0D68 ...
$0D63: $9100:     [$0528] -> r16
$0D64: $0528:  
$0D65: $3008:     r16 = $08
$0D66: $F009:     if (Z=1) then goto $D68
$0D67: $9508:  F: RET (RET)
-----          L: 
               F: 0 -> ms_pauseOnceCycle  ...
$0D68: $E000:     $00 -> r16
$0D69: $9300:     r16 -> [$0755]
$0D6A: $0755:  
-----          L: 
               F: ee_ms_sourseProg1 -> ms_sourseProg  ...
$0D6B: $E615:     $65 -> r17
$0D6C: $BD11:     r17 -> p$21
$0D6D: $E013:     $03 -> r17
$0D6E: $BD12:     r17 -> p$22
$0D6F: $9AF8:     1 -> p$1F.0
$0D70: $B500:     p$20 -> r16
$0D71: $9300:     r16 -> [$0756]
$0D72: $0756:  
               F: ee_ms_sourseProg1_up -> ms_sourseProg_up  ...
$0D73: $E616:     $66 -> r17
$0D74: $BD11:     r17 -> p$21
$0D75: $E013:     $03 -> r17
$0D76: $BD12:     r17 -> p$22
$0D77: $9AF8:     1 -> p$1F.0
$0D78: $B500:     p$20 -> r16
$0D79: $9300:     r16 -> [$0757]
$0D7A: $0757:  
               F: ee_ms_sourseProg1_down -> ms_sourseProg_down  ...
$0D7B: $E617:     $67 -> r17
$0D7C: $BD11:     r17 -> p$21
$0D7D: $E013:     $03 -> r17
$0D7E: $BD12:     r17 -> p$22
$0D7F: $9AF8:     1 -> p$1F.0
$0D80: $B500:     p$20 -> r16
$0D81: $9300:     r16 -> [$0758]
$0D82: $0758:  
$0D83: $D2C8:  F: rcall $104C (_ms_visConditionsTest_)
               C: if (r16 = FALSE) then goto $0D90 ...
$0D84: $3000:     r16 = $00
$0D85: $F051:     if (Z=1) then goto $D90
               C: if (ms_currentProg = 0) then goto $0D8B ...
$0D86: $9100:     [$0526] -> r16
$0D87: $0526:  
$0D88: $3000:     r16 = $00
$0D89: $F409:     if (Z=0) then goto $D8B
$0D8A: $9508:  F: RET (RET)
               F: 0 -> ms_currentProg  ...
$0D8B: $E000:     $00 -> r16
$0D8C: $9300:     r16 -> [$0526]
$0D8D: $0526:  
$0D8E: $DAAA:  F: rcall $839 (_ms_eeRestore)
$0D8F: $9508:  F: RET (RET)
-----          L: 
               F: ee_ms_sourseProg2 -> ms_sourseProg  ...
$0D90: $E618:     $68 -> r17
$0D91: $BD11:     r17 -> p$21
$0D92: $E013:     $03 -> r17
$0D93: $BD12:     r17 -> p$22
$0D94: $9AF8:     1 -> p$1F.0
$0D95: $B500:     p$20 -> r16
$0D96: $9300:     r16 -> [$0756]
$0D97: $0756:  
               F: ee_ms_sourseProg2_up -> ms_sourseProg_up  ...
$0D98: $E619:     $69 -> r17
$0D99: $BD11:     r17 -> p$21
$0D9A: $E013:     $03 -> r17
$0D9B: $BD12:     r17 -> p$22
$0D9C: $9AF8:     1 -> p$1F.0
$0D9D: $B500:     p$20 -> r16
$0D9E: $9300:     r16 -> [$0757]
$0D9F: $0757:  
               F: ee_ms_sourseProg2_down -> ms_sourseProg_down  ...
$0DA0: $E61A:     $6A -> r17
$0DA1: $BD11:     r17 -> p$21
$0DA2: $E013:     $03 -> r17
$0DA3: $BD12:     r17 -> p$22
$0DA4: $9AF8:     1 -> p$1F.0
$0DA5: $B500:     p$20 -> r16
$0DA6: $9300:     r16 -> [$0758]
$0DA7: $0758:  
$0DA8: $D2A3:  F: rcall $104C (_ms_visConditionsTest_)
               C: if (r16 = FALSE) then goto $0DB5 ...
$0DA9: $3000:     r16 = $00
$0DAA: $F051:     if (Z=1) then goto $DB5
               C: if (ms_currentProg = 1) then goto $0DB0 ...
$0DAB: $9100:     [$0526] -> r16
$0DAC: $0526:  
$0DAD: $3001:     r16 = $01
$0DAE: $F409:     if (Z=0) then goto $DB0
$0DAF: $9508:  F: RET (RET)
               F: 1 -> ms_currentProg  ...
$0DB0: $E001:     $01 -> r16
$0DB1: $9300:     r16 -> [$0526]
$0DB2: $0526:  
$0DB3: $DA85:  F: rcall $839 (_ms_eeRestore)
$0DB4: $9508:  F: RET (RET)
-----          L: 
               F: ee_ms_sourseProg3 -> ms_sourseProg  ...
$0DB5: $E61B:     $6B -> r17
$0DB6: $BD11:     r17 -> p$21
$0DB7: $E013:     $03 -> r17
$0DB8: $BD12:     r17 -> p$22
$0DB9: $9AF8:     1 -> p$1F.0
$0DBA: $B500:     p$20 -> r16
$0DBB: $9300:     r16 -> [$0756]
$0DBC: $0756:  
               F: ee_ms_sourseProg3_up -> ms_sourseProg_up  ...
$0DBD: $E61C:     $6C -> r17
$0DBE: $BD11:     r17 -> p$21
$0DBF: $E013:     $03 -> r17
$0DC0: $BD12:     r17 -> p$22
$0DC1: $9AF8:     1 -> p$1F.0
$0DC2: $B500:     p$20 -> r16
$0DC3: $9300:     r16 -> [$0757]
$0DC4: $0757:  
               F: ee_ms_sourseProg3_down -> ms_sourseProg_down  ...
$0DC5: $E61D:     $6D -> r17
$0DC6: $BD11:     r17 -> p$21
$0DC7: $E013:     $03 -> r17
$0DC8: $BD12:     r17 -> p$22
$0DC9: $9AF8:     1 -> p$1F.0
$0DCA: $B500:     p$20 -> r16
$0DCB: $9300:     r16 -> [$0758]
$0DCC: $0758:  
$0DCD: $D27E:  F: rcall $104C (_ms_visConditionsTest_)
               C: if (r16 = FALSE) then goto $0DDA ...
$0DCE: $3000:     r16 = $00
$0DCF: $F051:     if (Z=1) then goto $DDA
               C: if (ms_currentProg = 2) then goto $0DD5 ...
$0DD0: $9100:     [$0526] -> r16
$0DD1: $0526:  
$0DD2: $3002:     r16 = $02
$0DD3: $F409:     if (Z=0) then goto $DD5
$0DD4: $9508:  F: RET (RET)
               F: 2 -> ms_currentProg  ...
$0DD5: $E002:     $02 -> r16
$0DD6: $9300:     r16 -> [$0526]
$0DD7: $0526:  
$0DD8: $DA60:  F: rcall $839 (_ms_eeRestore)
$0DD9: $9508:  F: RET (RET)
-----          L: 
               F: 1 -> ms_pauseOnceCycle  ...
$0DDA: $E001:     $01 -> r16
$0DDB: $9300:     r16 -> [$0755]
$0DDC: $0755:  
-----          L: 
$0DDD: $9508:  F: RET (RET)
-----          V: _ms_naviConditionsWork
-----          L: 
               C: if (ms_posConditionsClick.0 = 0) then goto $0DE4 ...
$0DDE: $9100:     [$0754] -> r16
$0DDF: $0754:  
$0DE0: $FF00:     if (r16.0=1 then SKIP
$0DE1: $C002:     goto $DE4 (RJMP)
$0DE2: $D5AE:  F: rcall $1391 (_ms_naviOnceCycle)
$0DE3: $9508:  F: RET (RET)
-----          L: 
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $0DF3 ...
$0DE4: $9100:     [$010A] -> r16
$0DE5: $010A:  
$0DE6: $3001:     r16 = $01
$0DE7: $F059:     if (Z=1) then goto $DF3
               C: if (ms_posConditions < 7) then goto $0DF1 ...
$0DE8: $9100:     [$0751] -> r16
$0DE9: $0751:  
$0DEA: $3007:     r16 = $07
$0DEB: $F428:     if ( >= ) then goto $DF1
               F: ms_posConditions++  ...
$0DEC: $9100:     [$0751] -> r16
$0DED: $0751:  
$0DEE: $9503:     r16 ++
$0DEF: $9300:     r16 -> [$0751]
$0DF0: $0751:  
$0DF1: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$0DF2: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posConditions >= 1) then goto $0DFC ...
$0DF3: $9100:     [$0751] -> r16
$0DF4: $0751:  
$0DF5: $3001:     r16 = $01
$0DF6: $F028:     if ( < ) then goto $DFC
               F: ms_posConditions--  ...
$0DF7: $9100:     [$0751] -> r16
$0DF8: $0751:  
$0DF9: $950A:     r16 --
$0DFA: $9300:     r16 -> [$0751]
$0DFB: $0751:  
$0DFC: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$0DFD: $9508:  F: RET (RET)
-----          V: _ms_visConditionsWork
-----          L: 
               C: if (ms_posConditionsClick.0=0) then goto $0E04 ...
$0DFE: $9100:     [$0754] -> r16
$0DFF: $0754:  
$0E00: $FF00:     if (r16.0=1 then SKIP
$0E01: $C002:     goto $E04 (RJMP)
$0E02: $D00A:  F: rcall $E0D (_ms_visConditionsProgWork)
$0E03: $C001:  J: goto $E05 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$0E04: $D02E:  F: rcall $E33 (_ms_visConditionsSourceWork)
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
$0E05: $9508:  F: RET (RET)
-----          V: _ms_clickConditionsWork
-----          L: 
-----          L: 
               F: ms_posConditionsClick ++  ...
$0E06: $9100:     [$0754] -> r16
$0E07: $0754:  
$0E08: $9503:     r16 ++
$0E09: $9300:     r16 -> [$0754]
$0E0A: $0754:  
-----          L: 
$0E0B: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$0E0C: $9508:  F: RET (RET)
-----          V: _ms_visConditionsProgWork
-----          L: 
$0E0D: $DA71:  F: rcall $87F (_ms_printMessage)
-----          L: 
               C: if (ms_pauseOnceCycle=1) then goto $0E1F ...
$0E0E: $9100:     [$0755] -> r16
$0E0F: $0755:  
$0E10: $3001:     r16 = $01
$0E11: $F069:     if (Z=1) then goto $E1F
$0E12: $D8E5:  F: rcall $6F8 (_print_string_)
$0E13: $01 $43 $4F $4E $44 $49 $54 $49 $4F $4E $53 $20 $57 $6F $72 $6B
$0E1B: $73 $20 $50 $2D $00 $00
$0E1E: $C00B:  J: goto $E2A (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$0E1F: $D8D8:  F: rcall $6F8 (_print_string_)
$0E20: $01 $43 $4F $4E $44 $49 $54 $49 $4F $4E $53 $20 $49 $64 $6C $65
$0E28: $20 $50 $2D $00
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
$0E2A: $9100:  F: [$0526] -> r16 (ms_currentProg -> r16)
$0E2B: $0526:  
$0E2C: $5C0F:  F: r16 - $CF (r16 + "1")
$0E2D: $940E:  F: CALL $314 (_ssd_Parse_r16)
$0E2E: $0314:  
$0E2F: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0E30: $02DF:  
-----          L: 
$0E31: $D596:  F: rcall $13C8 (_ms_visProgWorks)
$0E32: $9508:  F: RET (RET)
-----          V: _ms_visConditionsSourceWork
-----          L: 
$0E33: $DA4B:  F: rcall $87F (_ms_printMessage)
-----          L: 
               C: if (ms_pauseOnceCycle=1) then goto $0E45 ...
$0E34: $9100:     [$0755] -> r16
$0E35: $0755:  
$0E36: $3001:     r16 = $01
$0E37: $F069:     if (Z=1) then goto $E45
$0E38: $D8BF:  F: rcall $6F8 (_print_string_)
$0E39: $01 $43 $4F $4E $44 $49 $54 $49 $4F $4E $53 $20 $57 $6F $72 $6B
$0E41: $73 $20 $50 $2D $00 $00
$0E44: $C00B:  J: goto $E50 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$0E45: $D8B2:  F: rcall $6F8 (_print_string_)
$0E46: $01 $43 $4F $4E $44 $49 $54 $49 $4F $4E $53 $20 $49 $64 $6C $65
$0E4E: $20 $50 $2D $00
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
$0E50: $9100:  F: [$0526] -> r16 (ms_currentProg -> r16)
$0E51: $0526:  
$0E52: $5C0F:  F: r16 - $CF (r16 + "1")
$0E53: $940E:  F: CALL $314 (_ssd_Parse_r16)
$0E54: $0314:  
$0E55: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0E56: $02DF:  
-----          L: 
$0E57: $9100:  F: [$0751] -> r16 (ms_posConditions -> r16)
$0E58: $0751:  
$0E59: $9503:  F: r16 ++ (r16++)
$0E5A: $9501:  F: - r16 (-r16)
$0E5B: $9300:  F: r16 -> [$074F] (r16 -> ms_posFrame)
$0E5C: $074F:  
-----          L: 
$0E5D: $DCD6:  F: rcall $B34 (_ms_posFrameTest)
$0E5E: $F410:  C: if ( >= ) then goto $E61 (<)
$0E5F: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0E60: $02DF:  
$0E61: $DCD2:  F: rcall $B34 (_ms_posFrameTest)
$0E62: $F410:  C: if ( >= ) then goto $E65 (<)
$0E63: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0E64: $02DF:  
-----          L: 
-----          L: 
$0E65: $DCCE:  F: rcall $B34 (_ms_posFrameTest)
$0E66: $F4E0:  C: if ( >= ) then goto $E83 (>=)
$0E67: $E200:  F: $20 -> r16 (" " -> r16)
$0E68: $940E:  F: CALL $314 (_ssd_Parse_r16)
$0E69: $0314:  
               F: ee_ms_sourseProg1 -> ms_sourseProg  ...
$0E6A: $E615:     $65 -> r17
$0E6B: $BD11:     r17 -> p$21
$0E6C: $E013:     $03 -> r17
$0E6D: $BD12:     r17 -> p$22
$0E6E: $9AF8:     1 -> p$1F.0
$0E6F: $B500:     p$20 -> r16
$0E70: $9300:     r16 -> [$0756]
$0E71: $0756:  
               F: ee_ms_sourseProg1_up -> ms_sourseProg_up  ...
$0E72: $E616:     $66 -> r17
$0E73: $BD11:     r17 -> p$21
$0E74: $E013:     $03 -> r17
$0E75: $BD12:     r17 -> p$22
$0E76: $9AF8:     1 -> p$1F.0
$0E77: $B500:     p$20 -> r16
$0E78: $9300:     r16 -> [$0757]
$0E79: $0757:  
               F: ee_ms_sourseProg1_down -> ms_sourseProg_down  ...
$0E7A: $E617:     $67 -> r17
$0E7B: $BD11:     r17 -> p$21
$0E7C: $E013:     $03 -> r17
$0E7D: $BD12:     r17 -> p$22
$0E7E: $9AF8:     1 -> p$1F.0
$0E7F: $B500:     p$20 -> r16
$0E80: $9300:     r16 -> [$0758]
$0E81: $0758:  
$0E82: $D15D:  F: rcall $FE0 (_ms_visConditionsSourceWorkLine_)
-----          L: 
$0E83: $DCB0:  F: rcall $B34 (_ms_posFrameTest)
$0E84: $F5C0:  C: if ( >= ) then goto $EBD (>=)
$0E85: $E200:  F: $20 -> r16 (" " -> r16)
$0E86: $940E:  F: CALL $314 (_ssd_Parse_r16)
$0E87: $0314:  
               F: ee_ms_sourseProg1 -> ms_sourseProg  ...
$0E88: $E615:     $65 -> r17
$0E89: $BD11:     r17 -> p$21
$0E8A: $E013:     $03 -> r17
$0E8B: $BD12:     r17 -> p$22
$0E8C: $9AF8:     1 -> p$1F.0
$0E8D: $B500:     p$20 -> r16
$0E8E: $9300:     r16 -> [$0756]
$0E8F: $0756:  
               F: ee_ms_sourseProg1_up -> ms_sourseProg_up  ...
$0E90: $E616:     $66 -> r17
$0E91: $BD11:     r17 -> p$21
$0E92: $E013:     $03 -> r17
$0E93: $BD12:     r17 -> p$22
$0E94: $9AF8:     1 -> p$1F.0
$0E95: $B500:     p$20 -> r16
$0E96: $9300:     r16 -> [$0757]
$0E97: $0757:  
               F: ee_ms_sourseProg1_down -> ms_sourseProg_down  ...
$0E98: $E617:     $67 -> r17
$0E99: $BD11:     r17 -> p$21
$0E9A: $E013:     $03 -> r17
$0E9B: $BD12:     r17 -> p$22
$0E9C: $9AF8:     1 -> p$1F.0
$0E9D: $B500:     p$20 -> r16
$0E9E: $9300:     r16 -> [$0758]
$0E9F: $0758:  
$0EA0: $D1AB:  F: rcall $104C (_ms_visConditionsTest_)
$0EA1: $930F:  F: r16 -> (r16 ->)
               C: if (r16 = TRUE) then goto $0EA6 ...
$0EA2: $3001:     r16 = $01
$0EA3: $F411:     if (Z=0) then goto $EA6
$0EA4: $D853:  F: rcall $6F8 (_print_string_)
$0EA5: $03 $00
$0EA6: $910F:  F: -> r16 (-> r16)
               C: if (r16=FALSE) then goto $0EAF ...
$0EA7: $3000:     r16 = $00
$0EA8: $F031:     if (Z=1) then goto $EAF
$0EA9: $D84E:  F: rcall $6F8 (_print_string_)
$0EAA: $2D $57 $6F $72 $6B $73 $20 $00
$0EAE: $C005:  J: goto $EB4 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$0EAF: $D848:  F: rcall $6F8 (_print_string_)
$0EB0: $2D $49 $64 $6C $65 $20 $00 $00
-----          L: 
$0EB4: $D843:  F: rcall $6F8 (_print_string_)
$0EB5: $50 $52 $4F $47 $52 $41 $4D $2D $31 $01 $00 $00
$0EBB: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0EBC: $02DF:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
-----          L: 
$0EBD: $DC76:  F: rcall $B34 (_ms_posFrameTest)
$0EBE: $F410:  C: if ( >= ) then goto $EC1 (<)
$0EBF: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0EC0: $02DF:  
-----          L: 
$0EC1: $DC72:  F: rcall $B34 (_ms_posFrameTest)
$0EC2: $F4E0:  C: if ( >= ) then goto $EDF (>=)
$0EC3: $E200:  F: $20 -> r16 (" " -> r16)
$0EC4: $940E:  F: CALL $314 (_ssd_Parse_r16)
$0EC5: $0314:  
               F: ee_ms_sourseProg2 -> ms_sourseProg  ...
$0EC6: $E618:     $68 -> r17
$0EC7: $BD11:     r17 -> p$21
$0EC8: $E013:     $03 -> r17
$0EC9: $BD12:     r17 -> p$22
$0ECA: $9AF8:     1 -> p$1F.0
$0ECB: $B500:     p$20 -> r16
$0ECC: $9300:     r16 -> [$0756]
$0ECD: $0756:  
               F: ee_ms_sourseProg2_up -> ms_sourseProg_up  ...
$0ECE: $E619:     $69 -> r17
$0ECF: $BD11:     r17 -> p$21
$0ED0: $E013:     $03 -> r17
$0ED1: $BD12:     r17 -> p$22
$0ED2: $9AF8:     1 -> p$1F.0
$0ED3: $B500:     p$20 -> r16
$0ED4: $9300:     r16 -> [$0757]
$0ED5: $0757:  
               F: ee_ms_sourseProg2_down -> ms_sourseProg_down  ...
$0ED6: $E61A:     $6A -> r17
$0ED7: $BD11:     r17 -> p$21
$0ED8: $E013:     $03 -> r17
$0ED9: $BD12:     r17 -> p$22
$0EDA: $9AF8:     1 -> p$1F.0
$0EDB: $B500:     p$20 -> r16
$0EDC: $9300:     r16 -> [$0758]
$0EDD: $0758:  
$0EDE: $D101:  F: rcall $FE0 (_ms_visConditionsSourceWorkLine_)
-----          L: 
$0EDF: $DC54:  F: rcall $B34 (_ms_posFrameTest)
$0EE0: $F008:  C: if ( < ) then goto $EE2 (>=)
$0EE1: $C058:  C: goto $F3A (RJMP) (>=)
$0EE2: $E200:  F: $20 -> r16 (" " -> r16)
$0EE3: $940E:  F: CALL $314 (_ssd_Parse_r16)
$0EE4: $0314:  
-----          L: 
               F: ee_ms_sourseProg1 -> ms_sourseProg  ...
$0EE5: $E615:     $65 -> r17
$0EE6: $BD11:     r17 -> p$21
$0EE7: $E013:     $03 -> r17
$0EE8: $BD12:     r17 -> p$22
$0EE9: $9AF8:     1 -> p$1F.0
$0EEA: $B500:     p$20 -> r16
$0EEB: $9300:     r16 -> [$0756]
$0EEC: $0756:  
               F: ee_ms_sourseProg1_up -> ms_sourseProg_up  ...
$0EED: $E616:     $66 -> r17
$0EEE: $BD11:     r17 -> p$21
$0EEF: $E013:     $03 -> r17
$0EF0: $BD12:     r17 -> p$22
$0EF1: $9AF8:     1 -> p$1F.0
$0EF2: $B500:     p$20 -> r16
$0EF3: $9300:     r16 -> [$0757]
$0EF4: $0757:  
               F: ee_ms_sourseProg1_down -> ms_sourseProg_down  ...
$0EF5: $E617:     $67 -> r17
$0EF6: $BD11:     r17 -> p$21
$0EF7: $E013:     $03 -> r17
$0EF8: $BD12:     r17 -> p$22
$0EF9: $9AF8:     1 -> p$1F.0
$0EFA: $B500:     p$20 -> r16
$0EFB: $9300:     r16 -> [$0758]
$0EFC: $0758:  
$0EFD: $D14E:  F: rcall $104C (_ms_visConditionsTest_)
               C: if (r16 = TRUE) then goto $1040 ...
$0EFE: $3001:     r16 = $01
$0EFF: $F409:     if (Z=0) then goto $F01
$0F00: $C13F:     goto $1040 (RJMP)
-----          L: 
               F: ee_ms_sourseProg2 -> ms_sourseProg  ...
$0F01: $E618:     $68 -> r17
$0F02: $BD11:     r17 -> p$21
$0F03: $E013:     $03 -> r17
$0F04: $BD12:     r17 -> p$22
$0F05: $9AF8:     1 -> p$1F.0
$0F06: $B500:     p$20 -> r16
$0F07: $9300:     r16 -> [$0756]
$0F08: $0756:  
               F: ee_ms_sourseProg2_up -> ms_sourseProg_up  ...
$0F09: $E619:     $69 -> r17
$0F0A: $BD11:     r17 -> p$21
$0F0B: $E013:     $03 -> r17
$0F0C: $BD12:     r17 -> p$22
$0F0D: $9AF8:     1 -> p$1F.0
$0F0E: $B500:     p$20 -> r16
$0F0F: $9300:     r16 -> [$0757]
$0F10: $0757:  
               F: ee_ms_sourseProg2_down -> ms_sourseProg_down  ...
$0F11: $E61A:     $6A -> r17
$0F12: $BD11:     r17 -> p$21
$0F13: $E013:     $03 -> r17
$0F14: $BD12:     r17 -> p$22
$0F15: $9AF8:     1 -> p$1F.0
$0F16: $B500:     p$20 -> r16
$0F17: $9300:     r16 -> [$0758]
$0F18: $0758:  
$0F19: $D132:  F: rcall $104C (_ms_visConditionsTest_)
$0F1A: $930F:  F: r16 -> (r16 ->)
               C: if (r16 = TRUE) then goto $0F20 ...
$0F1B: $3001:     r16 = $01
$0F1C: $F419:     if (Z=0) then goto $F20
$0F1D: $940E:  F: CALL $6F8 (_print_string_)
$0F1E: $06F8:  
$0F1F: $03 $00
$0F20: $910F:  F: -> r16 (-> r16)
               C: if (r16=FALSE) then goto $0F2A ...
$0F21: $3000:     r16 = $00
$0F22: $F039:     if (Z=1) then goto $F2A
$0F23: $940E:  F: CALL $6F8 (_print_string_)
$0F24: $06F8:  
$0F25: $2D $57 $6F $72 $6B $73 $20 $00
$0F29: $C006:  J: goto $F30 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$0F2A: $940E:  F: CALL $6F8 (_print_string_)
$0F2B: $06F8:  
$0F2C: $2D $49 $64 $6C $65 $20 $00 $00
-----          L: 
$0F30: $940E:  F: CALL $6F8 (_print_string_)
$0F31: $06F8:  
$0F32: $50 $52 $4F $47 $52 $41 $4D $2D $32 $01 $00 $00
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
$0F38: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0F39: $02DF:  
-----          L: 
-----          L: 
$0F3A: $DBF9:  F: rcall $B34 (_ms_posFrameTest)
$0F3B: $F410:  C: if ( >= ) then goto $F3E (<)
$0F3C: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0F3D: $02DF:  
-----          L: 
$0F3E: $DBF5:  F: rcall $B34 (_ms_posFrameTest)
$0F3F: $F4E0:  C: if ( >= ) then goto $F5C (>=)
$0F40: $E200:  F: $20 -> r16 (" " -> r16)
$0F41: $940E:  F: CALL $314 (_ssd_Parse_r16)
$0F42: $0314:  
               F: ee_ms_sourseProg3 -> ms_sourseProg  ...
$0F43: $E61B:     $6B -> r17
$0F44: $BD11:     r17 -> p$21
$0F45: $E013:     $03 -> r17
$0F46: $BD12:     r17 -> p$22
$0F47: $9AF8:     1 -> p$1F.0
$0F48: $B500:     p$20 -> r16
$0F49: $9300:     r16 -> [$0756]
$0F4A: $0756:  
               F: ee_ms_sourseProg3_up -> ms_sourseProg_up  ...
$0F4B: $E61C:     $6C -> r17
$0F4C: $BD11:     r17 -> p$21
$0F4D: $E013:     $03 -> r17
$0F4E: $BD12:     r17 -> p$22
$0F4F: $9AF8:     1 -> p$1F.0
$0F50: $B500:     p$20 -> r16
$0F51: $9300:     r16 -> [$0757]
$0F52: $0757:  
               F: ee_ms_sourseProg3_down -> ms_sourseProg_down  ...
$0F53: $E61D:     $6D -> r17
$0F54: $BD11:     r17 -> p$21
$0F55: $E013:     $03 -> r17
$0F56: $BD12:     r17 -> p$22
$0F57: $9AF8:     1 -> p$1F.0
$0F58: $B500:     p$20 -> r16
$0F59: $9300:     r16 -> [$0758]
$0F5A: $0758:  
$0F5B: $D084:  F: rcall $FE0 (_ms_visConditionsSourceWorkLine_)
-----          L: 
$0F5C: $DBD7:  F: rcall $B34 (_ms_posFrameTest)
$0F5D: $F008:  C: if ( < ) then goto $F5F (>=)
$0F5E: $C074:  C: goto $FD3 (RJMP) (>=)
$0F5F: $E200:  F: $20 -> r16 (" " -> r16)
$0F60: $940E:  F: CALL $314 (_ssd_Parse_r16)
$0F61: $0314:  
-----          L: 
               F: ee_ms_sourseProg1 -> ms_sourseProg  ...
$0F62: $E615:     $65 -> r17
$0F63: $BD11:     r17 -> p$21
$0F64: $E013:     $03 -> r17
$0F65: $BD12:     r17 -> p$22
$0F66: $9AF8:     1 -> p$1F.0
$0F67: $B500:     p$20 -> r16
$0F68: $9300:     r16 -> [$0756]
$0F69: $0756:  
               F: ee_ms_sourseProg1_up -> ms_sourseProg_up  ...
$0F6A: $E616:     $66 -> r17
$0F6B: $BD11:     r17 -> p$21
$0F6C: $E013:     $03 -> r17
$0F6D: $BD12:     r17 -> p$22
$0F6E: $9AF8:     1 -> p$1F.0
$0F6F: $B500:     p$20 -> r16
$0F70: $9300:     r16 -> [$0757]
$0F71: $0757:  
               F: ee_ms_sourseProg1_down -> ms_sourseProg_down  ...
$0F72: $E617:     $67 -> r17
$0F73: $BD11:     r17 -> p$21
$0F74: $E013:     $03 -> r17
$0F75: $BD12:     r17 -> p$22
$0F76: $9AF8:     1 -> p$1F.0
$0F77: $B500:     p$20 -> r16
$0F78: $9300:     r16 -> [$0758]
$0F79: $0758:  
$0F7A: $D0D1:  F: rcall $104C (_ms_visConditionsTest_)
               C: if (r16 = TRUE) then goto $1073 ...
$0F7B: $3001:     r16 = $01
$0F7C: $F409:     if (Z=0) then goto $F7E
$0F7D: $C0F5:     goto $1073 (RJMP)
               F: ee_ms_sourseProg2 -> ms_sourseProg  ...
$0F7E: $E618:     $68 -> r17
$0F7F: $BD11:     r17 -> p$21
$0F80: $E013:     $03 -> r17
$0F81: $BD12:     r17 -> p$22
$0F82: $9AF8:     1 -> p$1F.0
$0F83: $B500:     p$20 -> r16
$0F84: $9300:     r16 -> [$0756]
$0F85: $0756:  
               F: ee_ms_sourseProg2_up -> ms_sourseProg_up  ...
$0F86: $E619:     $69 -> r17
$0F87: $BD11:     r17 -> p$21
$0F88: $E013:     $03 -> r17
$0F89: $BD12:     r17 -> p$22
$0F8A: $9AF8:     1 -> p$1F.0
$0F8B: $B500:     p$20 -> r16
$0F8C: $9300:     r16 -> [$0757]
$0F8D: $0757:  
               F: ee_ms_sourseProg2_down -> ms_sourseProg_down  ...
$0F8E: $E61A:     $6A -> r17
$0F8F: $BD11:     r17 -> p$21
$0F90: $E013:     $03 -> r17
$0F91: $BD12:     r17 -> p$22
$0F92: $9AF8:     1 -> p$1F.0
$0F93: $B500:     p$20 -> r16
$0F94: $9300:     r16 -> [$0758]
$0F95: $0758:  
$0F96: $D0B5:  F: rcall $104C (_ms_visConditionsTest_)
               C: if (r16 = TRUE) then goto $1073 ...
$0F97: $3001:     r16 = $01
$0F98: $F409:     if (Z=0) then goto $F9A
$0F99: $C0D9:     goto $1073 (RJMP)
-----          L: 
               F: ee_ms_sourseProg3 -> ms_sourseProg  ...
$0F9A: $E61B:     $6B -> r17
$0F9B: $BD11:     r17 -> p$21
$0F9C: $E013:     $03 -> r17
$0F9D: $BD12:     r17 -> p$22
$0F9E: $9AF8:     1 -> p$1F.0
$0F9F: $B500:     p$20 -> r16
$0FA0: $9300:     r16 -> [$0756]
$0FA1: $0756:  
               F: ee_ms_sourseProg3_up -> ms_sourseProg_up  ...
$0FA2: $E61C:     $6C -> r17
$0FA3: $BD11:     r17 -> p$21
$0FA4: $E013:     $03 -> r17
$0FA5: $BD12:     r17 -> p$22
$0FA6: $9AF8:     1 -> p$1F.0
$0FA7: $B500:     p$20 -> r16
$0FA8: $9300:     r16 -> [$0757]
$0FA9: $0757:  
               F: ee_ms_sourseProg3_down -> ms_sourseProg_down  ...
$0FAA: $E61D:     $6D -> r17
$0FAB: $BD11:     r17 -> p$21
$0FAC: $E013:     $03 -> r17
$0FAD: $BD12:     r17 -> p$22
$0FAE: $9AF8:     1 -> p$1F.0
$0FAF: $B500:     p$20 -> r16
$0FB0: $9300:     r16 -> [$0758]
$0FB1: $0758:  
$0FB2: $D099:  F: rcall $104C (_ms_visConditionsTest_)
$0FB3: $930F:  F: r16 -> (r16 ->)
               C: if (r16 = TRUE) then goto $0FB9 ...
$0FB4: $3001:     r16 = $01
$0FB5: $F419:     if (Z=0) then goto $FB9
$0FB6: $940E:  F: CALL $6F8 (_print_string_)
$0FB7: $06F8:  
$0FB8: $03 $00
$0FB9: $910F:  F: -> r16 (-> r16)
               C: if (r16=FALSE) then goto $0FC3 ...
$0FBA: $3000:     r16 = $00
$0FBB: $F039:     if (Z=1) then goto $FC3
$0FBC: $940E:  F: CALL $6F8 (_print_string_)
$0FBD: $06F8:  
$0FBE: $2D $57 $6F $72 $6B $73 $20 $00
$0FC2: $C006:  J: goto $FC9 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$0FC3: $940E:  F: CALL $6F8 (_print_string_)
$0FC4: $06F8:  
$0FC5: $2D $49 $64 $6C $65 $20 $00 $00
-----          L: 
$0FC9: $940E:  F: CALL $6F8 (_print_string_)
$0FCA: $06F8:  
$0FCB: $50 $52 $4F $47 $52 $41 $4D $2D $33 $01 $00 $00
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
$0FD1: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0FD2: $02DF:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$0FD3: $DB60:  F: rcall $B34 (_ms_posFrameTest)
$0FD4: $F410:  C: if ( >= ) then goto $FD7 (<)
$0FD5: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0FD6: $02DF:  
$0FD7: $DB5C:  F: rcall $B34 (_ms_posFrameTest)
$0FD8: $F410:  C: if ( >= ) then goto $FDB (<)
$0FD9: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0FDA: $02DF:  
$0FDB: $DB58:  F: rcall $B34 (_ms_posFrameTest)
$0FDC: $F410:  C: if ( >= ) then goto $FDF (<)
$0FDD: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0FDE: $02DF:  
-----          L: 
$0FDF: $9508:  F: RET (RET)
-----          V: _ms_visConditionsSourceWorkLine_
-----          L: 
               C: if (ms_sourseProg -= 0) then goto $0FED ...
$0FE0: $9100:     [$0756] -> r16
$0FE1: $0756:  
$0FE2: $3000:     r16 = $00
$0FE3: $F449:     if (Z=0) then goto $FED
$0FE4: $940E:  F: CALL $6F8 (_print_string_)
$0FE5: $06F8:  
$0FE6: $41 $6C $77 $61 $79 $73 $01 $00
$0FEA: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0FEB: $02DF:  
$0FEC: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_sourseProg < 5) then goto $0FFA ...
$0FED: $9100:     [$0756] -> r16
$0FEE: $0756:  
$0FEF: $3005:     r16 = $05
$0FF0: $F048:     if ( < ) then goto $FFA
$0FF1: $940E:  F: CALL $6F8 (_print_string_)
$0FF2: $06F8:  
$0FF3: $4E $65 $76 $65 $72 $01 $00 $00
$0FF7: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$0FF8: $02DF:  
$0FF9: $9508:  F: RET (RET)
-----          L: 
-----          L: 
$0FFA: $940E:  F: CALL $6F8 (_print_string_)
$0FFB: $06F8:  
$0FFC: $49 $6E $2D $00
-----          L: 
$0FFE: $9100:  F: [$0756] -> r16 (ms_sourseProg -> r16)
$0FFF: $0756:  
$1000: $5D00:  F: r16 - $D0 (r16 + "0")
$1001: $940E:  F: CALL $314 (_ssd_Parse_r16)
$1002: $0314:  
$1003: $940E:  F: CALL $6F8 (_print_string_)
$1004: $06F8:  
$1005: $01 $20 $3D $20 $00 $00
-----          L: 
               F: Z ->  ...
$1008: $93EF:     r30 ->
$1009: $93FF:     r31 ->
               F: @ADC_Level -> Z  ...
$100A: $E5EA:     $5A -> r30
$100B: $E0F7:     $07 -> r31
$100C: $9100:  F: [$0756] -> r16 (ms_sourseProg -> r16)
$100D: $0756:  
$100E: $950A:  F: r16 -- (r16--)
               F: Z + r16  ...
$100F: $0FE0:     r30 + r16
$1010: $E010:     $00 -> r17
$1011: $1FF1:     r31 + r17 +
               F: Z ->  ...
$1012: $93EF:     r30 ->
$1013: $93FF:     r31 ->
               F: [Z] -> Z  ...
$1014: $81E0:     [Z+$00] -> r30
$1015: $E0F0:     $00 -> r31
$1016: $940E:  F: CALL $716 (_print_DECV2_)
$1017: $0716:  
               F: -> Z  ...
$1018: $91FF:     -> r31
$1019: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
               F: -> Z  ...
$101A: $91FF:     -> r31
$101B: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
$101C: $940E:  F: CALL $6F8 (_print_string_)
$101D: $06F8:  
$101E: $01 $20 $28 $00
               F: Z ->  ...
$1020: $93EF:     r30 ->
$1021: $93FF:     r31 ->
               F: ms_sourseProg_down -> Z  ...
$1022: $91E0:     [$0758] -> r30
$1023: $0758:  
$1024: $E0F0:     $00 -> r31
$1025: $940E:  F: CALL $716 (_print_DECV2_)
$1026: $0716:  
               F: -> Z  ...
$1027: $91FF:     -> r31
$1028: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$1029: $940E:  F: CALL $6F8 (_print_string_)
$102A: $06F8:  
$102B: $01 $2D $00 $00
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
               F: Z ->  ...
$102D: $93EF:     r30 ->
$102E: $93FF:     r31 ->
               F: ms_sourseProg_up -> Z  ...
$102F: $91E0:     [$0757] -> r30
$1030: $0757:  
$1031: $E0F0:     $00 -> r31
$1032: $940E:  F: CALL $716 (_print_DECV2_)
$1033: $0716:  
               F: -> Z  ...
$1034: $91FF:     -> r31
$1035: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$1036: $940E:  F: CALL $6F8 (_print_string_)
$1037: $06F8:  
$1038: $01 $00
$1039: $940E:  F: CALL $6F8 (_print_string_)
$103A: $06F8:  
$103B: $01 $29 $00 $00
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
$103D: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$103E: $02DF:  
$103F: $9508:  F: RET (RET)
-----          V: 
$1040: $940E:  F: CALL $6F8 (_print_string_)
$1041: $06F8:  
$1042: $01 $2D $49 $64 $6C $65 $20 $50 $52 $4F $47 $52 $41 $4D $2D $32
$104A: $00 $00
$104B: $CEEC:  J: goto $F38 (RJMP)
-----          V: _ms_visConditionsTest_
-----          L: 
               C: if (ms_sourseProg = 0) then goto $1071 ...
$104C: $9100:     [$0756] -> r16
$104D: $0756:  
$104E: $3000:     r16 = $00
$104F: $F109:     if (Z=1) then goto $1071
               C: if (ms_sourseProg >= 5) then goto $106F ...
$1050: $9100:     [$0756] -> r16
$1051: $0756:  
$1052: $3005:     r16 = $05
$1053: $F4D8:     if ( >= ) then goto $106F
-----          L: 
               F: Z ->  ...
$1054: $93EF:     r30 ->
$1055: $93FF:     r31 ->
               F: @ADC_Level -> Z  ...
$1056: $E5EA:     $5A -> r30
$1057: $E0F7:     $07 -> r31
$1058: $9100:  F: [$0756] -> r16 (ms_sourseProg -> r16)
$1059: $0756:  
$105A: $950A:  F: r16 -- (r16--)
               F: Z + r16  ...
$105B: $0FE0:     r30 + r16
$105C: $E010:     $00 -> r17
$105D: $1FF1:     r31 + r17 +
$105E: $8110:  F: [Z] -> r17 ([Z] -> r17)
               F: -> Z  ...
$105F: $91FF:     -> r31
$1060: $91EF:     -> r30
-----          L: 
               C: if (ms_sourseProg_down = r17) then goto $1071 ...
$1061: $9100:     [$0758] -> r16
$1062: $0758:  
$1063: $1701:     r16 = r17
$1064: $F061:     if (Z=1) then goto $1071
               C: if (ms_sourseProg_down >= r17) then goto $106F ...
$1065: $9100:     [$0758] -> r16
$1066: $0758:  
$1067: $1701:     r16 = r17
$1068: $F430:     if ( >= ) then goto $106F
               C: if (ms_sourseProg_up < r17) then goto $106F ...
$1069: $9100:     [$0757] -> r16
$106A: $0757:  
$106B: $1701:     r16 = r17
$106C: $F010:     if ( < ) then goto $106F
-----          L: 
$106D: $E001:  F: $01 -> r16 (TRUE -> r16)
$106E: $9508:  F: RET (RET)
-----          V: 
$106F: $E000:  F: $00 -> r16 (FALSE -> r16)
$1070: $9508:  F: RET (RET)
-----          V: 
$1071: $E001:  F: $01 -> r16 (TRUE -> r16)
$1072: $9508:  F: RET (RET)
-----          V: 
$1073: $940E:  F: CALL $6F8 (_print_string_)
$1074: $06F8:  
$1075: $01 $2D $49 $64 $6C $65 $20 $50 $52 $4F $47 $52 $41 $4D $2D $33
$107D: $00 $00
$107E: $CF52:  J: goto $FD1 (RJMP)
-----          V: _ms_naviConditionsEdit
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $108E ...
$107F: $9100:     [$010A] -> r16
$1080: $010A:  
$1081: $3001:     r16 = $01
$1082: $F059:     if (Z=1) then goto $108E
               C: if (ms_posConditions < 7) then goto $108C ...
$1083: $9100:     [$0751] -> r16
$1084: $0751:  
$1085: $3007:     r16 = $07
$1086: $F428:     if ( >= ) then goto $108C
               F: ms_posConditions++  ...
$1087: $9100:     [$0751] -> r16
$1088: $0751:  
$1089: $9503:     r16 ++
$108A: $9300:     r16 -> [$0751]
$108B: $0751:  
$108C: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$108D: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posConditions >= 1) then goto $1097 ...
$108E: $9100:     [$0751] -> r16
$108F: $0751:  
$1090: $3001:     r16 = $01
$1091: $F028:     if ( < ) then goto $1097
               F: ms_posConditions--  ...
$1092: $9100:     [$0751] -> r16
$1093: $0751:  
$1094: $950A:     r16 --
$1095: $9300:     r16 -> [$0751]
$1096: $0751:  
$1097: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1098: $9508:  F: RET (RET)
-----          V: _ms_visConditionsEdit
-----          L: 
$1099: $940E:  F: CALL $87F (_ms_printMessage)
$109A: $087F:  
-----          L: 
$109B: $940E:  F: CALL $6F8 (_print_string_)
$109C: $06F8:  
$109D: $45 $44 $49 $54 $20 $43 $4F $4E $44 $49 $54 $49 $4F $4E $53 $01
$10A5: $00 $00
$10A6: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$10A7: $02DF:  
-----          L: 
$10A8: $9100:  F: [$0751] -> r16 (ms_posConditions -> r16)
$10A9: $0751:  
$10AA: $9503:  F: r16 ++ (r16++)
$10AB: $9501:  F: - r16 (-r16)
$10AC: $9300:  F: r16 -> [$074F] (r16 -> ms_posFrame)
$10AD: $074F:  
-----          L: 
$10AE: $DA85:  F: rcall $B34 (_ms_posFrameTest)
$10AF: $F410:  C: if ( >= ) then goto $10B2 (<)
$10B0: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$10B1: $02DF:  
$10B2: $DA81:  F: rcall $B34 (_ms_posFrameTest)
$10B3: $F410:  C: if ( >= ) then goto $10B6 (<)
$10B4: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$10B5: $02DF:  
-----          L: 
-----          L: 
$10B6: $DA7D:  F: rcall $B34 (_ms_posFrameTest)
$10B7: $F4F8:  C: if ( >= ) then goto $10D7 (>=)
$10B8: $2F01:  F: r17 -> r16 (r17 -> r16)
$10B9: $940E:  F: CALL $314 (_ssd_Parse_r16)
$10BA: $0314:  
               F: ee_ms_sourseProg1 -> ms_sourseProg  ...
$10BB: $E615:     $65 -> r17
$10BC: $BD11:     r17 -> p$21
$10BD: $E013:     $03 -> r17
$10BE: $BD12:     r17 -> p$22
$10BF: $9AF8:     1 -> p$1F.0
$10C0: $B500:     p$20 -> r16
$10C1: $9300:     r16 -> [$0756]
$10C2: $0756:  
               F: ee_ms_sourseProg1_up -> ms_sourseProg_up  ...
$10C3: $E616:     $66 -> r17
$10C4: $BD11:     r17 -> p$21
$10C5: $E013:     $03 -> r17
$10C6: $BD12:     r17 -> p$22
$10C7: $9AF8:     1 -> p$1F.0
$10C8: $B500:     p$20 -> r16
$10C9: $9300:     r16 -> [$0757]
$10CA: $0757:  
               F: ee_ms_sourseProg1_down -> ms_sourseProg_down  ...
$10CB: $E617:     $67 -> r17
$10CC: $BD11:     r17 -> p$21
$10CD: $E013:     $03 -> r17
$10CE: $BD12:     r17 -> p$22
$10CF: $9AF8:     1 -> p$1F.0
$10D0: $B500:     p$20 -> r16
$10D1: $9300:     r16 -> [$0758]
$10D2: $0758:  
-----          L: 
               F: 255 -> ms_posConditionsIF  ...
$10D3: $EF0F:     $FF -> r16
$10D4: $9300:     r16 -> [$0752]
$10D5: $0752:  
$10D6: $D09F:  F: rcall $1176 (_ms_visConditionsLine_)
-----          L: 
$10D7: $DA5C:  F: rcall $B34 (_ms_posFrameTest)
$10D8: $F478:  C: if ( >= ) then goto $10E8 (>=)
$10D9: $E200:  F: $20 -> r16 (" " -> r16)
$10DA: $940E:  F: CALL $314 (_ssd_Parse_r16)
$10DB: $0314:  
$10DC: $940E:  F: CALL $6F8 (_print_string_)
$10DD: $06F8:  
$10DE: $52 $75 $6E $20 $50 $52 $4F $47 $52 $41 $4D $2D $31 $01 $00 $00
$10E6: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$10E7: $02DF:  
-----          L: 
-----          L: 
$10E8: $DA4B:  F: rcall $B34 (_ms_posFrameTest)
$10E9: $F410:  C: if ( >= ) then goto $10EC (<)
$10EA: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$10EB: $02DF:  
-----          L: 
$10EC: $DA47:  F: rcall $B34 (_ms_posFrameTest)
$10ED: $F4F8:  C: if ( >= ) then goto $110D (>=)
$10EE: $2F01:  F: r17 -> r16 (r17 -> r16)
$10EF: $940E:  F: CALL $314 (_ssd_Parse_r16)
$10F0: $0314:  
               F: ee_ms_sourseProg2 -> ms_sourseProg  ...
$10F1: $E618:     $68 -> r17
$10F2: $BD11:     r17 -> p$21
$10F3: $E013:     $03 -> r17
$10F4: $BD12:     r17 -> p$22
$10F5: $9AF8:     1 -> p$1F.0
$10F6: $B500:     p$20 -> r16
$10F7: $9300:     r16 -> [$0756]
$10F8: $0756:  
               F: ee_ms_sourseProg2_up -> ms_sourseProg_up  ...
$10F9: $E619:     $69 -> r17
$10FA: $BD11:     r17 -> p$21
$10FB: $E013:     $03 -> r17
$10FC: $BD12:     r17 -> p$22
$10FD: $9AF8:     1 -> p$1F.0
$10FE: $B500:     p$20 -> r16
$10FF: $9300:     r16 -> [$0757]
$1100: $0757:  
               F: ee_ms_sourseProg2_down -> ms_sourseProg_down  ...
$1101: $E61A:     $6A -> r17
$1102: $BD11:     r17 -> p$21
$1103: $E013:     $03 -> r17
$1104: $BD12:     r17 -> p$22
$1105: $9AF8:     1 -> p$1F.0
$1106: $B500:     p$20 -> r16
$1107: $9300:     r16 -> [$0758]
$1108: $0758:  
-----          L: 
               F: 255 -> ms_posConditionsIF  ...
$1109: $EF0F:     $FF -> r16
$110A: $9300:     r16 -> [$0752]
$110B: $0752:  
$110C: $D069:  F: rcall $1176 (_ms_visConditionsLine_)
-----          L: 
$110D: $DA26:  F: rcall $B34 (_ms_posFrameTest)
$110E: $F478:  C: if ( >= ) then goto $111E (>=)
$110F: $E200:  F: $20 -> r16 (" " -> r16)
$1110: $940E:  F: CALL $314 (_ssd_Parse_r16)
$1111: $0314:  
$1112: $940E:  F: CALL $6F8 (_print_string_)
$1113: $06F8:  
$1114: $52 $75 $6E $20 $50 $52 $4F $47 $52 $41 $4D $2D $32 $01 $00 $00
$111C: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$111D: $02DF:  
-----          L: 
-----          L: 
$111E: $DA15:  F: rcall $B34 (_ms_posFrameTest)
$111F: $F410:  C: if ( >= ) then goto $1122 (<)
$1120: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1121: $02DF:  
-----          L: 
$1122: $DA11:  F: rcall $B34 (_ms_posFrameTest)
$1123: $F4F8:  C: if ( >= ) then goto $1143 (>=)
$1124: $2F01:  F: r17 -> r16 (r17 -> r16)
$1125: $940E:  F: CALL $314 (_ssd_Parse_r16)
$1126: $0314:  
               F: ee_ms_sourseProg3 -> ms_sourseProg  ...
$1127: $E61B:     $6B -> r17
$1128: $BD11:     r17 -> p$21
$1129: $E013:     $03 -> r17
$112A: $BD12:     r17 -> p$22
$112B: $9AF8:     1 -> p$1F.0
$112C: $B500:     p$20 -> r16
$112D: $9300:     r16 -> [$0756]
$112E: $0756:  
               F: ee_ms_sourseProg3_up -> ms_sourseProg_up  ...
$112F: $E61C:     $6C -> r17
$1130: $BD11:     r17 -> p$21
$1131: $E013:     $03 -> r17
$1132: $BD12:     r17 -> p$22
$1133: $9AF8:     1 -> p$1F.0
$1134: $B500:     p$20 -> r16
$1135: $9300:     r16 -> [$0757]
$1136: $0757:  
               F: ee_ms_sourseProg3_down -> ms_sourseProg_down  ...
$1137: $E61D:     $6D -> r17
$1138: $BD11:     r17 -> p$21
$1139: $E013:     $03 -> r17
$113A: $BD12:     r17 -> p$22
$113B: $9AF8:     1 -> p$1F.0
$113C: $B500:     p$20 -> r16
$113D: $9300:     r16 -> [$0758]
$113E: $0758:  
-----          L: 
               F: 255 -> ms_posConditionsIF  ...
$113F: $EF0F:     $FF -> r16
$1140: $9300:     r16 -> [$0752]
$1141: $0752:  
$1142: $D033:  F: rcall $1176 (_ms_visConditionsLine_)
-----          L: 
$1143: $D9F0:  F: rcall $B34 (_ms_posFrameTest)
$1144: $F478:  C: if ( >= ) then goto $1154 (>=)
$1145: $E200:  F: $20 -> r16 (" " -> r16)
$1146: $940E:  F: CALL $314 (_ssd_Parse_r16)
$1147: $0314:  
$1148: $940E:  F: CALL $6F8 (_print_string_)
$1149: $06F8:  
$114A: $52 $75 $6E $20 $50 $52 $4F $47 $52 $41 $4D $2D $33 $01 $00 $00
$1152: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1153: $02DF:  
-----          L: 
-----          L: 
$1154: $D9DF:  F: rcall $B34 (_ms_posFrameTest)
$1155: $F410:  C: if ( >= ) then goto $1158 (<)
$1156: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1157: $02DF:  
$1158: $D9DB:  F: rcall $B34 (_ms_posFrameTest)
$1159: $F410:  C: if ( >= ) then goto $115C (<)
$115A: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$115B: $02DF:  
$115C: $D9D7:  F: rcall $B34 (_ms_posFrameTest)
$115D: $F410:  C: if ( >= ) then goto $1160 (<)
$115E: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$115F: $02DF:  
-----          L: 
$1160: $9508:  F: RET (RET)
-----          V: _ms_clickConditionsEdit
-----          L: 
               C: if (ms_posConditions = 0) then goto $116D ...
$1161: $9100:     [$0751] -> r16
$1162: $0751:  
$1163: $3000:     r16 = $00
$1164: $F041:     if (Z=1) then goto $116D
               C: if (ms_posConditions = 3) then goto $116D ...
$1165: $9100:     [$0751] -> r16
$1166: $0751:  
$1167: $3003:     r16 = $03
$1168: $F021:     if (Z=1) then goto $116D
               C: if (ms_posConditions -= 6) then goto $1175 ...
$1169: $9100:     [$0751] -> r16
$116A: $0751:  
$116B: $3006:     r16 = $06
$116C: $F441:     if (Z=0) then goto $1175
-----          L: 
$116D: $D1AA:  F: rcall $1318 (_ms_eeLoadConditionsEditIF)
               F: 0 -> ms_posConditionsIF  ...
$116E: $E000:     $00 -> r16
$116F: $9300:     r16 -> [$0752]
$1170: $0752:  
               F: MS_MODE_CONDITIONS_EDIT_IF -> ms_mode  ...
$1171: $E00B:     $0B -> r16
$1172: $9300:     r16 -> [$0528]
$1173: $0528:  
$1174: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$1175: $9508:  F: RET (RET)
-----          V: _ms_visConditionsLine_
-----          L: 
               C: if (ms_blink -= 0) then goto $1181 ...
$1176: $9100:     [$052A] -> r16
$1177: $052A:  
$1178: $3000:     r16 = $00
$1179: $F439:     if (Z=0) then goto $1181
               C: if (ms_posConditionsIF = 0) then goto $1181 ...
$117A: $9100:     [$0752] -> r16
$117B: $0752:  
$117C: $3000:     r16 = $00
$117D: $F419:     if (Z=0) then goto $1181
$117E: $940E:  F: CALL $6F8 (_print_string_)
$117F: $06F8:  
$1180: $03 $00
-----          L: 
               C: if (ms_sourseProg -= 0) then goto $118E ...
$1181: $9100:     [$0756] -> r16
$1182: $0756:  
$1183: $3000:     r16 = $00
$1184: $F449:     if (Z=0) then goto $118E
$1185: $940E:  F: CALL $6F8 (_print_string_)
$1186: $06F8:  
$1187: $41 $6C $77 $61 $79 $73 $01 $00
$118B: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$118C: $02DF:  
$118D: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_sourseProg < 5) then goto $119B ...
$118E: $9100:     [$0756] -> r16
$118F: $0756:  
$1190: $3005:     r16 = $05
$1191: $F048:     if ( < ) then goto $119B
$1192: $940E:  F: CALL $6F8 (_print_string_)
$1193: $06F8:  
$1194: $4E $65 $76 $65 $72 $01 $00 $00
$1198: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1199: $02DF:  
$119A: $9508:  F: RET (RET)
-----          L: 
-----          L: 
$119B: $940E:  F: CALL $6F8 (_print_string_)
$119C: $06F8:  
$119D: $01 $49 $46 $20 $00 $00
               C: if (ms_blink -= 0) then goto $11AB ...
$11A0: $9100:     [$052A] -> r16
$11A1: $052A:  
$11A2: $3000:     r16 = $00
$11A3: $F439:     if (Z=0) then goto $11AB
               C: if (ms_posConditionsIF = 0) then goto $11AB ...
$11A4: $9100:     [$0752] -> r16
$11A5: $0752:  
$11A6: $3000:     r16 = $00
$11A7: $F419:     if (Z=0) then goto $11AB
$11A8: $940E:  F: CALL $6F8 (_print_string_)
$11A9: $06F8:  
$11AA: $03 $00
-----          L: 
$11AB: $940E:  F: CALL $6F8 (_print_string_)
$11AC: $06F8:  
$11AD: $49 $6E $2D $00
-----          L: 
$11AF: $9100:  F: [$0756] -> r16 (ms_sourseProg -> r16)
$11B0: $0756:  
$11B1: $5D00:  F: r16 - $D0 (r16 + "0")
$11B2: $940E:  F: CALL $314 (_ssd_Parse_r16)
$11B3: $0314:  
$11B4: $940E:  F: CALL $6F8 (_print_string_)
$11B5: $06F8:  
$11B6: $01 $20 $3D $20 $00 $00
-----          L: 
               C: if (ms_blink -= 0) then goto $11C4 ...
$11B9: $9100:     [$052A] -> r16
$11BA: $052A:  
$11BB: $3000:     r16 = $00
$11BC: $F439:     if (Z=0) then goto $11C4
               C: if (ms_posConditionsIF = 1) then goto $11C4 ...
$11BD: $9100:     [$0752] -> r16
$11BE: $0752:  
$11BF: $3001:     r16 = $01
$11C0: $F419:     if (Z=0) then goto $11C4
$11C1: $940E:  F: CALL $6F8 (_print_string_)
$11C2: $06F8:  
$11C3: $03 $00
-----          L: 
               F: Z ->  ...
$11C4: $93EF:     r30 ->
$11C5: $93FF:     r31 ->
               F: ms_sourseProg_down -> Z  ...
$11C6: $91E0:     [$0758] -> r30
$11C7: $0758:  
$11C8: $E0F0:     $00 -> r31
$11C9: $940E:  F: CALL $716 (_print_DECV2_)
$11CA: $0716:  
               F: -> Z  ...
$11CB: $91FF:     -> r31
$11CC: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$11CD: $940E:  F: CALL $6F8 (_print_string_)
$11CE: $06F8:  
$11CF: $01 $2D $00 $00
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
               C: if (ms_blink -= 0) then goto $11DC ...
$11D1: $9100:     [$052A] -> r16
$11D2: $052A:  
$11D3: $3000:     r16 = $00
$11D4: $F439:     if (Z=0) then goto $11DC
               C: if (ms_posConditionsIF = 2) then goto $11DC ...
$11D5: $9100:     [$0752] -> r16
$11D6: $0752:  
$11D7: $3002:     r16 = $02
$11D8: $F419:     if (Z=0) then goto $11DC
$11D9: $940E:  F: CALL $6F8 (_print_string_)
$11DA: $06F8:  
$11DB: $03 $00
-----          L: 
               F: Z ->  ...
$11DC: $93EF:     r30 ->
$11DD: $93FF:     r31 ->
               F: ms_sourseProg_up -> Z  ...
$11DE: $91E0:     [$0757] -> r30
$11DF: $0757:  
$11E0: $E0F0:     $00 -> r31
$11E1: $940E:  F: CALL $716 (_print_DECV2_)
$11E2: $0716:  
               F: -> Z  ...
$11E3: $91FF:     -> r31
$11E4: $91EF:     -> r30
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Print.alg    ***********
-----          L: 
$11E5: $940E:  F: CALL $6F8 (_print_string_)
$11E6: $06F8:  
$11E7: $01 $00
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
$11E8: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$11E9: $02DF:  
$11EA: $9508:  F: RET (RET)
-----          V: _ms_naviConditionsEditIF
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $122B ...
$11EB: $9100:     [$010A] -> r16
$11EC: $010A:  
$11ED: $3001:     r16 = $01
$11EE: $F1E1:     if (Z=1) then goto $122B
-----          L: 
               C: if (ms_posConditionsIF -= 0) then goto $11FF ...
$11EF: $9100:     [$0752] -> r16
$11F0: $0752:  
$11F1: $3000:     r16 = $00
$11F2: $F461:     if (Z=0) then goto $11FF
               F: ms_sourseProg++  ...
$11F3: $9100:     [$0756] -> r16
$11F4: $0756:  
$11F5: $9503:     r16 ++
$11F6: $9300:     r16 -> [$0756]
$11F7: $0756:  
               C: if (ms_sourseProg >= 5) then goto $11FF ...
$11F8: $9100:     [$0756] -> r16
$11F9: $0756:  
$11FA: $3005:     r16 = $05
$11FB: $F018:     if ( < ) then goto $11FF
               F: 5 -> ms_sourseProg  ...
$11FC: $E005:     $05 -> r16
$11FD: $9300:     r16 -> [$0756]
$11FE: $0756:  
-----          L: 
               C: if (ms_posConditionsIF -= 1) then goto $1219 ...
$11FF: $9100:     [$0752] -> r16
$1200: $0752:  
$1201: $3001:     r16 = $01
$1202: $F4B1:     if (Z=0) then goto $1219
               F: ms_sourseProg_down++  ...
$1203: $9100:     [$0758] -> r16
$1204: $0758:  
$1205: $9503:     r16 ++
$1206: $9300:     r16 -> [$0758]
$1207: $0758:  
               C: if (ms_sourseProg_down >= ADC_MAX) then goto $120F ...
$1208: $9100:     [$0758] -> r16
$1209: $0758:  
$120A: $3302:     r16 = $32
$120B: $F018:     if ( < ) then goto $120F
               F: ADC_MAX -> ms_sourseProg_down  ...
$120C: $E302:     $32 -> r16
$120D: $9300:     r16 -> [$0758]
$120E: $0758:  
               C: if (ms_sourseProg_down > ms_sourseProg_up) then goto $1219 ...
$120F: $9100:     [$0757] -> r16
$1210: $0757:  
$1211: $9110:     [$0758] -> r17
$1212: $0758:  
$1213: $1701:     r16 = r17
$1214: $F420:     if ( >= ) then goto $1219
               F: ms_sourseProg_down -> ms_sourseProg_up  ...
$1215: $9100:     [$0758] -> r16
$1216: $0758:  
$1217: $9300:     r16 -> [$0757]
$1218: $0757:  
-----          L: 
               C: if (ms_posConditionsIF -= 2) then goto $1229 ...
$1219: $9100:     [$0752] -> r16
$121A: $0752:  
$121B: $3002:     r16 = $02
$121C: $F461:     if (Z=0) then goto $1229
               F: ms_sourseProg_up++  ...
$121D: $9100:     [$0757] -> r16
$121E: $0757:  
$121F: $9503:     r16 ++
$1220: $9300:     r16 -> [$0757]
$1221: $0757:  
               C: if (ms_sourseProg_up >= ADC_MAX) then goto $1229 ...
$1222: $9100:     [$0757] -> r16
$1223: $0757:  
$1224: $3302:     r16 = $32
$1225: $F018:     if ( < ) then goto $1229
               F: ADC_MAX -> ms_sourseProg_up  ...
$1226: $E302:     $32 -> r16
$1227: $9300:     r16 -> [$0757]
$1228: $0757:  
-----          L: 
-----          L: 
$1229: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$122A: $9508:  F: RET (RET)
-----          L: 
-----          L: 
               C: if (ms_posConditionsIF -= 0) then goto $123F ...
$122B: $9100:     [$0752] -> r16
$122C: $0752:  
$122D: $3000:     r16 = $00
$122E: $F481:     if (Z=0) then goto $123F
               C: if (ms_sourseProg >= 1) then goto $1238 ...
$122F: $9100:     [$0756] -> r16
$1230: $0756:  
$1231: $3001:     r16 = $01
$1232: $F028:     if ( < ) then goto $1238
               F: ms_sourseProg--  ...
$1233: $9100:     [$0756] -> r16
$1234: $0756:  
$1235: $950A:     r16 --
$1236: $9300:     r16 -> [$0756]
$1237: $0756:  
               C: if (ms_sourseProg > 5) then goto $123F ...
$1238: $E005:     $05 -> r16
$1239: $9110:     [$0756] -> r17
$123A: $0756:  
$123B: $1701:     r16 = r17
$123C: $F410:     if ( >= ) then goto $123F
               F: 5 -> ms_sourseProg  ...
$123D: $9300:     r16 -> [$0756]
$123E: $0756:  
-----          L: 
               C: if (ms_posConditionsIF -= 1) then goto $1253 ...
$123F: $9100:     [$0752] -> r16
$1240: $0752:  
$1241: $3001:     r16 = $01
$1242: $F481:     if (Z=0) then goto $1253
               C: if (ms_sourseProg_down >= 1) then goto $124C ...
$1243: $9100:     [$0758] -> r16
$1244: $0758:  
$1245: $3001:     r16 = $01
$1246: $F028:     if ( < ) then goto $124C
               F: ms_sourseProg_down--  ...
$1247: $9100:     [$0758] -> r16
$1248: $0758:  
$1249: $950A:     r16 --
$124A: $9300:     r16 -> [$0758]
$124B: $0758:  
               C: if (ms_sourseProg_down > ADC_MAX) then goto $1253 ...
$124C: $E302:     $32 -> r16
$124D: $9110:     [$0758] -> r17
$124E: $0758:  
$124F: $1701:     r16 = r17
$1250: $F410:     if ( >= ) then goto $1253
               F: ADC_MAX -> ms_sourseProg_down  ...
$1251: $9300:     r16 -> [$0758]
$1252: $0758:  
-----          L: 
               C: if (ms_posConditionsIF -= 2) then goto $1271 ...
$1253: $9100:     [$0752] -> r16
$1254: $0752:  
$1255: $3002:     r16 = $02
$1256: $F4D1:     if (Z=0) then goto $1271
               C: if (ms_sourseProg_up >= 1) then goto $1260 ...
$1257: $9100:     [$0757] -> r16
$1258: $0757:  
$1259: $3001:     r16 = $01
$125A: $F028:     if ( < ) then goto $1260
               F: ms_sourseProg_up--  ...
$125B: $9100:     [$0757] -> r16
$125C: $0757:  
$125D: $950A:     r16 --
$125E: $9300:     r16 -> [$0757]
$125F: $0757:  
               C: if (ms_sourseProg_up > ADC_MAX) then goto $1267 ...
$1260: $E302:     $32 -> r16
$1261: $9110:     [$0757] -> r17
$1262: $0757:  
$1263: $1701:     r16 = r17
$1264: $F410:     if ( >= ) then goto $1267
               F: ADC_MAX -> ms_sourseProg_up  ...
$1265: $9300:     r16 -> [$0757]
$1266: $0757:  
               C: if (ms_sourseProg_down > ms_sourseProg_up) then goto $1271 ...
$1267: $9100:     [$0757] -> r16
$1268: $0757:  
$1269: $9110:     [$0758] -> r17
$126A: $0758:  
$126B: $1701:     r16 = r17
$126C: $F420:     if ( >= ) then goto $1271
               F: ms_sourseProg_up -> ms_sourseProg_down  ...
$126D: $9100:     [$0757] -> r16
$126E: $0757:  
$126F: $9300:     r16 -> [$0758]
$1270: $0758:  
-----          L: 
-----          L: 
$1271: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1272: $9508:  F: RET (RET)
-----          V: _ms_visConditionsEditIF
-----          L: 
$1273: $940E:  F: CALL $87F (_ms_printMessage)
$1274: $087F:  
-----          L: 
$1275: $940E:  F: CALL $6F8 (_print_string_)
$1276: $06F8:  
$1277: $45 $44 $49 $54 $20 $4C $49 $4E $45 $01 $00 $00
$127D: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$127E: $02DF:  
-----          L: 
$127F: $E000:  F: $00 -> r16 (0 -> r16)
$1280: $E014:  F: $04 -> r17 (4 -> r17)
$1281: $940E:  F: CALL $2EC (_ssd_Pos_)
$1282: $02EC:  
               C: if (ms_blink-=0) then goto $128C ...
$1283: $9100:     [$052A] -> r16
$1284: $052A:  
$1285: $3000:     r16 = $00
$1286: $F429:     if (Z=0) then goto $128C
$1287: $940E:  F: CALL $6F8 (_print_string_)
$1288: $06F8:  
$1289: $6F $01 $00 $00
$128B: $C004:  J: goto $1290 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$128C: $940E:  F: CALL $6F8 (_print_string_)
$128D: $06F8:  
$128E: $2E $01 $00 $00
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_CondWork.alg    ***********
-----          L: 
$1290: $DEE5:  F: rcall $1176 (_ms_visConditionsLine_)
-----          L: 
$1291: $9508:  F: RET (RET)
-----          V: _ms_clickConditionsEditIF
-----          L: 
               C: if (ms_sourseProg = 0) then goto $12A3 ...
$1292: $9100:     [$0756] -> r16
$1293: $0756:  
$1294: $3000:     r16 = $00
$1295: $F069:     if (Z=1) then goto $12A3
               C: if (ms_sourseProg >= 5) then goto $12A3 ...
$1296: $9100:     [$0756] -> r16
$1297: $0756:  
$1298: $3005:     r16 = $05
$1299: $F448:     if ( >= ) then goto $12A3
-----          L: 
               F: ms_posConditionsIF ++  ...
$129A: $9100:     [$0752] -> r16
$129B: $0752:  
$129C: $9503:     r16 ++
$129D: $9300:     r16 -> [$0752]
$129E: $0752:  
               C: if (ms_posConditionsIF < 3) then goto $12A8 ...
$129F: $9100:     [$0752] -> r16
$12A0: $0752:  
$12A1: $3003:     r16 = $03
$12A2: $F028:     if ( < ) then goto $12A8
-----          L: 
$12A3: $D006:  F: rcall $12AA (_ms_eeSaveConditionsEditIF)
               F: MS_MODE_CONDITIONS_EDIT -> ms_mode  ...
$12A4: $E009:     $09 -> r16
$12A5: $9300:     r16 -> [$0528]
$12A6: $0528:  
$12A7: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$12A8: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$12A9: $9508:  F: RET (RET)
-----          V: _ms_eeSaveConditionsEditIF
               C: if (ms_posConditions -= 0) then goto $12D0 ...
$12AA: $9100:     [$0751] -> r16
$12AB: $0751:  
$12AC: $3000:     r16 = $00
$12AD: $F511:     if (Z=0) then goto $12D0
               F: ms_sourseProg -> ee_ms_sourseProg1  ...
$12AE: $9100:     [$0756] -> r16
$12AF: $0756:  
$12B0: $E615:     $65 -> r17
$12B1: $BD11:     r17 -> p$21
$12B2: $E013:     $03 -> r17
$12B3: $BD12:     r17 -> p$22
$12B4: $BD00:     r16 -> p$20
$12B5: $9AFA:     1 -> p$1F.2
$12B6: $9AF9:     1 -> p$1F.1
$12B7: $99F9:     if (p$1F.1=0 then SKIP
$12B8: $CFFE:     goto $12B7 (RJMP)
               F: ms_sourseProg_up -> ee_ms_sourseProg1_up  ...
$12B9: $9100:     [$0757] -> r16
$12BA: $0757:  
$12BB: $E616:     $66 -> r17
$12BC: $BD11:     r17 -> p$21
$12BD: $E013:     $03 -> r17
$12BE: $BD12:     r17 -> p$22
$12BF: $BD00:     r16 -> p$20
$12C0: $9AFA:     1 -> p$1F.2
$12C1: $9AF9:     1 -> p$1F.1
$12C2: $99F9:     if (p$1F.1=0 then SKIP
$12C3: $CFFE:     goto $12C2 (RJMP)
               F: ms_sourseProg_down -> ee_ms_sourseProg1_down  ...
$12C4: $9100:     [$0758] -> r16
$12C5: $0758:  
$12C6: $E617:     $67 -> r17
$12C7: $BD11:     r17 -> p$21
$12C8: $E013:     $03 -> r17
$12C9: $BD12:     r17 -> p$22
$12CA: $BD00:     r16 -> p$20
$12CB: $9AFA:     1 -> p$1F.2
$12CC: $9AF9:     1 -> p$1F.1
$12CD: $99F9:     if (p$1F.1=0 then SKIP
$12CE: $CFFE:     goto $12CD (RJMP)
$12CF: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posConditions -= 3) then goto $12F6 ...
$12D0: $9100:     [$0751] -> r16
$12D1: $0751:  
$12D2: $3003:     r16 = $03
$12D3: $F511:     if (Z=0) then goto $12F6
               F: ms_sourseProg -> ee_ms_sourseProg2  ...
$12D4: $9100:     [$0756] -> r16
$12D5: $0756:  
$12D6: $E618:     $68 -> r17
$12D7: $BD11:     r17 -> p$21
$12D8: $E013:     $03 -> r17
$12D9: $BD12:     r17 -> p$22
$12DA: $BD00:     r16 -> p$20
$12DB: $9AFA:     1 -> p$1F.2
$12DC: $9AF9:     1 -> p$1F.1
$12DD: $99F9:     if (p$1F.1=0 then SKIP
$12DE: $CFFE:     goto $12DD (RJMP)
               F: ms_sourseProg_up -> ee_ms_sourseProg2_up  ...
$12DF: $9100:     [$0757] -> r16
$12E0: $0757:  
$12E1: $E619:     $69 -> r17
$12E2: $BD11:     r17 -> p$21
$12E3: $E013:     $03 -> r17
$12E4: $BD12:     r17 -> p$22
$12E5: $BD00:     r16 -> p$20
$12E6: $9AFA:     1 -> p$1F.2
$12E7: $9AF9:     1 -> p$1F.1
$12E8: $99F9:     if (p$1F.1=0 then SKIP
$12E9: $CFFE:     goto $12E8 (RJMP)
               F: ms_sourseProg_down -> ee_ms_sourseProg2_down  ...
$12EA: $9100:     [$0758] -> r16
$12EB: $0758:  
$12EC: $E61A:     $6A -> r17
$12ED: $BD11:     r17 -> p$21
$12EE: $E013:     $03 -> r17
$12EF: $BD12:     r17 -> p$22
$12F0: $BD00:     r16 -> p$20
$12F1: $9AFA:     1 -> p$1F.2
$12F2: $9AF9:     1 -> p$1F.1
$12F3: $99F9:     if (p$1F.1=0 then SKIP
$12F4: $CFFE:     goto $12F3 (RJMP)
$12F5: $9508:  F: RET (RET)
-----          L: 
               F: ms_sourseProg -> ee_ms_sourseProg3  ...
$12F6: $9100:     [$0756] -> r16
$12F7: $0756:  
$12F8: $E61B:     $6B -> r17
$12F9: $BD11:     r17 -> p$21
$12FA: $E013:     $03 -> r17
$12FB: $BD12:     r17 -> p$22
$12FC: $BD00:     r16 -> p$20
$12FD: $9AFA:     1 -> p$1F.2
$12FE: $9AF9:     1 -> p$1F.1
$12FF: $99F9:     if (p$1F.1=0 then SKIP
$1300: $CFFE:     goto $12FF (RJMP)
               F: ms_sourseProg_up -> ee_ms_sourseProg3_up  ...
$1301: $9100:     [$0757] -> r16
$1302: $0757:  
$1303: $E61C:     $6C -> r17
$1304: $BD11:     r17 -> p$21
$1305: $E013:     $03 -> r17
$1306: $BD12:     r17 -> p$22
$1307: $BD00:     r16 -> p$20
$1308: $9AFA:     1 -> p$1F.2
$1309: $9AF9:     1 -> p$1F.1
$130A: $99F9:     if (p$1F.1=0 then SKIP
$130B: $CFFE:     goto $130A (RJMP)
               F: ms_sourseProg_down -> ee_ms_sourseProg3_down  ...
$130C: $9100:     [$0758] -> r16
$130D: $0758:  
$130E: $E61D:     $6D -> r17
$130F: $BD11:     r17 -> p$21
$1310: $E013:     $03 -> r17
$1311: $BD12:     r17 -> p$22
$1312: $BD00:     r16 -> p$20
$1313: $9AFA:     1 -> p$1F.2
$1314: $9AF9:     1 -> p$1F.1
$1315: $99F9:     if (p$1F.1=0 then SKIP
$1316: $CFFE:     goto $1315 (RJMP)
$1317: $9508:  F: RET (RET)
-----          V: _ms_eeLoadConditionsEditIF
               C: if (ms_posConditions -= 0) then goto $1335 ...
$1318: $9100:     [$0751] -> r16
$1319: $0751:  
$131A: $3000:     r16 = $00
$131B: $F4C9:     if (Z=0) then goto $1335
               F: ee_ms_sourseProg1 -> ms_sourseProg  ...
$131C: $E615:     $65 -> r17
$131D: $BD11:     r17 -> p$21
$131E: $E013:     $03 -> r17
$131F: $BD12:     r17 -> p$22
$1320: $9AF8:     1 -> p$1F.0
$1321: $B500:     p$20 -> r16
$1322: $9300:     r16 -> [$0756]
$1323: $0756:  
               F: ee_ms_sourseProg1_up -> ms_sourseProg_up  ...
$1324: $E616:     $66 -> r17
$1325: $BD11:     r17 -> p$21
$1326: $E013:     $03 -> r17
$1327: $BD12:     r17 -> p$22
$1328: $9AF8:     1 -> p$1F.0
$1329: $B500:     p$20 -> r16
$132A: $9300:     r16 -> [$0757]
$132B: $0757:  
               F: ee_ms_sourseProg1_down -> ms_sourseProg_down  ...
$132C: $E617:     $67 -> r17
$132D: $BD11:     r17 -> p$21
$132E: $E013:     $03 -> r17
$132F: $BD12:     r17 -> p$22
$1330: $9AF8:     1 -> p$1F.0
$1331: $B500:     p$20 -> r16
$1332: $9300:     r16 -> [$0758]
$1333: $0758:  
$1334: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posConditions -= 3) then goto $1352 ...
$1335: $9100:     [$0751] -> r16
$1336: $0751:  
$1337: $3003:     r16 = $03
$1338: $F4C9:     if (Z=0) then goto $1352
               F: ee_ms_sourseProg2 -> ms_sourseProg  ...
$1339: $E618:     $68 -> r17
$133A: $BD11:     r17 -> p$21
$133B: $E013:     $03 -> r17
$133C: $BD12:     r17 -> p$22
$133D: $9AF8:     1 -> p$1F.0
$133E: $B500:     p$20 -> r16
$133F: $9300:     r16 -> [$0756]
$1340: $0756:  
               F: ee_ms_sourseProg2_up -> ms_sourseProg_up  ...
$1341: $E619:     $69 -> r17
$1342: $BD11:     r17 -> p$21
$1343: $E013:     $03 -> r17
$1344: $BD12:     r17 -> p$22
$1345: $9AF8:     1 -> p$1F.0
$1346: $B500:     p$20 -> r16
$1347: $9300:     r16 -> [$0757]
$1348: $0757:  
               F: ee_ms_sourseProg2_down -> ms_sourseProg_down  ...
$1349: $E61A:     $6A -> r17
$134A: $BD11:     r17 -> p$21
$134B: $E013:     $03 -> r17
$134C: $BD12:     r17 -> p$22
$134D: $9AF8:     1 -> p$1F.0
$134E: $B500:     p$20 -> r16
$134F: $9300:     r16 -> [$0758]
$1350: $0758:  
$1351: $9508:  F: RET (RET)
-----          L: 
               F: ee_ms_sourseProg3 -> ms_sourseProg  ...
$1352: $E61B:     $6B -> r17
$1353: $BD11:     r17 -> p$21
$1354: $E013:     $03 -> r17
$1355: $BD12:     r17 -> p$22
$1356: $9AF8:     1 -> p$1F.0
$1357: $B500:     p$20 -> r16
$1358: $9300:     r16 -> [$0756]
$1359: $0756:  
               F: ee_ms_sourseProg3_up -> ms_sourseProg_up  ...
$135A: $E61C:     $6C -> r17
$135B: $BD11:     r17 -> p$21
$135C: $E013:     $03 -> r17
$135D: $BD12:     r17 -> p$22
$135E: $9AF8:     1 -> p$1F.0
$135F: $B500:     p$20 -> r16
$1360: $9300:     r16 -> [$0757]
$1361: $0757:  
               F: ee_ms_sourseProg3_down -> ms_sourseProg_down  ...
$1362: $E61D:     $6D -> r17
$1363: $BD11:     r17 -> p$21
$1364: $E013:     $03 -> r17
$1365: $BD12:     r17 -> p$22
$1366: $9AF8:     1 -> p$1F.0
$1367: $B500:     p$20 -> r16
$1368: $9300:     r16 -> [$0758]
$1369: $0758:  
$136A: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_ProgWork.alg    ***********
-----          V: _ms_visOnceCycle
-----          L: 
$136B: $940E:  F: CALL $87F (_ms_printMessage)
$136C: $087F:  
-----          L: 
$136D: $940E:  F: CALL $6F8 (_print_string_)
$136E: $06F8:  
$136F: $01 $00
$1370: $940E:  F: CALL $6F8 (_print_string_)
$1371: $06F8:  
$1372: $50 $52 $4F $47 $52 $41 $4D $2D $00 $00
-----          L: 
$1377: $9100:  F: [$0526] -> r16 (ms_currentProg -> r16)
$1378: $0526:  
$1379: $5C0F:  F: r16 - $CF (r16 + "1")
$137A: $940E:  F: CALL $314 (_ssd_Parse_r16)
$137B: $0314:  
-----          L: 
               C: if (ms_pauseOnceCycle=0) then goto $1387 ...
$137C: $9100:     [$0755] -> r16
$137D: $0755:  
$137E: $3000:     r16 = $00
$137F: $F039:     if (Z=1) then goto $1387
$1380: $940E:  F: CALL $6F8 (_print_string_)
$1381: $06F8:  
$1382: $20 $50 $61 $75 $73 $65 $00 $00
$1386: $C006:  J: goto $138D (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$1387: $940E:  F: CALL $6F8 (_print_string_)
$1388: $06F8:  
$1389: $20 $57 $6F $72 $6B $73 $00 $00
-----          L: 
$138D: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$138E: $02DF:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_ProgWork.alg    ***********
-----          L: 
$138F: $D038:  F: rcall $13C8 (_ms_visProgWorks)
$1390: $9508:  F: RET (RET)
-----          V: _ms_naviOnceCycle
$1391: $940E:  F: CALL $B70 (_ms_get_visAllObjNumber)
$1392: $0B70:  
               C: if (ms_objNumber -= 0) then goto $139C ...
$1393: $9100:     [$0748] -> r16
$1394: $0748:  
$1395: $3000:     r16 = $00
$1396: $F029:     if (Z=1) then goto $139C
               F: ms_objNumber--  ...
$1397: $9100:     [$0748] -> r16
$1398: $0748:  
$1399: $950A:     r16 --
$139A: $9300:     r16 -> [$0748]
$139B: $0748:  
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $13AD ...
$139C: $9100:     [$010A] -> r16
$139D: $010A:  
$139E: $3001:     r16 = $01
$139F: $F069:     if (Z=1) then goto $13AD
               C: if (ms_posOnceCycle < ms_objNumber) then goto $13AB ...
$13A0: $9100:     [$0750] -> r16
$13A1: $0750:  
$13A2: $9110:     [$0748] -> r17
$13A3: $0748:  
$13A4: $1701:     r16 = r17
$13A5: $F428:     if ( >= ) then goto $13AB
               F: ms_posOnceCycle++  ...
$13A6: $9100:     [$0750] -> r16
$13A7: $0750:  
$13A8: $9503:     r16 ++
$13A9: $9300:     r16 -> [$0750]
$13AA: $0750:  
-----          L: 
$13AB: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$13AC: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posOnceCycle >= 1) then goto $13B6 ...
$13AD: $9100:     [$0750] -> r16
$13AE: $0750:  
$13AF: $3001:     r16 = $01
$13B0: $F028:     if ( < ) then goto $13B6
               F: ms_posOnceCycle--  ...
$13B1: $9100:     [$0750] -> r16
$13B2: $0750:  
$13B3: $950A:     r16 --
$13B4: $9300:     r16 -> [$0750]
$13B5: $0750:  
$13B6: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$13B7: $9508:  F: RET (RET)
-----          V: _ms_clicOnceCycle
               C: if (ms_pauseOnceCycle-=0) then goto $13C2 ...
$13B8: $9100:     [$0755] -> r16
$13B9: $0755:  
$13BA: $3000:     r16 = $00
$13BB: $F431:     if (Z=0) then goto $13C2
-----          L: 
               F: 1 -> ms_pauseOnceCycle  ...
$13BC: $E001:     $01 -> r16
$13BD: $9300:     r16 -> [$0755]
$13BE: $0755:  
$13BF: $6038:  F: r19 ! $08 (1 -> f_resetAllRelay)
$13C0: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$13C1: $9508:  F: RET (RET)
-----          L: 
-----          L: 
$13C2: $D873:  F: rcall $C36 (_ms_do_statusReset)
               F: 0 -> ms_pauseOnceCycle  ...
$13C3: $E000:     $00 -> r16
$13C4: $9300:     r16 -> [$0755]
$13C5: $0755:  
$13C6: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$13C7: $9508:  F: RET (RET)
-----          V: _ms_visProgWorks
               F: Y ->  ...
$13C8: $93CF:     r28 ->
$13C9: $93DF:     r29 ->
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$13CA: $E3C8:     $38 -> r28
$13CB: $E0D5:     $05 -> r29
               F: -1 -> ms_posFrame  ...
$13CC: $EF0F:     $FF -> r16
$13CD: $9300:     r16 -> [$074F]
$13CE: $074F:  
               F: -1 -> ms_objCurrentScan  ...
$13CF: $9300:     r16 -> [$0749]
$13D0: $0749:  
-----          L: 
               F: ms_posFrame++  ...
$13D1: $9100:     [$074F] -> r16
$13D2: $074F:  
$13D3: $9503:     r16 ++
$13D4: $9300:     r16 -> [$074F]
$13D5: $074F:  
-----          L: 
               F: ms_objCurrentScan++  ...
$13D6: $9100:     [$0749] -> r16
$13D7: $0749:  
$13D8: $9503:     r16 ++
$13D9: $9300:     r16 -> [$0749]
$13DA: $0749:  
-----          L: 
$13DB: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if (ms_posFrame >= 6) then goto $141C ...
$13DC: $9100:     [$074F] -> r16
$13DD: $074F:  
$13DE: $3006:     r16 = $06
$13DF: $F5E0:     if ( >= ) then goto $141C
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $141C ...
$13E0: $8108:     [Y+$00] -> r 16
$13E1: $3F0F:     r16 = $FF
$13E2: $F1C9:     if (Z=1) then goto $141C
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $13DB ...
$13E3: $8108:     [Y+$00] -> r 16
$13E4: $3001:     r16 = $01
$13E5: $F7A9:     if (Z=0) then goto $13DB
-----          L: 
$13E6: $9100:  F: [$0749] -> r16 (ms_objCurrentScan -> r16)
$13E7: $0749:  
$13E8: $5F0E:  F: r16 - $FE (r16 + 2)
               F: r16 - ms_posOnceCycle  ...
$13E9: $9110:     [$0750] -> r17
$13EA: $0750:  
$13EB: $1B01:     r16 - r17
               C: if (r16 >= 6) then goto $13D6 ...
$13EC: $3006:     r16 = $06
$13ED: $F740:     if ( >= ) then goto $13D6
-----          L: 
-----          L: 
$13EE: $9100:  F: [$074F] -> r16 (ms_posFrame -> r16)
$13EF: $074F:  
               F: r16 + ms_posOnceCycle  ...
$13F0: $9110:     [$0750] -> r17
$13F1: $0750:  
$13F2: $0F01:     r16 + r17
               C: if (r16 >= 2) then goto $13FD ...
$13F3: $3002:     r16 = $02
$13F4: $F440:     if ( >= ) then goto $13FD
$13F5: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$13F6: $02DF:  
               F: ms_posFrame++  ...
$13F7: $9100:     [$074F] -> r16
$13F8: $074F:  
$13F9: $9503:     r16 ++
$13FA: $9300:     r16 -> [$074F]
$13FB: $074F:  
$13FC: $CFF1:  J: goto $13EE (RJMP)
-----          L: 
-----          L: 
-----          L: 
$13FD: $940E:  F: CALL $6F8 (_print_string_)
$13FE: $06F8:  
$13FF: $20 $00
-----          L: 
$1400: $940E:  F: CALL $9FE (_ms_printAddress)
$1401: $09FE:  
-----          L: 
$1402: $940E:  F: CALL $A36 (_ms_printKey)
$1403: $0A36:  
-----          L: 
$1404: $940E:  F: CALL $A6B (_ms_printIdle_m)
$1405: $0A6B:  
$1406: $940E:  F: CALL $6F8 (_print_string_)
$1407: $06F8:  
$1408: $3A $00
$1409: $940E:  F: CALL $A41 (_ms_printIdle_s)
$140A: $0A41:  
$140B: $940E:  F: CALL $6F8 (_print_string_)
$140C: $06F8:  
$140D: $20 $00
-----          L: 
$140E: $8109:  F: [Y+$01] -> r 16 ([Y+MS_OBJ_ADDR] -> r16)
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $1419 ...
$140F: $8109:     [Y+$01] -> r 16
$1410: $3000:     r16 = $00
$1411: $F039:     if (Z=1) then goto $1419
$1412: $940E:  F: CALL $A93 (_ms_printWork_m)
$1413: $0A93:  
$1414: $940E:  F: CALL $6F8 (_print_string_)
$1415: $06F8:  
$1416: $3A $00
$1417: $940E:  F: CALL $A7F (_ms_printWork_s)
$1418: $0A7F:  
-----          L: 
-----          L: 
$1419: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$141A: $02DF:  
$141B: $CFB5:  J: goto $13D1 (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_posFrame >= 6) then goto $1428 ...
$141C: $9100:     [$074F] -> r16
$141D: $074F:  
$141E: $3006:     r16 = $06
$141F: $F440:     if ( >= ) then goto $1428
$1420: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1421: $02DF:  
               F: ms_posFrame++  ...
$1422: $9100:     [$074F] -> r16
$1423: $074F:  
$1424: $9503:     r16 ++
$1425: $9300:     r16 -> [$074F]
$1426: $074F:  
$1427: $CFF4:  J: goto $141C (RJMP)
-----          L: 
-----          L: 
               F: -> Y  ...
$1428: $91DF:     -> r29
$1429: $91CF:     -> r28
$142A: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Menu.alg    ***********
-----          V: _ms_visMenu
-----          L: 
$142B: $940E:  F: CALL $87F (_ms_printMessage)
$142C: $087F:  
-----          L: 
$142D: $940E:  F: CALL $6F8 (_print_string_)
$142E: $06F8:  
$142F: $4D $45 $4E $55 $01 $00
$1432: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1433: $02DF:  
-----          L: 
$1434: $9100:  F: [$074A] -> r16 (ms_posMenu -> r16)
$1435: $074A:  
$1436: $9503:  F: r16 ++ (r16++)
$1437: $9501:  F: - r16 (-r16)
$1438: $9300:  F: r16 -> [$074F] (r16 -> ms_posFrame)
$1439: $074F:  
-----          L: 
$143A: $940E:  F: CALL $B34 (_ms_posFrameTest)
$143B: $0B34:  
$143C: $F410:  C: if ( >= ) then goto $143F (<)
$143D: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$143E: $02DF:  
$143F: $940E:  F: CALL $B34 (_ms_posFrameTest)
$1440: $0B34:  
$1441: $F410:  C: if ( >= ) then goto $1444 (<)
$1442: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1443: $02DF:  
-----          L: 
$1444: $940E:  F: CALL $B34 (_ms_posFrameTest)
$1445: $0B34:  
$1446: $F488:  C: if ( >= ) then goto $1458 (>=)
$1447: $2F01:  F: r17 -> r16 (r17 -> r16)
$1448: $940E:  F: CALL $314 (_ssd_Parse_r16)
$1449: $0314:  
$144A: $940E:  F: CALL $6F8 (_print_string_)
$144B: $06F8:  
$144C: $50 $52 $4F $47 $52 $41 $4D $2D $01 $00
$1451: $9100:  F: [$0526] -> r16 (ms_currentProg -> r16)
$1452: $0526:  
$1453: $5C0F:  F: r16 - $CF (r16 + "1")
$1454: $940E:  F: CALL $314 (_ssd_Parse_r16)
$1455: $0314:  
$1456: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1457: $02DF:  
-----          L: 
$1458: $940E:  F: CALL $B34 (_ms_posFrameTest)
$1459: $0B34:  
$145A: $F450:  C: if ( >= ) then goto $1465 (>=)
$145B: $2F01:  F: r17 -> r16 (r17 -> r16)
$145C: $940E:  F: CALL $314 (_ssd_Parse_r16)
$145D: $0314:  
$145E: $940E:  F: CALL $6F8 (_print_string_)
$145F: $06F8:  
$1460: $20 $52 $75 $6E $01 $00
$1463: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1464: $02DF:  
-----          L: 
$1465: $940E:  F: CALL $B34 (_ms_posFrameTest)
$1466: $0B34:  
$1467: $F458:  C: if ( >= ) then goto $1473 (>=)
$1468: $2F01:  F: r17 -> r16 (r17 -> r16)
$1469: $940E:  F: CALL $314 (_ssd_Parse_r16)
$146A: $0314:  
$146B: $940E:  F: CALL $6F8 (_print_string_)
$146C: $06F8:  
$146D: $20 $45 $64 $69 $74 $01 $00 $00
$1471: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1472: $02DF:  
-----          L: 
$1473: $940E:  F: CALL $B34 (_ms_posFrameTest)
$1474: $0B34:  
$1475: $F458:  C: if ( >= ) then goto $1481 (>=)
$1476: $2F01:  F: r17 -> r16 (r17 -> r16)
$1477: $940E:  F: CALL $314 (_ssd_Parse_r16)
$1478: $0314:  
$1479: $940E:  F: CALL $6F8 (_print_string_)
$147A: $06F8:  
$147B: $20 $43 $6C $65 $61 $72 $01 $00
$147F: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1480: $02DF:  
-----          L: 
$1481: $940E:  F: CALL $B34 (_ms_posFrameTest)
$1482: $0B34:  
$1483: $F478:  C: if ( >= ) then goto $1493 (>=)
$1484: $2F01:  F: r17 -> r16 (r17 -> r16)
$1485: $940E:  F: CALL $314 (_ssd_Parse_r16)
$1486: $0314:  
$1487: $940E:  F: CALL $6F8 (_print_string_)
$1488: $06F8:  
$1489: $4D $61 $6E $75 $61 $6C $20 $63 $6F $6E $74 $72 $6F $6C $01 $00
$1491: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1492: $02DF:  
-----          L: 
-----          L: 
$1493: $940E:  F: CALL $B34 (_ms_posFrameTest)
$1494: $0B34:  
$1495: $F410:  C: if ( >= ) then goto $1498 (<)
$1496: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1497: $02DF:  
-----          L: 
$1498: $940E:  F: CALL $B34 (_ms_posFrameTest)
$1499: $0B34:  
$149A: $F458:  C: if ( >= ) then goto $14A6 (>=)
$149B: $940E:  F: CALL $6F8 (_print_string_)
$149C: $06F8:  
$149D: $20 $43 $4F $4E $44 $49 $54 $49 $4F $4E $53 $01 $00 $00
$14A4: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$14A5: $02DF:  
-----          L: 
$14A6: $940E:  F: CALL $B34 (_ms_posFrameTest)
$14A7: $0B34:  
$14A8: $F450:  C: if ( >= ) then goto $14B3 (>=)
$14A9: $2F01:  F: r17 -> r16 (r17 -> r16)
$14AA: $940E:  F: CALL $314 (_ssd_Parse_r16)
$14AB: $0314:  
$14AC: $940E:  F: CALL $6F8 (_print_string_)
$14AD: $06F8:  
$14AE: $20 $52 $75 $6E $01 $00
$14B1: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$14B2: $02DF:  
-----          L: 
$14B3: $940E:  F: CALL $B34 (_ms_posFrameTest)
$14B4: $0B34:  
$14B5: $F458:  C: if ( >= ) then goto $14C1 (>=)
$14B6: $2F01:  F: r17 -> r16 (r17 -> r16)
$14B7: $940E:  F: CALL $314 (_ssd_Parse_r16)
$14B8: $0314:  
$14B9: $940E:  F: CALL $6F8 (_print_string_)
$14BA: $06F8:  
$14BB: $20 $45 $64 $69 $74 $01 $00 $00
$14BF: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$14C0: $02DF:  
-----          L: 
$14C1: $940E:  F: CALL $B34 (_ms_posFrameTest)
$14C2: $0B34:  
$14C3: $F458:  C: if ( >= ) then goto $14CF (>=)
$14C4: $2F01:  F: r17 -> r16 (r17 -> r16)
$14C5: $940E:  F: CALL $314 (_ssd_Parse_r16)
$14C6: $0314:  
$14C7: $940E:  F: CALL $6F8 (_print_string_)
$14C8: $06F8:  
$14C9: $20 $43 $6C $65 $61 $72 $01 $00
$14CD: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$14CE: $02DF:  
-----          L: 
$14CF: $940E:  F: CALL $B34 (_ms_posFrameTest)
$14D0: $0B34:  
$14D1: $F460:  C: if ( >= ) then goto $14DE (>=)
$14D2: $2F01:  F: r17 -> r16 (r17 -> r16)
$14D3: $940E:  F: CALL $314 (_ssd_Parse_r16)
$14D4: $0314:  
$14D5: $940E:  F: CALL $6F8 (_print_string_)
$14D6: $06F8:  
$14D7: $20 $53 $74 $61 $74 $75 $73 $01 $00 $00
$14DC: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$14DD: $02DF:  
-----          L: 
-----          L: 
$14DE: $940E:  F: CALL $B34 (_ms_posFrameTest)
$14DF: $0B34:  
$14E0: $F410:  C: if ( >= ) then goto $14E3 (<)
$14E1: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$14E2: $02DF:  
-----          L: 
$14E3: $940E:  F: CALL $B34 (_ms_posFrameTest)
$14E4: $0B34:  
$14E5: $F590:  C: if ( >= ) then goto $1518 (>=)
$14E6: $2F01:  F: r17 -> r16 (r17 -> r16)
$14E7: $940E:  F: CALL $314 (_ssd_Parse_r16)
$14E8: $0314:  
$14E9: $940E:  F: CALL $6F8 (_print_string_)
$14EA: $06F8:  
$14EB: $41 $46 $54 $45 $52 $20 $52 $45 $53 $45 $54 $3A $20 $01 $00 $00
               C: if (ms_afterReset=0) then goto $14F9 ...
$14F3: $9100:     [$0527] -> r16
$14F4: $0527:  
$14F5: $3000:     r16 = $00
$14F6: $F011:     if (Z=1) then goto $14F9
$14F7: $0000:  F: NOP (NOP)
$14F8: $C006:  J: goto $14FF (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$14F9: $940E:  F: CALL $6F8 (_print_string_)
$14FA: $06F8:  
$14FB: $50 $72 $6F $67 $72 $61 $6D $00
-----          L: 
               C: if (ms_afterReset=1) then goto $1505 ...
$14FF: $9100:     [$0527] -> r16
$1500: $0527:  
$1501: $3001:     r16 = $01
$1502: $F011:     if (Z=1) then goto $1505
$1503: $0000:  F: NOP (NOP)
$1504: $C006:  J: goto $150B (RJMP)
-----          L: 
$1505: $940E:  F: CALL $6F8 (_print_string_)
$1506: $06F8:  
$1507: $43 $6F $6E $64 $69 $74 $2E $00
-----          L: 
               C: if (ms_afterReset=255) then goto $1511 ...
$150B: $9100:     [$0527] -> r16
$150C: $0527:  
$150D: $3F0F:     r16 = $FF
$150E: $F011:     if (Z=1) then goto $1511
$150F: $0000:  F: NOP (NOP)
$1510: $C005:  J: goto $1516 (RJMP)
-----          L: 
$1511: $940E:  F: CALL $6F8 (_print_string_)
$1512: $06F8:  
$1513: $4D $65 $6E $75 $00 $00
-----          L: 
$1516: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1517: $02DF:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Menu.alg    ***********
-----          L: 
-----          L: 
$1518: $940E:  F: CALL $B34 (_ms_posFrameTest)
$1519: $0B34:  
$151A: $F410:  C: if ( >= ) then goto $151D (<)
$151B: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$151C: $02DF:  
$151D: $940E:  F: CALL $B34 (_ms_posFrameTest)
$151E: $0B34:  
$151F: $F410:  C: if ( >= ) then goto $1522 (<)
$1520: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1521: $02DF:  
$1522: $940E:  F: CALL $B34 (_ms_posFrameTest)
$1523: $0B34:  
$1524: $F410:  C: if ( >= ) then goto $1527 (<)
$1525: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1526: $02DF:  
-----          L: 
$1527: $9508:  F: RET (RET)
-----          V: _ms_naviMenu
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $1537 ...
$1528: $9100:     [$010A] -> r16
$1529: $010A:  
$152A: $3001:     r16 = $01
$152B: $F059:     if (Z=1) then goto $1537
               C: if (ms_posMenu < 12) then goto $1535 ...
$152C: $9100:     [$074A] -> r16
$152D: $074A:  
$152E: $300C:     r16 = $0C
$152F: $F428:     if ( >= ) then goto $1535
               F: ms_posMenu++  ...
$1530: $9100:     [$074A] -> r16
$1531: $074A:  
$1532: $9503:     r16 ++
$1533: $9300:     r16 -> [$074A]
$1534: $074A:  
$1535: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1536: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posMenu >= 1) then goto $1540 ...
$1537: $9100:     [$074A] -> r16
$1538: $074A:  
$1539: $3001:     r16 = $01
$153A: $F028:     if ( < ) then goto $1540
               F: ms_posMenu--  ...
$153B: $9100:     [$074A] -> r16
$153C: $074A:  
$153D: $950A:     r16 --
$153E: $9300:     r16 -> [$074A]
$153F: $074A:  
$1540: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1541: $9508:  F: RET (RET)
-----          V: _ms_clickMenu
-----          L: 
$1542: $9100:  F: [$074A] -> r16 (ms_posMenu -> r16)
$1543: $074A:  
-----          L: 
               C: if (r16 -= 0) then goto $1566 ...
$1544: $3000:     r16 = $00
$1545: $F501:     if (Z=0) then goto $1566
$1546: $9100:  F: [$0526] -> r16 (ms_currentProg -> r16)
$1547: $0526:  
$1548: $9503:  F: r16 ++ (r16++)
               C: if (r16 >= 3) then goto $154C ...
$1549: $3003:     r16 = $03
$154A: $F008:     if ( < ) then goto $154C
$154B: $E000:  F: $00 -> r16 (0 -> r16)
$154C: $9300:  F: r16 -> [$0526] (r16 -> ms_currentProg)
$154D: $0526:  
               F: r16 -> ee_ms_currentProg  ...
$154E: $E014:     $04 -> r17
$154F: $BD11:     r17 -> p$21
$1550: $E010:     $00 -> r17
$1551: $BD12:     r17 -> p$22
$1552: $BD00:     r16 -> p$20
$1553: $9AFA:     1 -> p$1F.2
$1554: $9AF9:     1 -> p$1F.1
$1555: $99F9:     if (p$1F.1=0 then SKIP
$1556: $CFFE:     goto $1555 (RJMP)
$1557: $940E:  F: CALL $839 (_ms_eeRestore)
$1558: $0839:  
$1559: $940E:  F: CALL $88B (_ms_message_)
$155A: $088B:  
$155B: $20 $2A $20 $6E $65 $77 $20 $70 $72 $6F $67 $72 $61 $6D $20 $73
$1563: $65 $74 $00 $00
$1565: $9508:  F: RET (RET)
-----          L: 
               C: if (r16 -= 1) then goto $1573 ...
$1566: $3001:     r16 = $01
$1567: $F459:     if (Z=0) then goto $1573
$1568: $940E:  F: CALL $839 (_ms_eeRestore)
$1569: $0839:  
               F: 0 -> ms_pauseOnceCycle  ...
$156A: $E000:     $00 -> r16
$156B: $9300:     r16 -> [$0755]
$156C: $0755:  
               F: MS_MODE_WORK_CYCLE -> ms_mode  ...
$156D: $E003:     $03 -> r16
$156E: $9300:     r16 -> [$0528]
$156F: $0528:  
$1570: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1571: $6038:  F: r19 ! $08 (1 -> f_resetAllRelay)
$1572: $9508:  F: RET (RET)
-----          L: 
               C: if (r16 -= 2) then goto $157D ...
$1573: $3002:     r16 = $02
$1574: $F441:     if (Z=0) then goto $157D
$1575: $940E:  F: CALL $839 (_ms_eeRestore)
$1576: $0839:  
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$1577: $E001:     $01 -> r16
$1578: $9300:     r16 -> [$0528]
$1579: $0528:  
$157A: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$157B: $6038:  F: r19 ! $08 (1 -> f_resetAllRelay)
$157C: $9508:  F: RET (RET)
-----          L: 
               C: if (r16 -= 3) then goto $159C ...
$157D: $3003:     r16 = $03
$157E: $F4E9:     if (Z=0) then goto $159C
               F: Y ->  ...
$157F: $93CF:     r28 ->
$1580: $93DF:     r29 ->
               F: @ms_objTable -> Y  ...
$1581: $E4C8:     $48 -> r28
$1582: $E0D5:     $05 -> r29
$1583: $940E:  F: CALL $BDE (_ms_do_objBlank)
$1584: $0BDE:  
               F: MS_TYPE_LIST_END -> [Y + MS_OBJ_TYPE + MS_OBJ_SIZE]  ...
$1585: $EF0F:     $FF -> r16
$1586: $8B08:     r16 -> [Y+$10]
               F: -> Y  ...
$1587: $91DF:     -> r29
$1588: $91CF:     -> r28
               F: 0 -> ms_posManual  ...
$1589: $E000:     $00 -> r16
$158A: $9300:     r16 -> [$074E]
$158B: $074E:  
               F: 0 -> ms_posBuild  ...
$158C: $9300:     r16 -> [$074B]
$158D: $074B:  
$158E: $940E:  F: CALL $AF5 (_ms_eeSave)
$158F: $0AF5:  
$1590: $940E:  F: CALL $88B (_ms_message_)
$1591: $088B:  
$1592: $20 $2A $20 $70 $72 $6F $67 $72 $61 $6D $20 $63 $6C $65 $61 $72
$159A: $65 $64 $00 $00
-----          L: 
               C: if (r16 -= 4) then goto $15A3 ...
$159C: $3004:     r16 = $04
$159D: $F429:     if (Z=0) then goto $15A3
               F: MS_MODE_STOP_MANUAL -> ms_mode  ...
$159E: $E002:     $02 -> r16
$159F: $9300:     r16 -> [$0528]
$15A0: $0528:  
$15A1: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$15A2: $9508:  F: RET (RET)
-----          L: 
-----          L: 
               C: if (r16 -= 7) then goto $15AD ...
$15A3: $3007:     r16 = $07
$15A4: $F441:     if (Z=0) then goto $15AD
               F: 0 -> ms_posConditionsClick  ...
$15A5: $E000:     $00 -> r16
$15A6: $9300:     r16 -> [$0754]
$15A7: $0754:  
               F: MS_MODE_CONDITIONS_WORK -> ms_mode  ...
$15A8: $E008:     $08 -> r16
$15A9: $9300:     r16 -> [$0528]
$15AA: $0528:  
$15AB: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$15AC: $9508:  F: RET (RET)
-----          L: 
               C: if (r16 -= 8) then goto $15B4 ...
$15AD: $3008:     r16 = $08
$15AE: $F429:     if (Z=0) then goto $15B4
               F: MS_MODE_CONDITIONS_EDIT -> ms_mode  ...
$15AF: $E009:     $09 -> r16
$15B0: $9300:     r16 -> [$0528]
$15B1: $0528:  
$15B2: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$15B3: $9508:  F: RET (RET)
-----          L: 
               C: if (r16 -= 9) then goto $15C5 ...
$15B4: $3009:     r16 = $09
$15B5: $F479:     if (Z=0) then goto $15C5
$15B6: $D032:  F: rcall $15E9 (_ms_clearConditions)
$15B7: $940E:  F: CALL $88B (_ms_message_)
$15B8: $088B:  
$15B9: $20 $2A $20 $63 $6F $6E $64 $69 $74 $69 $6F $6E $73 $20 $63 $6C
$15C1: $65 $61 $72 $65 $64 $00
$15C4: $9508:  F: RET (RET)
-----          L: 
               C: if (r16 -= 10) then goto $15CC ...
$15C5: $300A:     r16 = $0A
$15C6: $F429:     if (Z=0) then goto $15CC
               F: MS_MODE_SOURCES_VIEWER -> ms_mode  ...
$15C7: $E007:     $07 -> r16
$15C8: $9300:     r16 -> [$0528]
$15C9: $0528:  
$15CA: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$15CB: $9508:  F: RET (RET)
-----          L: 
-----          L: 
               C: if (r16 -= 12) then goto $15E8 ...
$15CC: $300C:     r16 = $0C
$15CD: $F4D1:     if (Z=0) then goto $15E8
$15CE: $EF1F:  F: $FF -> r17 (255 -> r17)
               C: if (ms_afterReset = 0) then goto $15D4 ...
$15CF: $9100:     [$0527] -> r16
$15D0: $0527:  
$15D1: $3000:     r16 = $00
$15D2: $F409:     if (Z=0) then goto $15D4
$15D3: $E011:  F: $01 -> r17 (1 -> r17)
               C: if (ms_afterReset = 255) then goto $15D9 ...
$15D4: $9100:     [$0527] -> r16
$15D5: $0527:  
$15D6: $3F0F:     r16 = $FF
$15D7: $F409:     if (Z=0) then goto $15D9
$15D8: $E010:  F: $00 -> r17 (0 -> r17)
$15D9: $9310:  F: r17 -> [$0527] (r17 -> ms_afterReset)
$15DA: $0527:  
               F: ms_afterReset -> ee_ms_afterReset  ...
$15DB: $9100:     [$0527] -> r16
$15DC: $0527:  
$15DD: $E013:     $03 -> r17
$15DE: $BD11:     r17 -> p$21
$15DF: $E010:     $00 -> r17
$15E0: $BD12:     r17 -> p$22
$15E1: $BD00:     r16 -> p$20
$15E2: $9AFA:     1 -> p$1F.2
$15E3: $9AF9:     1 -> p$1F.1
$15E4: $99F9:     if (p$1F.1=0 then SKIP
$15E5: $CFFE:     goto $15E4 (RJMP)
$15E6: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$15E7: $9508:  F: RET (RET)
-----          L: 
$15E8: $9508:  F: RET (RET)
-----          V: _ms_clearConditions
               F: 255 -> ee_ms_sourseProg1  ...
$15E9: $EF0F:     $FF -> r16
$15EA: $E615:     $65 -> r17
$15EB: $BD11:     r17 -> p$21
$15EC: $E013:     $03 -> r17
$15ED: $BD12:     r17 -> p$22
$15EE: $BD00:     r16 -> p$20
$15EF: $9AFA:     1 -> p$1F.2
$15F0: $9AF9:     1 -> p$1F.1
$15F1: $99F9:     if (p$1F.1=0 then SKIP
$15F2: $CFFE:     goto $15F1 (RJMP)
               F: 20 -> ee_ms_sourseProg1_down  ...
$15F3: $E104:     $14 -> r16
$15F4: $E617:     $67 -> r17
$15F5: $BD11:     r17 -> p$21
$15F6: $E013:     $03 -> r17
$15F7: $BD12:     r17 -> p$22
$15F8: $BD00:     r16 -> p$20
$15F9: $9AFA:     1 -> p$1F.2
$15FA: $9AF9:     1 -> p$1F.1
$15FB: $99F9:     if (p$1F.1=0 then SKIP
$15FC: $CFFE:     goto $15FB (RJMP)
               F: 20 -> ee_ms_sourseProg1_up  ...
$15FD: $E104:     $14 -> r16
$15FE: $E616:     $66 -> r17
$15FF: $BD11:     r17 -> p$21
$1600: $E013:     $03 -> r17
$1601: $BD12:     r17 -> p$22
$1602: $BD00:     r16 -> p$20
$1603: $9AFA:     1 -> p$1F.2
$1604: $9AF9:     1 -> p$1F.1
$1605: $99F9:     if (p$1F.1=0 then SKIP
$1606: $CFFE:     goto $1605 (RJMP)
               F: 255 -> ee_ms_sourseProg2  ...
$1607: $EF0F:     $FF -> r16
$1608: $E618:     $68 -> r17
$1609: $BD11:     r17 -> p$21
$160A: $E013:     $03 -> r17
$160B: $BD12:     r17 -> p$22
$160C: $BD00:     r16 -> p$20
$160D: $9AFA:     1 -> p$1F.2
$160E: $9AF9:     1 -> p$1F.1
$160F: $99F9:     if (p$1F.1=0 then SKIP
$1610: $CFFE:     goto $160F (RJMP)
               F: 20 -> ee_ms_sourseProg2_down  ...
$1611: $E104:     $14 -> r16
$1612: $E61A:     $6A -> r17
$1613: $BD11:     r17 -> p$21
$1614: $E013:     $03 -> r17
$1615: $BD12:     r17 -> p$22
$1616: $BD00:     r16 -> p$20
$1617: $9AFA:     1 -> p$1F.2
$1618: $9AF9:     1 -> p$1F.1
$1619: $99F9:     if (p$1F.1=0 then SKIP
$161A: $CFFE:     goto $1619 (RJMP)
               F: 20 -> ee_ms_sourseProg2_up  ...
$161B: $E104:     $14 -> r16
$161C: $E619:     $69 -> r17
$161D: $BD11:     r17 -> p$21
$161E: $E013:     $03 -> r17
$161F: $BD12:     r17 -> p$22
$1620: $BD00:     r16 -> p$20
$1621: $9AFA:     1 -> p$1F.2
$1622: $9AF9:     1 -> p$1F.1
$1623: $99F9:     if (p$1F.1=0 then SKIP
$1624: $CFFE:     goto $1623 (RJMP)
               F: 255 -> ee_ms_sourseProg3  ...
$1625: $EF0F:     $FF -> r16
$1626: $E61B:     $6B -> r17
$1627: $BD11:     r17 -> p$21
$1628: $E013:     $03 -> r17
$1629: $BD12:     r17 -> p$22
$162A: $BD00:     r16 -> p$20
$162B: $9AFA:     1 -> p$1F.2
$162C: $9AF9:     1 -> p$1F.1
$162D: $99F9:     if (p$1F.1=0 then SKIP
$162E: $CFFE:     goto $162D (RJMP)
               F: 20 -> ee_ms_sourseProg3_down  ...
$162F: $E104:     $14 -> r16
$1630: $E61D:     $6D -> r17
$1631: $BD11:     r17 -> p$21
$1632: $E013:     $03 -> r17
$1633: $BD12:     r17 -> p$22
$1634: $BD00:     r16 -> p$20
$1635: $9AFA:     1 -> p$1F.2
$1636: $9AF9:     1 -> p$1F.1
$1637: $99F9:     if (p$1F.1=0 then SKIP
$1638: $CFFE:     goto $1637 (RJMP)
               F: 20 -> ee_ms_sourseProg3_up  ...
$1639: $E104:     $14 -> r16
$163A: $E61C:     $6C -> r17
$163B: $BD11:     r17 -> p$21
$163C: $E013:     $03 -> r17
$163D: $BD12:     r17 -> p$22
$163E: $BD00:     r16 -> p$20
$163F: $9AFA:     1 -> p$1F.2
$1640: $9AF9:     1 -> p$1F.1
$1641: $99F9:     if (p$1F.1=0 then SKIP
$1642: $CFFE:     goto $1641 (RJMP)
$1643: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Edit.alg    ***********
-----          V: _ms_visBuild
               F: Y ->  ...
$1644: $93CF:     r28 ->
$1645: $93DF:     r29 ->
-----          L: 
$1646: $940E:  F: CALL $87F (_ms_printMessage)
$1647: $087F:  
-----          L: 
$1648: $940E:  F: CALL $6F8 (_print_string_)
$1649: $06F8:  
$164A: $45 $44 $49 $54 $20 $50 $52 $4F $47 $52 $41 $4D $2D $01 $00 $00
$1652: $9100:  F: [$0526] -> r16 (ms_currentProg -> r16)
$1653: $0526:  
$1654: $5C0F:  F: r16 - $CF (r16 + "1")
$1655: $940E:  F: CALL $314 (_ssd_Parse_r16)
$1656: $0314:  
$1657: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1658: $02DF:  
-----          L: _ms_visBuild_in
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$1659: $E3C8:     $38 -> r28
$165A: $E0D5:     $05 -> r29
               F: -1 -> ms_posFrame  ...
$165B: $EF0F:     $FF -> r16
$165C: $9300:     r16 -> [$074F]
$165D: $074F:  
               F: -1 -> ms_objCurrentScan  ...
$165E: $9300:     r16 -> [$0749]
$165F: $0749:  
-----          L: 
               F: ms_posFrame++  ...
$1660: $9100:     [$074F] -> r16
$1661: $074F:  
$1662: $9503:     r16 ++
$1663: $9300:     r16 -> [$074F]
$1664: $074F:  
-----          L: 
               F: ms_objCurrentScan++  ...
$1665: $9100:     [$0749] -> r16
$1666: $0749:  
$1667: $9503:     r16 ++
$1668: $9300:     r16 -> [$0749]
$1669: $0749:  
-----          L: 
$166A: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if (ms_posFrame >= 6) then goto $16C4 ...
$166B: $9100:     [$074F] -> r16
$166C: $074F:  
$166D: $3006:     r16 = $06
$166E: $F008:     if ( < ) then goto $1670
$166F: $C054:     goto $16C4 (RJMP)
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $16C4 ...
$1670: $8108:     [Y+$00] -> r 16
$1671: $3F0F:     r16 = $FF
$1672: $F409:     if (Z=0) then goto $1674
$1673: $C050:     goto $16C4 (RJMP)
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $166A ...
$1674: $8108:     [Y+$00] -> r 16
$1675: $3001:     r16 = $01
$1676: $F799:     if (Z=0) then goto $166A
-----          L: 
$1677: $9100:  F: [$0749] -> r16 (ms_objCurrentScan -> r16)
$1678: $0749:  
$1679: $5F0E:  F: r16 - $FE (r16 + 2)
               F: r16 - ms_posBuild  ...
$167A: $9110:     [$074B] -> r17
$167B: $074B:  
$167C: $1B01:     r16 - r17
               C: if (r16 >= 6) then goto $1665 ...
$167D: $3006:     r16 = $06
$167E: $F730:     if ( >= ) then goto $1665
-----          L: 
-----          L: 
$167F: $9100:  F: [$074F] -> r16 (ms_posFrame -> r16)
$1680: $074F:  
               F: r16 + ms_posBuild  ...
$1681: $9110:     [$074B] -> r17
$1682: $074B:  
$1683: $0F01:     r16 + r17
               C: if (r16 >= 2) then goto $168E ...
$1684: $3002:     r16 = $02
$1685: $F440:     if ( >= ) then goto $168E
$1686: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1687: $02DF:  
               F: ms_posFrame++  ...
$1688: $9100:     [$074F] -> r16
$1689: $074F:  
$168A: $9503:     r16 ++
$168B: $9300:     r16 -> [$074F]
$168C: $074F:  
$168D: $CFF1:  J: goto $167F (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_mode = MS_MODE_STOP_BUILD_ACTION_MOVE) then goto $169E ...
$168E: $9100:     [$0528] -> r16
$168F: $0528:  
$1690: $3606:     r16 = $66
$1691: $F061:     if (Z=1) then goto $169E
               C: if (ms_posFrame=2) then goto $169A ...
$1692: $9100:     [$074F] -> r16
$1693: $074F:  
$1694: $3002:     r16 = $02
$1695: $F021:     if (Z=1) then goto $169A
$1696: $940E:  F: CALL $6F8 (_print_string_)
$1697: $06F8:  
$1698: $20 $00
$1699: $C003:  J: goto $169D (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$169A: $940E:  F: CALL $6F8 (_print_string_)
$169B: $06F8:  
$169C: $3E $00
-----          L: 
$169D: $C00B:  J: goto $16A9 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Edit.alg    ***********
-----          L: 
               C: if (ms_posFrame=2) then goto $16A6 ...
$169E: $9100:     [$074F] -> r16
$169F: $074F:  
$16A0: $3002:     r16 = $02
$16A1: $F021:     if (Z=1) then goto $16A6
$16A2: $940E:  F: CALL $6F8 (_print_string_)
$16A3: $06F8:  
$16A4: $20 $00
$16A5: $C003:  J: goto $16A9 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$16A6: $940E:  F: CALL $6F8 (_print_string_)
$16A7: $06F8:  
$16A8: $3D $00
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Edit.alg    ***********
-----          L: 
-----          L: 
$16A9: $940E:  F: CALL $9FE (_ms_printAddress)
$16AA: $09FE:  
-----          L: 
$16AB: $940E:  F: CALL $A36 (_ms_printKey)
$16AC: $0A36:  
-----          L: 
$16AD: $940E:  F: CALL $A6B (_ms_printIdle_m)
$16AE: $0A6B:  
$16AF: $940E:  F: CALL $6F8 (_print_string_)
$16B0: $06F8:  
$16B1: $3A $00
$16B2: $940E:  F: CALL $A41 (_ms_printIdle_s)
$16B3: $0A41:  
$16B4: $940E:  F: CALL $6F8 (_print_string_)
$16B5: $06F8:  
$16B6: $20 $00
-----          L: 
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $16C1 ...
$16B7: $8109:     [Y+$01] -> r 16
$16B8: $3000:     r16 = $00
$16B9: $F039:     if (Z=1) then goto $16C1
$16BA: $940E:  F: CALL $A93 (_ms_printWork_m)
$16BB: $0A93:  
$16BC: $940E:  F: CALL $6F8 (_print_string_)
$16BD: $06F8:  
$16BE: $3A $00
$16BF: $940E:  F: CALL $A7F (_ms_printWork_s)
$16C0: $0A7F:  
-----          L: 
-----          L: 
$16C1: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$16C2: $02DF:  
$16C3: $CF9C:  J: goto $1660 (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_posFrame >= 6) then goto $16D0 ...
$16C4: $9100:     [$074F] -> r16
$16C5: $074F:  
$16C6: $3006:     r16 = $06
$16C7: $F440:     if ( >= ) then goto $16D0
$16C8: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$16C9: $02DF:  
               F: ms_posFrame++  ...
$16CA: $9100:     [$074F] -> r16
$16CB: $074F:  
$16CC: $9503:     r16 ++
$16CD: $9300:     r16 -> [$074F]
$16CE: $074F:  
$16CF: $CFF4:  J: goto $16C4 (RJMP)
-----          L: 
-----          L: 
               F: -> Y  ...
$16D0: $91DF:     -> r29
$16D1: $91CF:     -> r28
$16D2: $9508:  F: RET (RET)
-----          V: _ms_naviBuild
$16D3: $940E:  F: CALL $B70 (_ms_get_visAllObjNumber)
$16D4: $0B70:  
               C: if (ms_objNumber -= 0) then goto $16DE ...
$16D5: $9100:     [$0748] -> r16
$16D6: $0748:  
$16D7: $3000:     r16 = $00
$16D8: $F029:     if (Z=1) then goto $16DE
               F: ms_objNumber--  ...
$16D9: $9100:     [$0748] -> r16
$16DA: $0748:  
$16DB: $950A:     r16 --
$16DC: $9300:     r16 -> [$0748]
$16DD: $0748:  
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $16EF ...
$16DE: $9100:     [$010A] -> r16
$16DF: $010A:  
$16E0: $3001:     r16 = $01
$16E1: $F069:     if (Z=1) then goto $16EF
               C: if (ms_posBuild < ms_objNumber) then goto $16ED ...
$16E2: $9100:     [$074B] -> r16
$16E3: $074B:  
$16E4: $9110:     [$0748] -> r17
$16E5: $0748:  
$16E6: $1701:     r16 = r17
$16E7: $F428:     if ( >= ) then goto $16ED
               F: ms_posBuild++  ...
$16E8: $9100:     [$074B] -> r16
$16E9: $074B:  
$16EA: $9503:     r16 ++
$16EB: $9300:     r16 -> [$074B]
$16EC: $074B:  
-----          L: 
$16ED: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$16EE: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posBuild >= 1) then goto $16F8 ...
$16EF: $9100:     [$074B] -> r16
$16F0: $074B:  
$16F1: $3001:     r16 = $01
$16F2: $F028:     if ( < ) then goto $16F8
               F: ms_posBuild--  ...
$16F3: $9100:     [$074B] -> r16
$16F4: $074B:  
$16F5: $950A:     r16 --
$16F6: $9300:     r16 -> [$074B]
$16F7: $074B:  
$16F8: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$16F9: $9508:  F: RET (RET)
-----          V: _ms_clickBuild
-----          L: 
               F: 0 -> ms_posBuildAction  ...
$16FA: $E000:     $00 -> r16
$16FB: $9300:     r16 -> [$074C]
$16FC: $074C:  
               F: MS_MODE_STOP_BUILD_ACTION -> ms_mode  ...
$16FD: $E00A:     $0A -> r16
$16FE: $9300:     r16 -> [$0528]
$16FF: $0528:  
$1700: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$1701: $9508:  F: RET (RET)
-----          V: _ms_visBuildAction
-----          L: 
$1702: $940E:  F: CALL $87F (_ms_printMessage)
$1703: $087F:  
-----          L: 
$1704: $940E:  F: CALL $6F8 (_print_string_)
$1705: $06F8:  
$1706: $53 $45 $4C $45 $43 $54 $20 $41 $43 $54 $49 $4F $4E $01 $00 $00
$170E: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$170F: $02DF:  
-----          L: 
$1710: $E000:  F: $00 -> r16 (0 -> r16)
$1711: $E014:  F: $04 -> r17 (4 -> r17)
$1712: $940E:  F: CALL $2EC (_ssd_Pos_)
$1713: $02EC:  
$1714: $9100:  F: [$074C] -> r16 (ms_posBuildAction -> r16)
$1715: $074C:  
               C: if (r16 -= 0) then goto $1724 ...
$1716: $3000:     r16 = $00
$1717: $F461:     if (Z=0) then goto $1724
$1718: $940E:  F: CALL $6F8 (_print_string_)
$1719: $06F8:  
$171A: $20 $20 $20 $20 $20 $20 $45 $64 $69 $74 $20 $2E $2E $2E $2E $01
$1722: $00 $00
$1723: $C037:  J: goto $175B (RJMP)
-----          L: 
               C: if (r16 -= 1) then goto $1732 ...
$1724: $3001:     r16 = $01
$1725: $F461:     if (Z=0) then goto $1732
$1726: $940E:  F: CALL $6F8 (_print_string_)
$1727: $06F8:  
$1728: $20 $20 $20 $20 $20 $2E $20 $44 $65 $6C $20 $20 $2E $2E $2E $01
$1730: $00 $00
$1731: $C029:  J: goto $175B (RJMP)
-----          L: 
               C: if (r16 -= 2) then goto $1740 ...
$1732: $3002:     r16 = $02
$1733: $F461:     if (Z=0) then goto $1740
$1734: $940E:  F: CALL $6F8 (_print_string_)
$1735: $06F8:  
$1736: $20 $20 $20 $20 $20 $2E $2E $20 $4D $6F $76 $65 $20 $2E $2E $01
$173E: $00 $00
$173F: $C01B:  J: goto $175B (RJMP)
-----          L: 
               C: if (r16 -= 3) then goto $174E ...
$1740: $3003:     r16 = $03
$1741: $F461:     if (Z=0) then goto $174E
$1742: $940E:  F: CALL $6F8 (_print_string_)
$1743: $06F8:  
$1744: $20 $20 $20 $20 $20 $2E $2E $2E $20 $41 $64 $64 $20 $20 $2E $01
$174C: $00 $00
$174D: $C00D:  J: goto $175B (RJMP)
-----          L: 
               C: if (r16 -= 4) then goto $175B ...
$174E: $3004:     r16 = $04
$174F: $F459:     if (Z=0) then goto $175B
$1750: $940E:  F: CALL $6F8 (_print_string_)
$1751: $06F8:  
$1752: $20 $20 $20 $20 $20 $2E $2E $2E $2E $20 $42 $61 $63 $6B $01 $00
$175A: $C000:  J: goto $175B (RJMP)
-----          L: 
-----          L: 
-----          L: _ms_visBuildAction_end
$175B: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$175C: $02DF:  
-----          L: 
$175D: $9508:  F: RET (RET)
-----          V: _ms_naviBuildAction
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $176D ...
$175E: $9100:     [$010A] -> r16
$175F: $010A:  
$1760: $3001:     r16 = $01
$1761: $F059:     if (Z=1) then goto $176D
               C: if (ms_posBuildAction < 4) then goto $176B ...
$1762: $9100:     [$074C] -> r16
$1763: $074C:  
$1764: $3004:     r16 = $04
$1765: $F428:     if ( >= ) then goto $176B
               F: ms_posBuildAction++  ...
$1766: $9100:     [$074C] -> r16
$1767: $074C:  
$1768: $9503:     r16 ++
$1769: $9300:     r16 -> [$074C]
$176A: $074C:  
$176B: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$176C: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posBuildAction >= 1) then goto $1776 ...
$176D: $9100:     [$074C] -> r16
$176E: $074C:  
$176F: $3001:     r16 = $01
$1770: $F028:     if ( < ) then goto $1776
               F: ms_posBuildAction--  ...
$1771: $9100:     [$074C] -> r16
$1772: $074C:  
$1773: $950A:     r16 --
$1774: $9300:     r16 -> [$074C]
$1775: $074C:  
$1776: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1777: $9508:  F: RET (RET)
-----          V: _ms_clickBuildAction
               F: Y ->  ...
$1778: $93CF:     r28 ->
$1779: $93DF:     r29 ->
$177A: $940E:  F: CALL $B87 (_ms_get_ObjPointerY)
$177B: $0B87:  
-----          L: 
$177C: $9100:  F: [$074C] -> r16 (ms_posBuildAction -> r16)
$177D: $074C:  
               C: if (r16 -= 0) then goto $1788 ...
$177E: $3000:     r16 = $00
$177F: $F441:     if (Z=0) then goto $1788
               F: 0 -> ms_posBuildActionEdit  ...
$1780: $E000:     $00 -> r16
$1781: $9300:     r16 -> [$074D]
$1782: $074D:  
               F: MS_MODE_STOP_BUILD_ACTION_EDIT -> ms_mode  ...
$1783: $E604:     $64 -> r16
$1784: $9300:     r16 -> [$0528]
$1785: $0528:  
$1786: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1787: $C053:  J: goto $17DB (RJMP)
-----          L: 
               C: if (r16 -= 1) then goto $17A1 ...
$1788: $3001:     r16 = $01
$1789: $F4B9:     if (Z=0) then goto $17A1
$178A: $940E:  F: CALL $B9F (_ms_do_ObjNumberTest)
$178B: $0B9F:  
               C: if (ms_objNumber < 2) then goto $179C ...
$178C: $9100:     [$0748] -> r16
$178D: $0748:  
$178E: $3002:     r16 = $02
$178F: $F060:     if ( < ) then goto $179C
               C: if ([Y+MS_OBJ_TYPE + MS_OBJ_SIZE] -= MS_TYPE_LIST_END) then goto $1798 ...
$1790: $8908:     [Y+$10] -> r 16
$1791: $3F0F:     r16 = $FF
$1792: $F429:     if (Z=0) then goto $1798
               F: ms_posBuild--  ...
$1793: $9100:     [$074B] -> r16
$1794: $074B:  
$1795: $950A:     r16 --
$1796: $9300:     r16 -> [$074B]
$1797: $074B:  
-----          L: 
               F: MS_TYPE_NUL -> [Y+MS_OBJ_TYPE]  ...
$1798: $E000:     $00 -> r16
$1799: $8308:     r16 -> [Y+$00]
$179A: $940E:  F: CALL $BC7 (_ms_do_ObjClean)
$179B: $0BC7:  
-----          L: 
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$179C: $E001:     $01 -> r16
$179D: $9300:     r16 -> [$0528]
$179E: $0528:  
$179F: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$17A0: $C03A:  J: goto $17DB (RJMP)
-----          L: 
               C: if (r16 -= 2) then goto $17A8 ...
$17A1: $3002:     r16 = $02
$17A2: $F429:     if (Z=0) then goto $17A8
               F: MS_MODE_STOP_BUILD_ACTION_MOVE -> ms_mode  ...
$17A3: $E606:     $66 -> r16
$17A4: $9300:     r16 -> [$0528]
$17A5: $0528:  
$17A6: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$17A7: $C033:  J: goto $17DB (RJMP)
-----          L: 
               C: if (r16 -= 3) then goto $17D4 ...
$17A8: $3003:     r16 = $03
$17A9: $F551:     if (Z=0) then goto $17D4
$17AA: $940E:  F: CALL $BB3 (_ms_do_ObjTest)
$17AB: $0BB3:  
               C: if (ms_objNumber = 0) then goto $17C3 ...
$17AC: $9100:     [$0748] -> r16
$17AD: $0748:  
$17AE: $3000:     r16 = $00
$17AF: $F099:     if (Z=1) then goto $17C3
$17B0: $940E:  F: CALL $BEF (_ms_do_ObjSpace)
$17B1: $0BEF:  
$17B2: $940E:  F: CALL $BDE (_ms_do_ObjBlank)
$17B3: $0BDE:  
               F: ms_posBuild++  ...
$17B4: $9100:     [$074B] -> r16
$17B5: $074B:  
$17B6: $9503:     r16 ++
$17B7: $9300:     r16 -> [$074B]
$17B8: $074B:  
-----          L: 
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$17B9: $E001:     $01 -> r16
$17BA: $9300:     r16 -> [$0528]
$17BB: $0528:  
$17BC: $6031:  F: r19 ! $01 (1 -> f_displayVis)
               F: 100/STIMER_PERIOD_CALL -> [@STimer_Counter + DO_EDIT]  ...
$17BD: $E00A:     $0A -> r16
$17BE: $9300:     r16 -> [$0518]
$17BF: $0518:  
               F: 100/STIMER_PERIOD_CALL -> [@STimer_Counter_Stop + DO_EDIT]  ...
$17C0: $9300:     r16 -> [$051C]
$17C1: $051C:  
$17C2: $C018:  J: goto $17DB (RJMP)
-----          L: 
$17C3: $940E:  F: CALL $88B (_ms_message_)
$17C4: $088B:  
$17C5: $20 $2A $20 $6E $6F $74 $20 $61 $64 $64 $65 $64 $20 $2D $20 $66
$17CD: $75 $6C $6C $00
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$17CF: $E001:     $01 -> r16
$17D0: $9300:     r16 -> [$0528]
$17D1: $0528:  
$17D2: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$17D3: $C007:  J: goto $17DB (RJMP)
-----          L: 
               C: if (r16 -= 4) then goto $17DB ...
$17D4: $3004:     r16 = $04
$17D5: $F429:     if (Z=0) then goto $17DB
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$17D6: $E001:     $01 -> r16
$17D7: $9300:     r16 -> [$0528]
$17D8: $0528:  
$17D9: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$17DA: $C000:  J: goto $17DB (RJMP)
-----          L: 
-----          L: _ms_clickBuildAction_end
               F: -> Y  ...
$17DB: $91DF:     -> r29
$17DC: $91CF:     -> r28
$17DD: $9508:  F: RET (RET)
-----          V: _ms_visBuildActionEdit
               F: Y ->  ...
$17DE: $93CF:     r28 ->
$17DF: $93DF:     r29 ->
$17E0: $940E:  F: CALL $B87 (_ms_get_ObjPointerY)
$17E1: $0B87:  
-----          L: 
$17E2: $940E:  F: CALL $87F (_ms_printMessage)
$17E3: $087F:  
-----          L: 
$17E4: $940E:  F: CALL $6F8 (_print_string_)
$17E5: $06F8:  
$17E6: $45 $44 $49 $54 $20 $4C $49 $4E $45 $01 $00 $00
$17EC: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$17ED: $02DF:  
-----          L: 
$17EE: $E000:  F: $00 -> r16 (0 -> r16)
$17EF: $E014:  F: $04 -> r17 (4 -> r17)
$17F0: $940E:  F: CALL $2EC (_ssd_Pos_)
$17F1: $02EC:  
               C: if (ms_blink-=0) then goto $17FB ...
$17F2: $9100:     [$052A] -> r16
$17F3: $052A:  
$17F4: $3000:     r16 = $00
$17F5: $F429:     if (Z=0) then goto $17FB
$17F6: $940E:  F: CALL $6F8 (_print_string_)
$17F7: $06F8:  
$17F8: $6F $01 $00 $00
$17FA: $C004:  J: goto $17FF (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$17FB: $940E:  F: CALL $6F8 (_print_string_)
$17FC: $06F8:  
$17FD: $2E $01 $00 $00
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Edit.alg    ***********
-----          L: 
               C: if (ms_blink -= 0) then goto $180A ...
$17FF: $9100:     [$052A] -> r16
$1800: $052A:  
$1801: $3000:     r16 = $00
$1802: $F439:     if (Z=0) then goto $180A
               C: if (ms_posBuildActionEdit = 0) then goto $180A ...
$1803: $9100:     [$074D] -> r16
$1804: $074D:  
$1805: $3000:     r16 = $00
$1806: $F419:     if (Z=0) then goto $180A
$1807: $940E:  F: CALL $6F8 (_print_string_)
$1808: $06F8:  
$1809: $03 $00
-----          L: 
$180A: $940E:  F: CALL $9FE (_ms_printAddress)
$180B: $09FE:  
-----          L: 
               C: if (ms_blink -= 0) then goto $1817 ...
$180C: $9100:     [$052A] -> r16
$180D: $052A:  
$180E: $3000:     r16 = $00
$180F: $F439:     if (Z=0) then goto $1817
               C: if (ms_posBuildActionEdit = 1) then goto $1817 ...
$1810: $9100:     [$074D] -> r16
$1811: $074D:  
$1812: $3001:     r16 = $01
$1813: $F419:     if (Z=0) then goto $1817
$1814: $940E:  F: CALL $6F8 (_print_string_)
$1815: $06F8:  
$1816: $03 $00
-----          L: 
$1817: $940E:  F: CALL $A36 (_ms_printKey)
$1818: $0A36:  
-----          L: 
               C: if (ms_blink -= 0) then goto $1824 ...
$1819: $9100:     [$052A] -> r16
$181A: $052A:  
$181B: $3000:     r16 = $00
$181C: $F439:     if (Z=0) then goto $1824
               C: if (ms_posBuildActionEdit = 2) then goto $1824 ...
$181D: $9100:     [$074D] -> r16
$181E: $074D:  
$181F: $3002:     r16 = $02
$1820: $F419:     if (Z=0) then goto $1824
$1821: $940E:  F: CALL $6F8 (_print_string_)
$1822: $06F8:  
$1823: $03 $00
-----          L: 
$1824: $940E:  F: CALL $A6B (_ms_printIdle_m)
$1825: $0A6B:  
$1826: $940E:  F: CALL $6F8 (_print_string_)
$1827: $06F8:  
$1828: $01 $3A $00 $00
-----          L: 
               C: if (ms_blink -= 0) then goto $1835 ...
$182A: $9100:     [$052A] -> r16
$182B: $052A:  
$182C: $3000:     r16 = $00
$182D: $F439:     if (Z=0) then goto $1835
               C: if (ms_posBuildActionEdit = 3) then goto $1835 ...
$182E: $9100:     [$074D] -> r16
$182F: $074D:  
$1830: $3003:     r16 = $03
$1831: $F419:     if (Z=0) then goto $1835
$1832: $940E:  F: CALL $6F8 (_print_string_)
$1833: $06F8:  
$1834: $03 $00
-----          L: 
$1835: $940E:  F: CALL $A41 (_ms_printIdle_s)
$1836: $0A41:  
$1837: $940E:  F: CALL $6F8 (_print_string_)
$1838: $06F8:  
$1839: $01 $20 $00 $00
-----          L: 
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $185C ...
$183B: $8109:     [Y+$01] -> r 16
$183C: $3000:     r16 = $00
$183D: $F0F1:     if (Z=1) then goto $185C
-----          L: 
               C: if (ms_blink -= 0) then goto $1849 ...
$183E: $9100:     [$052A] -> r16
$183F: $052A:  
$1840: $3000:     r16 = $00
$1841: $F439:     if (Z=0) then goto $1849
               C: if (ms_posBuildActionEdit = 4) then goto $1849 ...
$1842: $9100:     [$074D] -> r16
$1843: $074D:  
$1844: $3004:     r16 = $04
$1845: $F419:     if (Z=0) then goto $1849
$1846: $940E:  F: CALL $6F8 (_print_string_)
$1847: $06F8:  
$1848: $03 $00
-----          L: 
$1849: $940E:  F: CALL $A93 (_ms_printWork_m)
$184A: $0A93:  
$184B: $940E:  F: CALL $6F8 (_print_string_)
$184C: $06F8:  
$184D: $01 $3A $00 $00
-----          L: 
               C: if (ms_blink -= 0) then goto $185A ...
$184F: $9100:     [$052A] -> r16
$1850: $052A:  
$1851: $3000:     r16 = $00
$1852: $F439:     if (Z=0) then goto $185A
               C: if (ms_posBuildActionEdit = 5) then goto $185A ...
$1853: $9100:     [$074D] -> r16
$1854: $074D:  
$1855: $3005:     r16 = $05
$1856: $F419:     if (Z=0) then goto $185A
$1857: $940E:  F: CALL $6F8 (_print_string_)
$1858: $06F8:  
$1859: $03 $00
-----          L: 
$185A: $940E:  F: CALL $A7F (_ms_printWork_s)
$185B: $0A7F:  
-----          L: 
-----          L: 
$185C: $940E:  F: CALL $6F8 (_print_string_)
$185D: $06F8:  
$185E: $01 $00
$185F: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1860: $02DF:  
-----          L: 
               F: -> Y  ...
$1861: $91DF:     -> r29
$1862: $91CF:     -> r28
$1863: $9508:  F: RET (RET)
-----          V: _ms_naviBuildActionEdit
-----          L: 
               F: Y ->  ...
$1864: $93CF:     r28 ->
$1865: $93DF:     r29 ->
$1866: $940E:  F: CALL $B87 (_ms_get_ObjPointerY)
$1867: $0B87:  
-----          L: 
-----          L: 
$1868: $9100:  F: [$074D] -> r16 (ms_posBuildActionEdit -> r16)
$1869: $074D:  
               C: if (r16 -= 0) then goto $189A ...
$186A: $3000:     r16 = $00
$186B: $F571:     if (Z=0) then goto $189A
               C: if (EX_Enc_Pos = 1) then goto $1886 ...
$186C: $9100:     [$010A] -> r16
$186D: $010A:  
$186E: $3001:     r16 = $01
$186F: $F0B1:     if (Z=1) then goto $1886
$1870: $8109:  F: [Y+$01] -> r 16 ([Y+MS_OBJ_ADDR] -> r16)
               C: if (r16 = 0) then goto $1883 ...
$1871: $3000:     r16 = $00
$1872: $F081:     if (Z=1) then goto $1883
$1873: $700F:  F: r16 & $0F (r16 & #b00001111)
$1874: $8119:  F: [Y+$01] -> r 17 ([Y+MS_OBJ_ADDR] -> r17)
$1875: $7F10:  F: r17 & $F0 (r17 & #b11110000)
-----          L: 
$1876: $9503:  F: r16 ++ (r16++)
               C: if (r16 < 8) then goto $1880 ...
$1877: $3008:     r16 = $08
$1878: $F038:     if ( < ) then goto $1880
               C: if (r17 >= 7*16) then goto $187E ...
$1879: $3710:     r17 = $70
$187A: $F418:     if ( >= ) then goto $187E
$187B: $E000:  F: $00 -> r16 (0 -> r16)
$187C: $5F10:  F: r17 - $F0 (r17 + 16)
$187D: $C002:  J: goto $1880 (RJMP)
-----          L: 
$187E: $E007:  F: $07 -> r16 (7 -> r16)
$187F: $E710:  F: $70 -> r17 (7*16 -> r17)
-----          L: 
$1880: $2B01:  F: r16 ! r17 (r16 ! r17)
$1881: $8309:  F: r16 -> [Y+$01] (r16 -> [Y+MS_OBJ_ADDR])
$1882: $C087:  J: goto $190A (RJMP)
-----          L: 
               F: 1*16 + 0 -> [Y+MS_OBJ_ADDR]  ...
$1883: $E100:     $10 -> r16
$1884: $8309:     r16 -> [Y+$01]
$1885: $C084:  J: goto $190A (RJMP)
-----          L: 
$1886: $8109:  F: [Y+$01] -> r 16 ([Y+MS_OBJ_ADDR] -> r16)
               C: if (r16 = 1*16 + 0) then goto $1897 ...
$1887: $3100:     r16 = $10
$1888: $F071:     if (Z=1) then goto $1897
               C: if (r16 = 0) then goto $190A ...
$1889: $3000:     r16 = $00
$188A: $F409:     if (Z=0) then goto $188C
$188B: $C07E:     goto $190A (RJMP)
$188C: $700F:  F: r16 & $0F (r16 & #b00001111)
$188D: $8119:  F: [Y+$01] -> r 17 ([Y+MS_OBJ_ADDR] -> r17)
$188E: $7F10:  F: r17 & $F0 (r17 & #b11110000)
-----          L: 
$188F: $950A:  F: r16 -- (r16--)
               C: if (r16 < 9) then goto $1894 ...
$1890: $3009:     r16 = $09
$1891: $F010:     if ( < ) then goto $1894
$1892: $E007:  F: $07 -> r16 (7 -> r16)
$1893: $5110:  F: r17 - $10 (r17 - 16)
-----          L: 
$1894: $2B01:  F: r16 ! r17 (r16 ! r17)
$1895: $8309:  F: r16 -> [Y+$01] (r16 -> [Y+MS_OBJ_ADDR])
$1896: $C073:  J: goto $190A (RJMP)
-----          L: 
               F: 0 -> [Y+MS_OBJ_ADDR]  ...
$1897: $E000:     $00 -> r16
$1898: $8309:     r16 -> [Y+$01]
$1899: $C070:  J: goto $190A (RJMP)
-----          L: 
               C: if (r16 -= 1) then goto $18A6 ...
$189A: $3001:     r16 = $01
$189B: $F451:     if (Z=0) then goto $18A6
               C: if (EX_Enc_Pos=1) then goto $18A3 ...
$189C: $9100:     [$010A] -> r16
$189D: $010A:  
$189E: $3001:     r16 = $01
$189F: $F019:     if (Z=1) then goto $18A3
               F: 1->[Y+MS_OBJ_KEY]  ...
$18A0: $E001:     $01 -> r16
$18A1: $830A:     r16 -> [Y+$02]
$18A2: $C002:  J: goto $18A5 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
               F: 0->[Y+MS_OBJ_KEY]  ...
$18A3: $E000:     $00 -> r16
$18A4: $830A:     r16 -> [Y+$02]
-----          L: 
$18A5: $C064:  J: goto $190A (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Edit.alg    ***********
-----          L: 
               C: if (r16 -= 2) then goto $18C4 ...
$18A6: $3002:     r16 = $02
$18A7: $F4E1:     if (Z=0) then goto $18C4
               C: if (EX_Enc_Pos = 1) then goto $18B8 ...
$18A8: $9100:     [$010A] -> r16
$18A9: $010A:  
$18AA: $3001:     r16 = $01
$18AB: $F061:     if (Z=1) then goto $18B8
               C: if ([Y+MS_OBJ_TIME_IDLE_M]:Word < 99) then goto $18B7 ...
$18AC: $810C:     [Y+$04] -> r 16
$18AD: $3603:     r16 = $63
$18AE: $810D:     [Y+$05] -> r 16
$18AF: $4000:     r16 - $00 -
$18B0: $F430:     if ( >= ) then goto $18B7
               F: [Y+MS_OBJ_TIME_IDLE_M]:Word++  ...
$18B1: $810C:     [Y+$04] -> r 16
$18B2: $5F0F:     r16 - $FF
$18B3: $830C:     r16 -> [Y+$04]
$18B4: $810D:     [Y+$05] -> r 16
$18B5: $4F0F:     r16 - $FF -
$18B6: $830D:     r16 -> [Y+$05]
$18B7: $C052:  J: goto $190A (RJMP)
-----          L: 
               C: if ([Y+MS_OBJ_TIME_IDLE_M]:Word -= 0) then goto $18C3 ...
$18B8: $810C:     [Y+$04] -> r 16
$18B9: $3000:     r16 = $00
$18BA: $810D:     [Y+$05] -> r 16
$18BB: $4000:     r16 - $00 -
$18BC: $F031:     if (Z=1) then goto $18C3
               F: [Y+MS_OBJ_TIME_IDLE_M]:Word--  ...
$18BD: $810C:     [Y+$04] -> r 16
$18BE: $5001:     r16 - $01
$18BF: $830C:     r16 -> [Y+$04]
$18C0: $810D:     [Y+$05] -> r 16
$18C1: $4000:     r16 - $00 -
$18C2: $830D:     r16 -> [Y+$05]
$18C3: $C046:  J: goto $190A (RJMP)
-----          L: 
               C: if (r16 -= 3) then goto $18D8 ...
$18C4: $3003:     r16 = $03
$18C5: $F491:     if (Z=0) then goto $18D8
               C: if (EX_Enc_Pos = 1) then goto $18D1 ...
$18C6: $9100:     [$010A] -> r16
$18C7: $010A:  
$18C8: $3001:     r16 = $01
$18C9: $F039:     if (Z=1) then goto $18D1
               C: if ([Y+MS_OBJ_TIME_IDLE_S] < 59) then goto $18D0 ...
$18CA: $810B:     [Y+$03] -> r 16
$18CB: $330B:     r16 = $3B
$18CC: $F418:     if ( >= ) then goto $18D0
               F: [Y+MS_OBJ_TIME_IDLE_S]++  ...
$18CD: $810B:     [Y+$03] -> r 16
$18CE: $9503:     r16 ++
$18CF: $830B:     r16 -> [Y+$03]
$18D0: $C039:  J: goto $190A (RJMP)
-----          L: 
               C: if ([Y+MS_OBJ_TIME_IDLE_S] -= 0) then goto $18D7 ...
$18D1: $810B:     [Y+$03] -> r 16
$18D2: $3000:     r16 = $00
$18D3: $F019:     if (Z=1) then goto $18D7
               F: [Y+MS_OBJ_TIME_IDLE_S]--  ...
$18D4: $810B:     [Y+$03] -> r 16
$18D5: $950A:     r16 --
$18D6: $830B:     r16 -> [Y+$03]
$18D7: $C032:  J: goto $190A (RJMP)
-----          L: 
               C: if (r16 -= 4) then goto $18F6 ...
$18D8: $3004:     r16 = $04
$18D9: $F4E1:     if (Z=0) then goto $18F6
               C: if (EX_Enc_Pos = 1) then goto $18EA ...
$18DA: $9100:     [$010A] -> r16
$18DB: $010A:  
$18DC: $3001:     r16 = $01
$18DD: $F061:     if (Z=1) then goto $18EA
               C: if ([Y+MS_OBJ_TIME_WORK_M]:Word < 99) then goto $18E9 ...
$18DE: $810F:     [Y+$07] -> r 16
$18DF: $3603:     r16 = $63
$18E0: $8508:     [Y+$08] -> r 16
$18E1: $4000:     r16 - $00 -
$18E2: $F430:     if ( >= ) then goto $18E9
               F: [Y+MS_OBJ_TIME_WORK_M]:Word++  ...
$18E3: $810F:     [Y+$07] -> r 16
$18E4: $5F0F:     r16 - $FF
$18E5: $830F:     r16 -> [Y+$07]
$18E6: $8508:     [Y+$08] -> r 16
$18E7: $4F0F:     r16 - $FF -
$18E8: $8708:     r16 -> [Y+$08]
$18E9: $C020:  J: goto $190A (RJMP)
-----          L: 
               C: if ([Y+MS_OBJ_TIME_WORK_M]:Word -= 0) then goto $18F5 ...
$18EA: $810F:     [Y+$07] -> r 16
$18EB: $3000:     r16 = $00
$18EC: $8508:     [Y+$08] -> r 16
$18ED: $4000:     r16 - $00 -
$18EE: $F031:     if (Z=1) then goto $18F5
               F: [Y+MS_OBJ_TIME_WORK_M]:Word--  ...
$18EF: $810F:     [Y+$07] -> r 16
$18F0: $5001:     r16 - $01
$18F1: $830F:     r16 -> [Y+$07]
$18F2: $8508:     [Y+$08] -> r 16
$18F3: $4000:     r16 - $00 -
$18F4: $8708:     r16 -> [Y+$08]
$18F5: $C014:  J: goto $190A (RJMP)
-----          L: 
               C: if (r16 -= 5) then goto $190A ...
$18F6: $3005:     r16 = $05
$18F7: $F491:     if (Z=0) then goto $190A
               C: if (EX_Enc_Pos = 1) then goto $1903 ...
$18F8: $9100:     [$010A] -> r16
$18F9: $010A:  
$18FA: $3001:     r16 = $01
$18FB: $F039:     if (Z=1) then goto $1903
               C: if ([Y+MS_OBJ_TIME_WORK_S] < 59) then goto $1902 ...
$18FC: $810E:     [Y+$06] -> r 16
$18FD: $330B:     r16 = $3B
$18FE: $F418:     if ( >= ) then goto $1902
               F: [Y+MS_OBJ_TIME_WORK_S]++  ...
$18FF: $810E:     [Y+$06] -> r 16
$1900: $9503:     r16 ++
$1901: $830E:     r16 -> [Y+$06]
$1902: $C007:  J: goto $190A (RJMP)
-----          L: 
               C: if ([Y+MS_OBJ_TIME_WORK_S] -= 0) then goto $1909 ...
$1903: $810E:     [Y+$06] -> r 16
$1904: $3000:     r16 = $00
$1905: $F019:     if (Z=1) then goto $1909
               F: [Y+MS_OBJ_TIME_WORK_S]--  ...
$1906: $810E:     [Y+$06] -> r 16
$1907: $950A:     r16 --
$1908: $830E:     r16 -> [Y+$06]
$1909: $C000:  J: goto $190A (RJMP)
-----          L: 
-----          L: 
-----          L: _ms_naviBuildActionEdit_end
$190A: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
               F: -> Y  ...
$190B: $91DF:     -> r29
$190C: $91CF:     -> r28
$190D: $9508:  F: RET (RET)
-----          V: _ms_clickBuildActionEdit
-----          L: 
               F: Y ->  ...
$190E: $93CF:     r28 ->
$190F: $93DF:     r29 ->
$1910: $940E:  F: CALL $B87 (_ms_get_ObjPointerY)
$1911: $0B87:  
-----          L: 
-----          L: 
               F: ms_posBuildActionEdit++  ...
$1912: $9100:     [$074D] -> r16
$1913: $074D:  
$1914: $9503:     r16 ++
$1915: $9300:     r16 -> [$074D]
$1916: $074D:  
-----          L: 
               C: if ([Y+MS_OBJ_ADDR] -= 0) then goto $1923 ...
$1917: $8109:     [Y+$01] -> r 16
$1918: $3000:     r16 = $00
$1919: $F449:     if (Z=0) then goto $1923
               C: if (ms_posBuildActionEdit >= 4) then goto $1922 ...
$191A: $9100:     [$074D] -> r16
$191B: $074D:  
$191C: $3004:     r16 = $04
$191D: $F020:     if ( < ) then goto $1922
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$191E: $E001:     $01 -> r16
$191F: $9300:     r16 -> [$0528]
$1920: $0528:  
$1921: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1922: $C008:  J: goto $192B (RJMP)
-----          L: 
               C: if (ms_posBuildActionEdit >= 6) then goto $192B ...
$1923: $9100:     [$074D] -> r16
$1924: $074D:  
$1925: $3006:     r16 = $06
$1926: $F020:     if ( < ) then goto $192B
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$1927: $E001:     $01 -> r16
$1928: $9300:     r16 -> [$0528]
$1929: $0528:  
$192A: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
-----          L: 
$192B: $6031:  F: r19 ! $01 (1 -> f_displayVis)
               F: -> Y  ...
$192C: $91DF:     -> r29
$192D: $91CF:     -> r28
$192E: $9508:  F: RET (RET)
-----          V: _ms_visBuildActionMove
               F: Y ->  ...
$192F: $93CF:     r28 ->
$1930: $93DF:     r29 ->
$1931: $940E:  F: CALL $B87 (_ms_get_ObjPointerY)
$1932: $0B87:  
-----          L: 
$1933: $940E:  F: CALL $87F (_ms_printMessage)
$1934: $087F:  
-----          L: 
$1935: $940E:  F: CALL $6F8 (_print_string_)
$1936: $06F8:  
$1937: $4D $4F $56 $45 $20 $4C $49 $4E $45 $01 $00 $00
$193D: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$193E: $02DF:  
$193F: $CD19:  J: goto $1659 (RJMP)
-----          V: _ms_naviBuildActionMove
               F: Y ->  ...
$1940: $93CF:     r28 ->
$1941: $93DF:     r29 ->
$1942: $940E:  F: CALL $B87 (_ms_get_ObjPointerY)
$1943: $0B87:  
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $194B ...
$1944: $9100:     [$010A] -> r16
$1945: $010A:  
$1946: $3001:     r16 = $01
$1947: $F019:     if (Z=1) then goto $194B
$1948: $940E:  F: CALL $C1C (_ms_do_ObjSwitchUp)
$1949: $0C1C:  
$194A: $C002:  J: goto $194D (RJMP)
-----          L: 
$194B: $940E:  F: CALL $C03 (_ms_do_ObjSwitchDown)
$194C: $0C03:  
-----          L: 
$194D: $6031:  F: r19 ! $01 (1 -> f_displayVis)
               F: -> Y  ...
$194E: $91DF:     -> r29
$194F: $91CF:     -> r28
$1950: $9508:  F: RET (RET)
-----          V: _ms_clickBuildActionMove
-----          L: 
               F: MS_MODE_STOP_BUILD -> ms_mode  ...
$1951: $E001:     $01 -> r16
$1952: $9300:     r16 -> [$0528]
$1953: $0528:  
$1954: $6031:  F: r19 ! $01 (1 -> f_displayVis)
-----          L: 
$1955: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Manual.alg    ***********
-----          V: _ms_visManual
               F: Y ->  ...
$1956: $93CF:     r28 ->
$1957: $93DF:     r29 ->
-----          L: 
$1958: $940E:  F: CALL $87F (_ms_printMessage)
$1959: $087F:  
-----          L: 
$195A: $940E:  F: CALL $6F8 (_print_string_)
$195B: $06F8:  
$195C: $4D $41 $4E $55 $41 $4C $20 $43 $4F $4E $54 $52 $4F $4C $01 $00
$1964: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1965: $02DF:  
-----          L: 
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$1966: $E3C8:     $38 -> r28
$1967: $E0D5:     $05 -> r29
               F: -1 -> ms_posFrame  ...
$1968: $EF0F:     $FF -> r16
$1969: $9300:     r16 -> [$074F]
$196A: $074F:  
               F: -1 -> ms_objCurrentScan  ...
$196B: $9300:     r16 -> [$0749]
$196C: $0749:  
-----          L: 
               F: ms_posFrame++  ...
$196D: $9100:     [$074F] -> r16
$196E: $074F:  
$196F: $9503:     r16 ++
$1970: $9300:     r16 -> [$074F]
$1971: $074F:  
-----          L: 
               F: ms_objCurrentScan++  ...
$1972: $9100:     [$0749] -> r16
$1973: $0749:  
$1974: $9503:     r16 ++
$1975: $9300:     r16 -> [$0749]
$1976: $0749:  
-----          L: 
$1977: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if (ms_posFrame >= 6) then goto $19AC ...
$1978: $9100:     [$074F] -> r16
$1979: $074F:  
$197A: $3006:     r16 = $06
$197B: $F580:     if ( >= ) then goto $19AC
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $19AC ...
$197C: $8108:     [Y+$00] -> r 16
$197D: $3F0F:     r16 = $FF
$197E: $F169:     if (Z=1) then goto $19AC
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $1977 ...
$197F: $8108:     [Y+$00] -> r 16
$1980: $3001:     r16 = $01
$1981: $F7A9:     if (Z=0) then goto $1977
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $1977 ...
$1982: $8109:     [Y+$01] -> r 16
$1983: $3000:     r16 = $00
$1984: $F391:     if (Z=1) then goto $1977
-----          L: 
$1985: $9100:  F: [$0749] -> r16 (ms_objCurrentScan -> r16)
$1986: $0749:  
$1987: $5F0E:  F: r16 - $FE (r16 + 2)
               F: r16 - ms_posManual  ...
$1988: $9110:     [$074E] -> r17
$1989: $074E:  
$198A: $1B01:     r16 - r17
               C: if (r16 >= 6) then goto $1972 ...
$198B: $3006:     r16 = $06
$198C: $F728:     if ( >= ) then goto $1972
-----          L: 
-----          L: 
$198D: $9100:  F: [$074F] -> r16 (ms_posFrame -> r16)
$198E: $074F:  
               F: r16 + ms_posManual  ...
$198F: $9110:     [$074E] -> r17
$1990: $074E:  
$1991: $0F01:     r16 + r17
               C: if (r16 >= 2) then goto $199C ...
$1992: $3002:     r16 = $02
$1993: $F440:     if ( >= ) then goto $199C
$1994: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1995: $02DF:  
               F: ms_posFrame++  ...
$1996: $9100:     [$074F] -> r16
$1997: $074F:  
$1998: $9503:     r16 ++
$1999: $9300:     r16 -> [$074F]
$199A: $074F:  
$199B: $CFF1:  J: goto $198D (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_posFrame=2) then goto $19A4 ...
$199C: $9100:     [$074F] -> r16
$199D: $074F:  
$199E: $3002:     r16 = $02
$199F: $F021:     if (Z=1) then goto $19A4
$19A0: $940E:  F: CALL $6F8 (_print_string_)
$19A1: $06F8:  
$19A2: $20 $00
$19A3: $C003:  J: goto $19A7 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$19A4: $940E:  F: CALL $6F8 (_print_string_)
$19A5: $06F8:  
$19A6: $3E $00
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Manual.alg    ***********
-----          L: 
$19A7: $940E:  F: CALL $9FE (_ms_printAddress)
$19A8: $09FE:  
-----          L: 
$19A9: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$19AA: $02DF:  
$19AB: $CFC1:  J: goto $196D (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_posFrame >= 6) then goto $19B8 ...
$19AC: $9100:     [$074F] -> r16
$19AD: $074F:  
$19AE: $3006:     r16 = $06
$19AF: $F440:     if ( >= ) then goto $19B8
$19B0: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$19B1: $02DF:  
               F: ms_posFrame++  ...
$19B2: $9100:     [$074F] -> r16
$19B3: $074F:  
$19B4: $9503:     r16 ++
$19B5: $9300:     r16 -> [$074F]
$19B6: $074F:  
$19B7: $CFF4:  J: goto $19AC (RJMP)
-----          L: 
-----          L: 
               F: -> Y  ...
$19B8: $91DF:     -> r29
$19B9: $91CF:     -> r28
$19BA: $9508:  F: RET (RET)
-----          V: _ms_visManual_alt
               F: Y ->  ...
$19BB: $93CF:     r28 ->
$19BC: $93DF:     r29 ->
-----          L: 
$19BD: $940E:  F: CALL $87F (_ms_printMessage)
$19BE: $087F:  
-----          L: 
$19BF: $940E:  F: CALL $6F8 (_print_string_)
$19C0: $06F8:  
$19C1: $4D $41 $4E $55 $41 $4C $20 $43 $4F $4E $54 $52 $4F $4C $01 $00
$19C9: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$19CA: $02DF:  
-----          L: 
$19CB: $E000:  F: $00 -> r16 (0 -> r16)
$19CC: $9110:  F: [$0759] -> r17 (ms_preScan -> r17)
$19CD: $0759:  
-----          L: 
$19CE: $9516:  F: r17 >> (r17>>)
$19CF: $F408:  C: if (C=0) then goto $19D1 (C = 1)
$19D0: $5F08:  F: r16 - $F8 (r16 + 8)
               C: if (r17 -= 0) then goto $19CE ...
$19D1: $3010:     r17 = $00
$19D2: $F7D9:     if (Z=0) then goto $19CE
-----          L: 
-----          L: 
               F: -1 -> ms_posFrame  ...
$19D3: $EF0F:     $FF -> r16
$19D4: $9300:     r16 -> [$074F]
$19D5: $074F:  
               F: -1 -> ms_objCurrentScan  ...
$19D6: $9300:     r16 -> [$0749]
$19D7: $0749:  
-----          L: 
               F: ms_posFrame++  ...
$19D8: $9100:     [$074F] -> r16
$19D9: $074F:  
$19DA: $9503:     r16 ++
$19DB: $9300:     r16 -> [$074F]
$19DC: $074F:  
-----          L: 
               F: ms_objCurrentScan++  ...
$19DD: $9100:     [$0749] -> r16
$19DE: $0749:  
$19DF: $9503:     r16 ++
$19E0: $9300:     r16 -> [$0749]
$19E1: $0749:  
-----          L: 
-----          L: 
$19E2: $9100:  F: [$0749] -> r16 (ms_objCurrentScan -> r16)
$19E3: $0749:  
$19E4: $5F0E:  F: r16 - $FE (r16 + 2)
               F: r16 - ms_posManual  ...
$19E5: $9110:     [$074E] -> r17
$19E6: $074E:  
$19E7: $1B01:     r16 - r17
               C: if (r16 >= 6) then goto $19DD ...
$19E8: $3006:     r16 = $06
$19E9: $F798:     if ( >= ) then goto $19DD
-----          L: 
-----          L: 
$19EA: $9100:  F: [$074F] -> r16 (ms_posFrame -> r16)
$19EB: $074F:  
               F: r16 + ms_posManual  ...
$19EC: $9110:     [$074E] -> r17
$19ED: $074E:  
$19EE: $0F01:     r16 + r17
               C: if (r16 >= 2) then goto $19F9 ...
$19EF: $3002:     r16 = $02
$19F0: $F440:     if ( >= ) then goto $19F9
$19F1: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$19F2: $02DF:  
               F: ms_posFrame++  ...
$19F3: $9100:     [$074F] -> r16
$19F4: $074F:  
$19F5: $9503:     r16 ++
$19F6: $9300:     r16 -> [$074F]
$19F7: $074F:  
$19F8: $CFF1:  J: goto $19EA (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_posFrame=2) then goto $1A01 ...
$19F9: $9100:     [$074F] -> r16
$19FA: $074F:  
$19FB: $3002:     r16 = $02
$19FC: $F021:     if (Z=1) then goto $1A01
$19FD: $940E:  F: CALL $6F8 (_print_string_)
$19FE: $06F8:  
$19FF: $20 $00
$1A00: $C003:  J: goto $1A04 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
$1A01: $940E:  F: CALL $6F8 (_print_string_)
$1A02: $06F8:  
$1A03: $3E $00
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Manual.alg    ***********
-----          L: 
$1A04: $940E:  F: CALL $9FE (_ms_printAddress)
$1A05: $09FE:  
-----          L: 
$1A06: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1A07: $02DF:  
$1A08: $CFCF:  J: goto $19D8 (RJMP)
-----          L: 
-----          L: 
-----          L: 
               C: if (ms_posFrame >= 6) then goto $1A15 ...
$1A09: $9100:     [$074F] -> r16
$1A0A: $074F:  
$1A0B: $3006:     r16 = $06
$1A0C: $F440:     if ( >= ) then goto $1A15
$1A0D: $940E:  F: CALL $2DF (_ssd_clrRestLine)
$1A0E: $02DF:  
               F: ms_posFrame++  ...
$1A0F: $9100:     [$074F] -> r16
$1A10: $074F:  
$1A11: $9503:     r16 ++
$1A12: $9300:     r16 -> [$074F]
$1A13: $074F:  
$1A14: $CFF4:  J: goto $1A09 (RJMP)
-----          L: 
-----          L: 
               F: -> Y  ...
$1A15: $91DF:     -> r29
$1A16: $91CF:     -> r28
$1A17: $9508:  F: RET (RET)
-----          V: _ms_naviManual_alt
$1A18: $940E:  F: CALL $B3F (_ms_get_visRelayNumber)
$1A19: $0B3F:  
               C: if (ms_objNumber -= 0) then goto $1A23 ...
$1A1A: $9100:     [$0748] -> r16
$1A1B: $0748:  
$1A1C: $3000:     r16 = $00
$1A1D: $F029:     if (Z=1) then goto $1A23
               F: ms_objNumber--  ...
$1A1E: $9100:     [$0748] -> r16
$1A1F: $0748:  
$1A20: $950A:     r16 --
$1A21: $9300:     r16 -> [$0748]
$1A22: $0748:  
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $1A34 ...
$1A23: $9100:     [$010A] -> r16
$1A24: $010A:  
$1A25: $3001:     r16 = $01
$1A26: $F069:     if (Z=1) then goto $1A34
               C: if (ms_posManual < ms_objNumber) then goto $1A32 ...
$1A27: $9100:     [$074E] -> r16
$1A28: $074E:  
$1A29: $9110:     [$0748] -> r17
$1A2A: $0748:  
$1A2B: $1701:     r16 = r17
$1A2C: $F428:     if ( >= ) then goto $1A32
               F: ms_posManual++  ...
$1A2D: $9100:     [$074E] -> r16
$1A2E: $074E:  
$1A2F: $9503:     r16 ++
$1A30: $9300:     r16 -> [$074E]
$1A31: $074E:  
-----          L: 
$1A32: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1A33: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posManual >= 1) then goto $1A3D ...
$1A34: $9100:     [$074E] -> r16
$1A35: $074E:  
$1A36: $3001:     r16 = $01
$1A37: $F028:     if ( < ) then goto $1A3D
               F: ms_posManual--  ...
$1A38: $9100:     [$074E] -> r16
$1A39: $074E:  
$1A3A: $950A:     r16 --
$1A3B: $9300:     r16 -> [$074E]
$1A3C: $074E:  
$1A3D: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1A3E: $9508:  F: RET (RET)
-----          V: _ms_clickManual_alt
               F: Y ->  ...
$1A3F: $93CF:     r28 ->
$1A40: $93DF:     r29 ->
-----          L: 
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$1A41: $E3C8:     $38 -> r28
$1A42: $E0D5:     $05 -> r29
               F: -1 -> ms_objCurrentScan  ...
$1A43: $EF0F:     $FF -> r16
$1A44: $9300:     r16 -> [$0749]
$1A45: $0749:  
-----          L: 
-----          L: 
               F: ms_objCurrentScan++  ...
$1A46: $9100:     [$0749] -> r16
$1A47: $0749:  
$1A48: $9503:     r16 ++
$1A49: $9300:     r16 -> [$0749]
$1A4A: $0749:  
-----          L: 
$1A4B: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $1A65 ...
$1A4C: $8108:     [Y+$00] -> r 16
$1A4D: $3F0F:     r16 = $FF
$1A4E: $F0B1:     if (Z=1) then goto $1A65
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $1A4B ...
$1A4F: $8108:     [Y+$00] -> r 16
$1A50: $3001:     r16 = $01
$1A51: $F7C9:     if (Z=0) then goto $1A4B
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $1A4B ...
$1A52: $8109:     [Y+$01] -> r 16
$1A53: $3000:     r16 = $00
$1A54: $F3B1:     if (Z=1) then goto $1A4B
               C: if (ms_objCurrentScan -= ms_posManual) then goto $1A46 ...
$1A55: $9100:     [$0749] -> r16
$1A56: $0749:  
$1A57: $9110:     [$074E] -> r17
$1A58: $074E:  
$1A59: $1701:     r16 = r17
$1A5A: $F759:     if (Z=0) then goto $1A46
               C: if ([Y+MS_OBJ_ORDER]=0) then goto $1A61 ...
$1A5B: $8509:     [Y+$09] -> r 16
$1A5C: $3000:     r16 = $00
$1A5D: $F019:     if (Z=1) then goto $1A61
               F: 0->[Y+MS_OBJ_ORDER]  ...
$1A5E: $E000:     $00 -> r16
$1A5F: $8709:     r16 -> [Y+$09]
$1A60: $C002:  J: goto $1A63 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
               F: 255->[Y+MS_OBJ_ORDER]  ...
$1A61: $EF0F:     $FF -> r16
$1A62: $8709:     r16 -> [Y+$09]
-----          L: 
               F: 128->[Y+MS_OBJ_STATUS]  ...
$1A63: $E800:     $80 -> r16
$1A64: $870A:     r16 -> [Y+$0A]
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Manual.alg    ***********
-----          L: 
-----          L: 
$1A65: $6031:  F: r19 ! $01 (1 -> f_displayVis)
               F: -> Y  ...
$1A66: $91DF:     -> r29
$1A67: $91CF:     -> r28
$1A68: $9508:  F: RET (RET)
-----          V: _ms_naviManual
$1A69: $940E:  F: CALL $B3F (_ms_get_visRelayNumber)
$1A6A: $0B3F:  
               C: if (ms_objNumber -= 0) then goto $1A74 ...
$1A6B: $9100:     [$0748] -> r16
$1A6C: $0748:  
$1A6D: $3000:     r16 = $00
$1A6E: $F029:     if (Z=1) then goto $1A74
               F: ms_objNumber--  ...
$1A6F: $9100:     [$0748] -> r16
$1A70: $0748:  
$1A71: $950A:     r16 --
$1A72: $9300:     r16 -> [$0748]
$1A73: $0748:  
-----          L: 
               C: if (EX_Enc_Pos = 1) then goto $1A85 ...
$1A74: $9100:     [$010A] -> r16
$1A75: $010A:  
$1A76: $3001:     r16 = $01
$1A77: $F069:     if (Z=1) then goto $1A85
               C: if (ms_posManual < ms_objNumber) then goto $1A83 ...
$1A78: $9100:     [$074E] -> r16
$1A79: $074E:  
$1A7A: $9110:     [$0748] -> r17
$1A7B: $0748:  
$1A7C: $1701:     r16 = r17
$1A7D: $F428:     if ( >= ) then goto $1A83
               F: ms_posManual++  ...
$1A7E: $9100:     [$074E] -> r16
$1A7F: $074E:  
$1A80: $9503:     r16 ++
$1A81: $9300:     r16 -> [$074E]
$1A82: $074E:  
-----          L: 
$1A83: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1A84: $9508:  F: RET (RET)
-----          L: 
               C: if (ms_posManual >= 1) then goto $1A8E ...
$1A85: $9100:     [$074E] -> r16
$1A86: $074E:  
$1A87: $3001:     r16 = $01
$1A88: $F028:     if ( < ) then goto $1A8E
               F: ms_posManual--  ...
$1A89: $9100:     [$074E] -> r16
$1A8A: $074E:  
$1A8B: $950A:     r16 --
$1A8C: $9300:     r16 -> [$074E]
$1A8D: $074E:  
$1A8E: $6031:  F: r19 ! $01 (1 -> f_displayVis)
$1A8F: $9508:  F: RET (RET)
-----          V: _ms_clickManual
               F: Y ->  ...
$1A90: $93CF:     r28 ->
$1A91: $93DF:     r29 ->
-----          L: 
               F: @ms_objTable - MS_OBJ_SIZE -> Y  ...
$1A92: $E3C8:     $38 -> r28
$1A93: $E0D5:     $05 -> r29
               F: -1 -> ms_objCurrentScan  ...
$1A94: $EF0F:     $FF -> r16
$1A95: $9300:     r16 -> [$0749]
$1A96: $0749:  
-----          L: 
-----          L: 
               F: ms_objCurrentScan++  ...
$1A97: $9100:     [$0749] -> r16
$1A98: $0749:  
$1A99: $9503:     r16 ++
$1A9A: $9300:     r16 -> [$0749]
$1A9B: $0749:  
-----          L: 
$1A9C: $9660:  F: r28,r29 + $10 (Y + MS_OBJ_SIZE)
-----          L: 
               C: if ([Y+MS_OBJ_TYPE] = MS_TYPE_LIST_END) then goto $1AB6 ...
$1A9D: $8108:     [Y+$00] -> r 16
$1A9E: $3F0F:     r16 = $FF
$1A9F: $F0B1:     if (Z=1) then goto $1AB6
               C: if ([Y+MS_OBJ_TYPE] -= MS_TYPE_RELAY) then goto $1A9C ...
$1AA0: $8108:     [Y+$00] -> r 16
$1AA1: $3001:     r16 = $01
$1AA2: $F7C9:     if (Z=0) then goto $1A9C
               C: if ([Y+MS_OBJ_ADDR] = 0) then goto $1A9C ...
$1AA3: $8109:     [Y+$01] -> r 16
$1AA4: $3000:     r16 = $00
$1AA5: $F3B1:     if (Z=1) then goto $1A9C
               C: if (ms_objCurrentScan -= ms_posManual) then goto $1A97 ...
$1AA6: $9100:     [$0749] -> r16
$1AA7: $0749:  
$1AA8: $9110:     [$074E] -> r17
$1AA9: $074E:  
$1AAA: $1701:     r16 = r17
$1AAB: $F759:     if (Z=0) then goto $1A97
               C: if ([Y+MS_OBJ_ORDER]=0) then goto $1AB2 ...
$1AAC: $8509:     [Y+$09] -> r 16
$1AAD: $3000:     r16 = $00
$1AAE: $F019:     if (Z=1) then goto $1AB2
               F: 0->[Y+MS_OBJ_ORDER]  ...
$1AAF: $E000:     $00 -> r16
$1AB0: $8709:     r16 -> [Y+$09]
$1AB1: $C002:  J: goto $1AB4 (RJMP)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
               F: 255->[Y+MS_OBJ_ORDER]  ...
$1AB2: $EF0F:     $FF -> r16
$1AB3: $8709:     r16 -> [Y+$09]
-----          L: 
               F: 128->[Y+MS_OBJ_STATUS]  ...
$1AB4: $E800:     $80 -> r16
$1AB5: $870A:     r16 -> [Y+$0A]
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Manual.alg    ***********
-----          L: 
-----          L: 
$1AB6: $6031:  F: r19 ! $01 (1 -> f_displayVis)
               F: -> Y  ...
$1AB7: $91DF:     -> r29
$1AB8: $91CF:     -> r28
$1AB9: $9508:  F: RET (RET)
-----          V: _ms_do_preScan
-----          L: 
               F: 7 -> ms_objCurrentScan  ...
$1ABA: $E007:     $07 -> r16
$1ABB: $9300:     r16 -> [$0749]
$1ABC: $0749:  
-----          L: 
$1ABD: $7F3D:  F: r19 & $FD (0 -> f_arbitrationLost)
$1ABE: $940E:  F: CALL $24F (_iic_start)
$1ABF: $024F:  
$1AC0: $9100:  F: [$0749] -> r16 (ms_objCurrentScan -> r16)
$1AC1: $0749:  
$1AC2: $0F00:  F: << r16 (<< r16)
$1AC3: $6400:  F: r16 ! $40 (r16 ! #b01000000)
$1AC4: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$1AC5: $C004:  C: goto $1ACA (RJMP) (f_arbitrationLost = 1)
$1AC6: $9300:  F: r16 -> [$00BB] (r16 -> TWDR)
$1AC7: $00BB:  
$1AC8: $940E:  F: CALL $25F (_iic_send_)
$1AC9: $025F:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\iic.alg    ***********
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Manual.alg    ***********
-----          L: 
               C: if (iic_status -= MT_SLA_ACK) then goto $1AD1 ...
$1ACA: $3148:     r20 = $18
$1ACB: $F429:     if (Z=0) then goto $1AD1
               F: 1 -> ms_preScan.0  ...
$1ACC: $9100:     [$0759] -> r16
$1ACD: $0759:  
$1ACE: $6001:     r16 ! $01
$1ACF: $9300:     r16 -> [$0759]
$1AD0: $0759:  
-----          L: 
$1AD1: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$1AD2: $C005:  C: goto $1AD8 (RJMP) (f_arbitrationLost = 1)
               F: 128+0 -> TWDR  ...
$1AD3: $E800:     $80 -> r16
$1AD4: $9300:     r16 -> [$00BB]
$1AD5: $00BB:  
$1AD6: $940E:  F: CALL $25F (_iic_send_)
$1AD7: $025F:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\iic.alg    ***********
-----          L: 
$1AD8: $940E:  F: CALL $271 (_iic_stop)
$1AD9: $0271:  
$1ADA: $FD31:  C: if (r19.1=0 then SKIP (f_arbitrationLost = 1)
$1ADB: $CFE1:  C: goto $1ABD (RJMP) (f_arbitrationLost = 1)
               F: << ms_preScan  ...
$1ADC: $9100:     [$0759] -> r16
$1ADD: $0759:  
$1ADE: $0F00:     << r16
$1ADF: $9300:     r16 -> [$0759]
$1AE0: $0759:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\ms_Manual.alg    ***********
-----          L: 
               C: if (ms_objCurrentScan --) then goto $1ABD ...
$1AE1: $9100:     [$0749] -> r16
$1AE2: $0749:  
$1AE3: $5001:     r16 - $01
$1AE4: $9300:     r16 -> [$0749]
$1AE5: $0749:  
$1AE6: $F6B1:     if (Z=0) then goto $1ABD
-----          L: 
$1AE7: $9508:  F: RET (RET)
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          V: Reset
$1AE8: $EF0F:  S: $FF -> r16 ($FF->r16)
$1AE9: $BF0D:  S: r16 -> p$3D (r16->p61)
$1AEA: $E008:  S: $08 -> r16 ($08->r16)
$1AEB: $BF0E:  S: r16 -> p$3E (r16->p62)
-----          L: 
$1AEC: $9100:  S: [$0060] -> r16 (WDTCSR->r16)
$1AED: $0060:  
$1AEE: $6108:  S: r16 ! $18 (r16 ! $18)
$1AEF: $9300:  S: r16 -> [$0060] (r16->WDTCSR)
$1AF0: $0060:  
$1AF1: $E00E:  S: $0E -> r16 ($0E->r16)
$1AF2: $9300:  S: r16 -> [$0060] (r16->WDTCSR)
$1AF3: $0060:  
$1AF4: $95A8:  S: WDR (WDR)
-----          L: 
               F: 100-1 -> r16:Word  ...
$1AF5: $E603:     $63 -> r16
$1AF6: $E010:     $00 -> r17
$1AF7: $940E:  F: CALL $34 (_Wait_ms_)
$1AF8: $0034:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Wait.alg    ***********
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
               F: SRAM_Org -> Z  ...
$1AF9: $E0E0:     $00 -> r30
$1AFA: $E0F1:     $01 -> r31
$1AFB: $E000:  F: $00 -> r16 (0 -> r16)
-----          L: 
$1AFC: $9301:  F: r16 -> [Z++] (r16 -> [Z++])
               C: if (Z -= SRAM_Size) then goto $1AFC ...
$1AFD: $30E0:     r30 = $00
$1AFE: $E019:     $09 -> r17
$1AFF: $07F1:     r31 = r17=
$1B00: $F7D9:     if (Z=0) then goto $1AFC
-----          L: 
               F: 30 -> Z  ...
$1B01: $E1EE:     $1E -> r30
$1B02: $E0F0:     $00 -> r31
-----          L: 
$1B03: $95EA:  F: r30 -- (ZL --)
$1B04: $8300:  F: r16 -> [Z] (r16 -> [Z])
$1B05: $F7E9:  C: if (Z=0) then goto $1B03 (-=)
-----          L: 
-----          L: 
$1B06: $2733:  F: ^ r19 (^Flags)
-----          L: 
-----          L: 
$1B07: $940E:  F: CALL $55 (_PWM_Init)
$1B08: $0055:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1B09: $940E:  F: CALL $A5 (_EX_Key_Init)
$1B0A: $00A5:  
-----          L: 
$1B0B: $940E:  F: CALL $DD (_EX_Enc_Init)
$1B0C: $00DD:  
-----          L: 
$1B0D: $940E:  F: CALL $139 (_UART_Init)
$1B0E: $0139:  
-----          L: 
$1B0F: $940E:  F: CALL $21E (_STimer_Init)
$1B10: $021E:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1B11: $940E:  F: CALL $240 (_iic_init)
$1B12: $0240:  
-----          L: 
$1B13: $940E:  F: CALL $533 (_ssd1306_Init)
$1B14: $0533:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1B15: $940E:  F: CALL $ABD (_ms_init)
$1B16: $0ABD:  
-----          L: 
$1B17: $940E:  F: CALL $CD6 (_ADC_init)
$1B18: $0CD6:  
-----          L: 
-----          L: 
$1B19: $9478:  F: 1 -> I (1 -> I)
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Programm.alg    ***********
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
               F: 1000/STIMER_PERIOD_CALL -> [@STimer_Counter + DO_SEC]  ...
$1B1A: $E604:     $64 -> r16
$1B1B: $9300:     r16 -> [$0515]
$1B1C: $0515:  
               F: 1000/STIMER_PERIOD_CALL -> [@STimer_Counter_Stop + DO_SEC]  ...
$1B1D: $9300:     r16 -> [$0519]
$1B1E: $0519:  
               F: 500/STIMER_PERIOD_CALL -> [@STimer_Counter + DO_BLINK]  ...
$1B1F: $E302:     $32 -> r16
$1B20: $9300:     r16 -> [$0517]
$1B21: $0517:  
               F: 500/STIMER_PERIOD_CALL -> [@STimer_Counter_Stop + DO_BLINK]  ...
$1B22: $9300:     r16 -> [$051B]
$1B23: $051B:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1B24: $6038:  F: r19 ! $08 (1 -> f_resetAllRelay)
-----          L: 
-----          L: 
               C: if (ms_mode-= MS_MODE_STOP_MANUAL) then goto $1B29 ...
$1B25: $9100:     [$0528] -> r16
$1B26: $0528:  
$1B27: $3002:     r16 = $02
$1B28: $F401:     if (Z=0) then goto $1B29
-----          L: 
-----          L: 
$1B29: $FF32:  C: if (r19.2=1 then SKIP (f_doSec = 0)
$1B2A: $C005:  C: goto $1B30 (RJMP) (f_doSec = 0)
$1B2B: $940E:  F: CALL $D63 (_ms_ConditionsSwitchProg)
$1B2C: $0D63:  
$1B2D: $940E:  F: CALL $C47 (_ms_timersWork)
$1B2E: $0C47:  
$1B2F: $7F3B:  F: r19 & $FB (0 -> f_doSec)
-----          L: 
-----          L: 
$1B30: $FF30:  C: if (r19.0=1 then SKIP (f_displayVis = 0)
$1B31: $C00E:  C: goto $1B40 (RJMP) (f_displayVis = 0)
$1B32: $940E:  F: CALL $8B0 (_ms_do_order)
$1B33: $08B0:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Wait.alg    ***********
-----          L: 
               F: (100*CPU_Clock_Frequency/1000000-2)/4 -> r16:Word  ...
$1B34: $E80F:     $8F -> r16
$1B35: $E011:     $01 -> r17
-----          L: 
               C: if (r16:Word --) then goto $1B36 ...
$1B36: $5001:     r16 - $01
$1B37: $4010:     r17 - $00 -
$1B38: $F7E9:     if (Z=0) then goto $1B36
$1B39: $0000:  F: NOP (NOP)
-----          L: 
-----          L: 
-----          L: 
$1B3A: $0000:  F: NOP (NOP)
-----          L: 
$1B3B: $0000:  F: NOP (NOP)
-----          L: 
$1B3C: $7F3E:  F: r19 & $FE (0 -> f_displayVis)
$1B3D: $7F3D:  F: r19 & $FD (0 -> f_arbitrationLost)
$1B3E: $940E:  F: CALL $98F (_ms_do_vis)
$1B3F: $098F:  
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\Programm.alg    ***********
-----          L: 
$1B40: $95A8:  F: WDR (WDR)
-----          L: 
$1B41: $FF33:  C: if (r19.3=1 then SKIP (f_resetAllRelay = 0)
$1B42: $C003:  C: goto $1B46 (RJMP) (f_resetAllRelay = 0)
$1B43: $940E:  F: CALL $8DA (_ms_resetAllRelay)
$1B44: $08DA:  
$1B45: $7F37:  F: r19 & $F7 (0 -> f_resetAllRelay)
-----          L: 
$1B46: $CFDE:  J: goto $1B25 (RJMP)
-----          L: 
*********   D:\Projects\MultiSwitch\Firmwares\MultiSwitch_MCU_base\main.alp    ***********
-----          L: 
-----          L: 
-----          L: 
$1B47: $CFFF:  J: goto $1B47 (RJMP)
